{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/ConfirmDeleteAccount.js","components/CreateEditAccountDialog.js","components/ResetPasswordDialog.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/FeedPage.js","components/ConfirmDeleteRound.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/Rounds.js","components/RatesModal.js","components/MoreModal.js","components/BookingPage.js","components/AllCourses.js","components/NearbyCourses.js","components/AdvancedSearch.js","components/SpecificCourses.js","components/AddCourses.js","components/CoursesPage.js","components/AboutBox.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","COURSES_NEARBY","COURSES_ALL","COURSES_ADD","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","this","aboutOpen","onClick","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","type","profilePicURL","displayName","localAccount","editAccount","showAbout","logOut","ModeBar","ConfirmDeleteAccount","handleChange","match","emailRef","current","value","email","state","emailMatches","setState","createRef","focus","role","close","ref","onChange","deleteAccount","disabled","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","setCustomValidity","event","formUpdated","origAccountInfo","formIsUpdated","target","name","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","securityQuestion","securityAnswer","setDefaultDisplayName","handleSubmit","a","preventDefault","userData","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","confirmDelete","confirmDeleteAccount","e","newUserRef","userId","json","parse","cancel","onSubmit","autocomplete","size","placeholder","pattern","required","onBlur","accept","profilePic","profilePicDataURL","rows","cols","maxLength","ResetPasswordDialog","resetPasswordRef","resetPasswordRepeatRef","resetPassword","errorMsg","checkForSubmit","code","cancelResetPassword","onKeyUp","LookUpAccountDialog","handleLookUpAccount","response","obj","authStrategy","getSecurityAnswer","ErrMsg","errMsg","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","emailInputRef","passwordInputRef","window","open","statusMsg","accountCreateDone","msg","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPaswordDialog","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","pw","showResetPasswordDialog","deleted","closeStatusMsg","githubIcon","githubLabel","loginMsg","newAccountCreated","googleIcon","googleLabel","htmlFor","style","padding","fontSize","FeedPage","fontStyle","ConfirmDeleteRound","deleteRound","RoundsTable","editRound","setEditId","showConfirmDelete","setDeleteId","renderTable","table","r","push","key","rounds","date","substring","course","Number","strokes","minutes","seconds","keys","colSpan","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","faIcon","btnLabel","roundData","saveRound","min","sec","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","max","FloatingButton","handleClick","Rounds","addRound","newData","userObj","refreshOnUpdate","editId","_id","deleteId","val","closeErrorMsg","icon","RatesModal","getSearchedCourse","then","Error","statusText","console","log","thisCourse","courseName","Col","marginTop","marginBottom","Card","display","Img","variant","picture","Body","Title","location","Text","rateStandard","rateSenior","Footer","catch","error","handleClose","Container","fluid","Row","noGutters","MoreModal","toggleReviewClicked","reviewClicked","setErrorMsg","rating","review","yardage","runningDistance","timePar","bestScore","recordHolder","Button","editCourse","BookingPage","handleBookTeeTime","alert","bookingTime","bookingDate","for","AllCourses","toggleGetCourseClicked","getCourseClicked","toggleMoreClicked","item","more","toggleGetRatesClicked","getRatesButtonClicked","toggleBookTeeTimeClicked","bookTeeTimeClicked","getCourse","map","c","NearbyCourses","AdvancedSearch","i","allCourses","searchStart","searchType","len","setFilteredData","handleSwitch","filteredCourses","SpecificCourses","toggleAddCourseClicked","addCourseClicked","toggleAdvancedSearchClicked","advancedSearchClicked","setSelectButtonValue","newVal","selectButtonValue","setSearchTrue","setSearchFalse","setSearchCourseClickedTrue","searchCourseClicked","setSearchCourseClickedFalse","handleInputChange","query","prevState","filteredData","data","filter","element","toLowerCase","includes","getRates","data-tip","effect","AddCourses","addCourse","courseData","CoursesPage","AboutBox","textAlign","href","modeTitle","modeToPage","App","newMode","handleChangeMode","openMenu","closeMenu","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","setUserObjType","newType","editAccountDone","showAboutDialog","isAuthenticated","user","ModePage","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dd9ad3b7.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\",\r\n    COURSES_NEARBY: \"CoursesMode-Nearby\",\r\n    COURSES_ALL: \"CoursesMode-All\",\r\n    COURSES_ADD: \"CoursesMode-ADD\"\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.COURSES_ADD || \r\n          this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode === AppMode.COURSES_ADD) {\r\n      this.props.changeMode(AppMode.COURSES);\r\n    } \r\n    else if (this.props.mode !== AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className={\"navbar\" + (this.props.aboutOpen ? \" ignore-click\":\"\")}>  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n      width=\"38px\" />\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\nimport App from './App.js';\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\r\n        <a className=\"sidemenu-item \">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n    case AppMode.COURSES_NEARBY:\r\n    case AppMode.COURSES_ALL:\r\n    case AppMode.COURSES_ADD:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES)}>\r\n            <span className=\"fa fa-search\"></span>&nbsp;Specific Course</a>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_NEARBY)}>\r\n            <span className=\"fa fa-map-marker\"></span>&nbsp;Nearby Courses</a>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_ALL)}>\r\n            <span className=\"fa fa-th-list\"></span>&nbsp;All Speedgolf-Friendly Courses</a>\r\n        {this.props.type === \"operator\" ? <a id=\"addCourse\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_ADD)}>\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a> : null}\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.profilePicURL} height='60' width='60' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n        </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          {this.props.localAccount ? \r\n            <a id=\"accountBtn\" className=\"sidemenu-item\" onClick={this.props.editAccount}>\r\n              <span className=\"fa fa-user\"></span>&nbsp;Account</a> : null}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n          \" invisible\" : (this.props.menuOpen || this.props.aboutOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.ROUNDS || \r\n               this.props.mode === AppMode.ROUNDS_EDITROUND || \r\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                  \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a id=\"courseMode\" className={((this.props.mode === AppMode.COURSES) || \r\n        (this.props.mode === AppMode.COURSES_NEARBY) || \r\n        (this.props.mode === AppMode.COURSES_ALL) ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\n\r\nclass ConfirmDeleteAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {emailMatches: false};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.emailRef.current.focus();\r\n    }\r\n\r\n    handleChange = () => {\r\n        const match = (this.emailRef.current.value === this.props.email);\r\n        if (match != this.state.emailMatches) {\r\n            this.setState({emailMatches: match});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete your account? <br />\r\n                 <i>This action cannot be undone.</i></p>\r\n              <label>\r\n                Confirm Email ({this.props.email}):\r\n                <br/>\r\n                <input \r\n                    className=\"form-center\"\r\n                    type=\"text\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <br />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\r\n                  Yes, Delete My Account</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteAccount;","import React from 'react';\r\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\r\nimport confirmDeleteAccount from './ConfirmDeleteAccount.js';\r\n\r\nclass CreateEditAccountDialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.origAccountInfo = null;\r\n        //Create a ref for the email input DOM element\r\n        this.newUserRef = React.createRef();\r\n        this.repeatPassRef = React.createRef();\r\n        this.profilePicRef = React.createRef();\r\n        this.state = {\r\n                    type: \"user\",\r\n                    accountName: \"\",\r\n                    displayName: \"\",\r\n                    profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                    password: \"\",\r\n                    passwordRepeat: \"\",\r\n                    securityQuestion: \"\",\r\n                    securityAnswer: \"\",\r\n                    formUpdated: false,\r\n                    confirmDelete: false};\r\n    } \r\n\r\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\r\n    //the database and push them into the state.\r\n    async componentDidMount() {\r\n        if (!this.props.create) {\r\n            //obtain current user data from database and push into state\r\n            const url = \"/users/\" + this.props.userId;\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n            const userData = JSON.parse(json);\r\n            this.origAccountInfo = userData; //This determines whether update can occur\r\n            this.origAccountInfo.passwordRepeat = userData.password;\r\n            this.setState({\r\n                        type: this.props.type,\r\n                        accountName: this.props.userId,\r\n                        displayName: userData.displayName,\r\n                        profilePicURL: userData.profilePicURL,\r\n                        password: userData.password,\r\n                        passwordRepeat: userData.password,\r\n                        securityQuestion: userData.securityQuestion,\r\n                        securityAnswer: userData.securityAnswer});\r\n        }\r\n    }\r\n\r\n    //checkDataValidity -- Callback function invoked after a form element in\r\n    //the 'Create Account' dialog box changes and component state has been\r\n    //updated. We first check whether the passwords match. If they do not, \r\n    //we set a custom validity message to be displayed when the user clicks the\r\n    //'Create Account' button. Otherwise, we reset the custom validity message\r\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n    //Second, we check whether anything in the form changed from the original.\r\n    //If so, we update the 'formUpdated' state var, so that the form's submit\r\n    //button is enabled.\r\n    checkDataValidity = () => {\r\n        if (this.state.password != this.state.passwordRepeat) {\r\n            //Passwords don't match\r\n            this.repeatPassRef.current.setCustomValidity(\r\n            \"This password must match password entered in previous field.\");\r\n        } else {\r\n            this.repeatPassRef.current.setCustomValidity(\"\");\r\n        }\r\n    }\r\n\r\n    //handleChange--Called when a field in a dialog box form changes.\r\n    handleChange = (event) => {\r\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\r\n        if (event.target.name === \"profilePic\") {\r\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\r\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                               formUpdated: formUpdated},\r\n                               this.checkDataValidity);\r\n            } else { //The user selected a file\r\n                const self = this;\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\r\n                reader.addEventListener(\"load\",function() {\r\n                    self.setState({profilePicURL:  this.result,\r\n                                   formUpdated: formUpdated},this.checkDataValidity);\r\n                });\r\n                \r\n            }\r\n        } else {\r\n            this.setState({[event.target.name]: event.target.value,\r\n                           formUpdated: formUpdated},this.checkDataValidity);\r\n        }\r\n    } \r\n\r\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \r\n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\r\n    //true since this.origAccountInfo is set to null.\r\n    //Should be called whenever the user makes a change to form data.\r\n    formIsUpdated = (updateField,updateVal) => {\r\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\r\n        if (updateField != \"type\" && \r\n             this.state.type != this.origAccountInfo.type) \r\n             {return true;}\r\n        if (updateField != \"displayName\" && \r\n             this.state.displayName != this.origAccountInfo.displayName) \r\n             {return true;}\r\n        if (updateField != \"profilePicURL\" && \r\n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \r\n             {return true;}\r\n        if (updateField != \"password\" &&\r\n            this.state.password !== this.origAccountInfo.password)\r\n            {return true;}\r\n        if (updateField != \"passwordRepeat\" &&\r\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\r\n            {return true;}\r\n        if (updateField != \"securityQuestion\" &&\r\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\r\n            {return true;}\r\n        if (updateField != \"securityAnswer\" &&\r\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\r\n            {return true;}\r\n        return false;\r\n    }\r\n\r\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\r\n    //Sets default value of display name to value entered into Email field \r\n    //as a courtesy.\r\n    setDefaultDisplayName = (event) => {\r\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\r\n        this.setState({displayName: event.target.value});\r\n      }\r\n    }\r\n\r\n    //handleSubmit -- Triggered when user clicks on submit button to\r\n    //either create or edit account.\r\n    //Custom data checking ensures user account under this email does not \r\n    //already exist and that the rest of the info is valid. We create a new  \r\n    // object for user, save it to localStorage and take user to app's \r\n    //landing page. \r\n    handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        //Initialize user account\r\n        let userData = {\r\n            type: this.state.type,\r\n            displayName: this.state.displayName,\r\n            password: this.state.password,\r\n            profilePicURL: this.state.profilePicURL,\r\n            securityQuestion: this.state.securityQuestion,\r\n            securityAnswer: this.state.securityAnswer\r\n        };\r\n        const url = '/users/' + this.state.accountName;\r\n        let res;\r\n        if (this.props.create) { //use POST route to create new user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'POST',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\r\n            } else { //Unsuccessful account creation\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        } else { //use PUT route to update existing user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'PUT',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"User Account Updated!\",false);\r\n            } else { //Unsuccessful account update\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //deleteAccount -- Called after confirms account deletion. \r\n    //Uses DELETE server route to perform server deletion. \r\n    //Calls on done with status message and\r\n    //true if delete was succesful, false otherwise.\r\n    deleteAccount = async() => {\r\n       const url = '/users/' + this.state.accountName;\r\n       const res = await fetch(url, \r\n                    {method: 'DELETE'}); \r\n        if (res.status == 200) { //successful account deletion!\r\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\r\n        } else { //Unsuccessful account deletion\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.props.done(resText,false);\r\n        }\r\n        this.setState({confirmDelete: false});\r\n    }\r\n\r\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\r\n    //button to indicate intention to delete account. Presents the Confirm\r\n    //Delete dialog box.\r\n    confirmDeleteAccount = (e) => {\r\n        e.preventDefault();\r\n        this.setState({confirmDelete: true});\r\n    }\r\n\r\n    render() {\r\n    return (  \r\n    <div className=\"modal\" role=\"dialog\">\r\n    <div className=\"modal-dialog modal-lg\"></div>\r\n        <div className=\"modal-content form-center\">\r\n            <div className=\"modal-header\">\r\n              <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\r\n              <button className=\"modal-close\" \r\n                       onClick={this.props.cancel}>\r\n                &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n                Type:\r\n                <select name=\"type\" value={this.state.type} \r\n                    className=\"form-control form-center\" onChange={this.handleChange}>\r\n                    <option value=\"user\">User</option>\r\n                    <option value=\"operator\">Operator</option>\r\n                </select> \r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Email: \r\n                <input  \r\n                autocomplete=\"off\"\r\n                disabled={!this.props.create}\r\n                className=\"form-control form-text form-center\"\r\n                name=\"accountName\"\r\n                type=\"email\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Email Address\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                ref={this.newUserRef}\r\n                value={this.state.accountName}\r\n                onChange={this.handleChange}\r\n                onBlur={this.setDefaultDisplayName}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Password:\r\n                <input\r\n                autocomplete=\"off\"\r\n                className=\"form-control form-text form-center\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\r\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                required={true}\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Repeat Password:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"passwordRepeat\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Repeat Password\"\r\n                required={true}\r\n                ref={this.repeatPassRef}\r\n                value={this.state.passwordRepeat}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Display Name:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"displayName\"\r\n                type=\"text\"\r\n                size=\"30\"\r\n                placeholder=\"Display Name\"\r\n                required={true}\r\n                value={this.state.displayName}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Profile Picture:<br/>\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"profilePic\"\r\n                type=\"file\"\r\n                accept=\"image/x-png,image/gif,image/jpeg\" \r\n                ref={this.profilePicRef}\r\n                value={this.state.profilePic}\r\n                onChange={this.handleChange}\r\n                />\r\n                <img src={this.state.profilePicURL != \"\" ? \r\n                            this.state.profilePicURL :\r\n                            this.state.profilePicDataURL} \r\n                        height=\"60\" width=\"60\" \r\n                 />\r\n            </label> \r\n            <br/>\r\n            <label>\r\n                Security Question:\r\n                <textarea\r\n                className=\"form-control form-text form-center\"\r\n                name=\"securityQuestion\"\r\n                size=\"35\"\r\n                placeholder=\"Security Question\"\r\n                rows=\"2\"\r\n                cols=\"35\"\r\n                maxLength=\"100\"\r\n                required={true}\r\n                value={this.state.securityQuestion}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Answer to Security Question:\r\n                <textarea\r\n                className=\"form-control form-text form-center\"\r\n                name=\"securityAnswer\"\r\n                type=\"text\"\r\n                placeholder=\"Answer\"\r\n                rows=\"2\"\r\n                cols=\"35\"\r\n                maxLength=\"100\"\r\n                required={true}\r\n                value={this.state.securityAnswer}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            {!this.props.create ?  \r\n            <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\r\n                Delete Account...\r\n            </button> : null}\r\n            <br/><br/>\r\n            <button role=\"submit\" \r\n                disabled={!this.state.formUpdated}\r\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\r\n                <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\r\n                &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\r\n            </button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        {this.state.confirmDelete ? \r\n          <ConfirmDeleteAccount email={this.state.accountName}\r\n                                deleteAccount={this.deleteAccount}\r\n                                close={() => (this.setState({confirmDelete: false}))}\r\n         /> : null}\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default CreateEditAccountDialog;","import React from 'react'\r\n\r\nclass ResetPasswordDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.resetPasswordRef = React.createRef();\r\n        this.resetPasswordRepeatRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\r\n    //If so, call on resetPassword in parent component to actually reset the password.\r\n    //Otherwise, display an error message prompting the user to try again.\r\n    handleSubmit= (event) => {\r\n        event.preventDefault();\r\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\r\n            this.props.resetPassword(this.resetPasswordRef.current.value);\r\n        } else {\r\n            this.resetPasswordRepeatRef.current.focus();\r\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\r\n        }\r\n    }\r\n\r\n    checkForSubmit = (e) => {\r\n        if (e.code === \"Enter\") {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Reset Password</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                        className=\"form-control form-text\"\r\n                        ref={this.resetPasswordRef}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Repeat New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat new password\"\r\n                        className=\"form-control form-text\"\r\n                        onKeyUp={this.checkForSubmit}\r\n                        ref={this.resetPasswordRepeatRef}\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                     className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );\r\n        \r\n    }\r\n}\r\n\r\nexport default ResetPasswordDialog;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass LookUpAccountDialog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n    //button, we check whether the account exists. If it does, we update the state,\r\n    //setting the resetEmail var to the email entered, hiding the current dialog box\r\n    //and showing the security question dialog box.\r\n    handleLookUpAccount = async(event) => {\r\n        event.preventDefault();\r\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            const obj = JSON.parse(json);\r\n            if (obj.authStrategy === \"local\") {\r\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\r\n            } else { //Account exists but was created through OAuth so password can't be reset \r\n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\r\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\r\n            }\r\n        } else {\r\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={() => {this.props.cancelResetPassword()}}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\r\n                    <form onSubmit={this.handleLookUpAccount}>\r\n                    <label>\r\n                        Account Email Address: \r\n                        <input\r\n                        ref={this.emailRef}\r\n                        className=\"form-control form-text\"\r\n                        type=\"email\"\r\n                        size=\"35\"\r\n                        placeholder=\"Enter Email Address\"\r\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                        ref={this.emailRef}\r\n                        required={true}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" \r\n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n        );   \r\n    }\r\n\r\n}\r\n\r\nexport default LookUpAccountDialog;\r\n","import React from 'react';\r\n\r\nclass SecurityQuestionDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.securityAnswerRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //Focus cursor in email secrity answer field when mounted\r\n    componentDidMount() {\r\n        this.securityAnswerRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.securityAnswerRef.current.value === this.props.answer) {\r\n            this.props.getNewPassword();\r\n        } else {\r\n            this.securityAnswerRef.current.focus();\r\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Security Question: \r\n                        <textarea\r\n                        readOnly={true}\r\n                        value={this.props.question}\r\n                        className=\"form-control form-text\"\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Security Answer: \r\n                        <textarea\r\n                        className=\"form-control form-text\"\r\n                        placeholder=\"Enter Security Question Answer\"\r\n                        ref={this.securityAnswerRef}\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );        \r\n    }\r\n}\r\n export default SecurityQuestionDialog;","import React from 'react';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\r\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\r\nimport LookUpAccountDialog from './LookUpAccountDialog.js';\r\nimport SecurityQuestionDialog from './SecurityQuestionDialog.js';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\nconstructor() {\r\n    super();\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.passwordInputRef = React.createRef();\r\n    this.state = {statusMsg: \"\",\r\n                  loginBtnIcon: \"fa fa-sign-in\",\r\n                  loginBtnLabel: \"Log In\",\r\n                  showLookUpAccountDialog: false,\r\n                  showSecurityQuestionDialog: false,\r\n                  showResetPaswordDialog: false,\r\n                  githubIcon: \"fa fa-github\",\r\n                  githubLabel: \"Sign in with GitHub\",\r\n                  loginMsg: \"\",\r\n                  newAccountCreated: false,\r\n                  googleIcon: \"fa fa-google\",\r\n                  googleLabel: \"Sign in with Google\"\r\n                  };\r\n} \r\n    \r\n//Focus cursor in email input field when mounted\r\ncomponentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n}  \r\n\r\n//handleLoginSubmit -- Called when user clicks on login button.\r\nhandleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value +\r\n                \"&password=\" + this.passwordInputRef.current.value;\r\n    const res = await fetch(url, {method: 'POST'}); \r\n    if (res.status == 200) { //successful login!\r\n        window.open(\"/\",\"_self\");\r\n    } else { //Unsuccessful login\r\n      const resText = await res.text();\r\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                     loginBtnLabel: \"Log In\",\r\n                     statusMsg: resText});\r\n    }\r\n}\r\n\r\n  //accountCreateDone -- Called by child CreateAccountDialog component when \r\n  //user attempted to create new account. Hide the dialog and display \r\n  //a message indicating result of the attempt.\r\n  accountCreateDone = (msg) => {\r\n      this.setState({statusMsg: msg,\r\n                     showCreateAccountDialog: false});\r\n  }\r\n\r\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n  cancelCreateAccount = () => {\r\n      this.setState({showCreateAccountDialog: false});\r\n  }\r\n\r\n//cancelResetPassword -- Called by one of the child three child dialog box components when\r\n//the user decides to cancel resetting their password. Toggles state so that all three\r\n//of the dialog boxes are hidden\r\ncancelResetPassword = () => {\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.setState({showLookUpAccountDialog: false,\r\n                   showSecurityQuestionDialog: false,\r\n                   showResetPaswordDialog: false});             \r\n}\r\n\r\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n//provider\r\nhandleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`,\"_self\");\r\n}\r\n\r\n//handleOAuthLoginClick -- Called whent the user clicks on button to\r\n//authenticate via a third-party OAuth service. The name of the provider is\r\n//passed in as a parameter.\r\nhandleOAuthLoginClick = (provider) => {\r\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n                  [provider + \"Label\"] : \"Connecting...\"});\r\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\r\n}\r\n\r\n//getSecurityAnswer: Given the id, security question, and security answer obtained\r\n//from the LookUpAccountDialog component, update state such that the user will\r\n//next be prompted to enter security question and answer for verification\r\ngetSecurityAnswer = (userId, question, answer) => {\r\n    this.resetUserId = userId;\r\n    this.resetQ = question;\r\n    this.resetA = answer;\r\n    this.setState({showLookUpAccountDialog: false,\r\n                   showSecurityQuestionDialog: true\r\n                });\r\n}\r\n\r\n//getNewPassword-- Called after user successfully provides correct answer\r\n//to security question. Presents the \"Reset Password\" dialog box.\r\ngetNewPassword = () => {\r\n    this.setState({showSecurityQuestionDialog: false,\r\n                    showResetPaswordDialog: true});\r\n}\r\n\r\n//resetPassword--Called after the user successfully enters a new (acceptable)\r\n//password. pw contains the new password. Call on the Update (PUT) server\r\n//route to update the user's password in the database.\r\nresetPassword = async(pw) => {\r\n    const url = \"/users/\" + this.resetUserId;\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'PUT',\r\n        body: JSON.stringify({password: pw})}); \r\n    if (res.status == 200) { //successful update creation!\r\n        this.setState({showResetPaswordDialog: false,\r\n                       statusMsg: \"Password successfully reset!\"});\r\n    } else { //Unsuccessful account creation\r\n        //Grab textual error message\r\n        const resText = await res.text();\r\n        this.setState({showResetPasswordDialog: false,\r\n                      statusMsg: resText});\r\n    }\r\n    \r\n}\r\n\r\n//newAccountCreated -- Called after successful creation of a new account\r\naccountCreateDone = (msg,deleted) => {\r\n    this.setState({statusMsg: msg,\r\n                   showCreateAccountDialog: false});\r\n}\r\n\r\n//closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\r\ncloseStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n}\r\n\r\n//cancelCreateAccount -- called to hide Create Account dialog without creating acct\r\ncancelCreateAccount = () => {\r\n    this.setState({showCreateAccountDialog: false});\r\n}\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n        <center>\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.statusMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n            {this.state.showLookUpAccountDialog ? \r\n              <LookUpAccountDialog cancelResetPassword={this.cancelResetPassword}\r\n                                   getSecurityAnswer={this.getSecurityAnswer}/> : null}\r\n            {this.state.showSecurityQuestionDialog ? \r\n               <SecurityQuestionDialog cancelResetPassword={this.cancelResetPassword}\r\n                                       question={this.resetQ}\r\n                                       answer={this.resetA}\r\n                                       getNewPassword={this.getNewPassword}/> : null}\r\n            {this.state.showResetPaswordDialog ? \r\n              <ResetPasswordDialog cancelResetPassword={this.cancelResetPassword}\r\n                                   resetPassword={this.resetPassword} /> : null}\r\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Email:\r\n                <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Password:\r\n                <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                id=\"passwordInput\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\r\n                &nbsp;{this.state.loginBtnLabel}\r\n            </button>\r\n            <p>\r\n            <button type=\"button\" className=\"btn btn-link login-link\" \r\n                    onClick={() => {this.setState({showCreateAccountDialog: true});}}>\r\n                Create an account</button> | \r\n                <button type=\"button\" className=\"btn btn-link login-link\"\r\n                        onClick={() => {this.setState({showLookUpAccountDialog: true});}}>\r\n                Reset your password</button>\r\n            </p>  \r\n            <button id=\"github-login-btn\" type=\"button\" className=\"btn btn-github\"\r\n               onClick={() => this.handleOAuthLoginClick(\"github\")}>\r\n              <span className={this.state.githubIcon}></span>&nbsp;\r\n                {this.state.githubLabel}\r\n            </button>\r\n            <button id=\"google-login-btn\" type=\"button\" className=\"btn btn-google\"\r\n               onClick={() => this.handleOAuthLoginClick(\"google\")}>\r\n              <span className={this.state.googleIcon}></span>&nbsp;\r\n                {this.state.googleLabel}\r\n            </button>\r\n            <p>\r\n                <i>Version CptS 489</i>\r\n            </p>\r\n            </form>\r\n            {this.state.showCreateAccountDialog ? \r\n              <CreateEditAccountDialog\r\n                create={true} \r\n                done={this.accountCreateDone}\r\n                cancel={this.cancelCreateAccount} /> : null}\r\n            {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass FeedPage extends React.Component {\r\n\r\n    // handleClick = (type) => {\r\n    //     this.props.userObj.type = type;\r\n    //     this.props.setUserObjType(this.props.userObj);\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"feedMode\" className=\"padded-page\">\r\n            <center>\r\n            {/* {(this.props.userObj.authStrategy === \"google\") || (this.props.userObj.authStrategy === \"github\") ?\r\n                <div className=\"modal\" role=\"dialog\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h3>What do you want to be?</h3>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                            <Button onClick={() => this.handleClick(\"user\")}>User</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <Button onClick={() => this.handleClick(\"operator\")}>Operator</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : null} */}\r\n            <h1 >Activity Feed</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\n\r\nclass ConfirmDeleteRound extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Round Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete this round?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteRound}>\r\n                  Yes, Delete</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteRound;","import React from 'react';\r\nimport ConfirmDeleteRound from './ConfirmDeleteRound.js';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {showConfirmDelete: false};\r\n  }\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //deleteRound -- Triggered when the user clicks on the \"Yes, Delete\"\r\n  //button in the Confirm Delete dialog box. It executes the deletion and\r\n  //closes the dialog box.\r\n  deleteRound = () => {\r\n    this.props.deleteRound();\r\n    this.setState({showConfirmDelete: false});\r\n  }\r\n\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({showConfirmDelete: true});\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.rounds.length; ++r) {\r\n    table.push(\r\n      <tr key={r}>\r\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n        <td>{this.props.rounds[r].course}</td>\r\n        <td>{(Number(this.props.rounds[r].strokes) + \r\n              Number(this.props.rounds[r].minutes)) +\r\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \" (\" + \r\n              this.props.rounds[r].strokes + \r\n              \" in \" + this.props.rounds[r].minutes + \":\" + \r\n              (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \")\"}\r\n        </td>\r\n        <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button onClick={this.props.menuOpen ? null : \r\n          () => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n      {this.state.showConfirmDelete ?\r\n        <ConfirmDeleteRound \r\n          close={() => this.setState({showConfirmDelete: false})} \r\n          deleteRound={this.deleteRound} /> : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  course: \"\",\r\n                  type: \"practice\",\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\"}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor() {\r\n        super();\r\n        this.deleteId = \"\";\r\n        this.editId = \"\";\r\n        this.state = {errorMsg: \"\"};           \r\n    }\r\n\r\n    //addRound -- Given an object newData containing a new round, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.setState({errorMsg: \"\"});\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round in the database. \r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.editId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\r\n    deleteRound = async () => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.deleteId]._id;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: \"An error occurred when attempting to delete round from database: \" \r\n            + msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }  \r\n    }\r\n \r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.deleteId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.editId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    closeErrorMsg = () => {\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    {this.state.errorMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.errorMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeErrorMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n                    <RoundsTable \r\n                        rounds={this.props.userObj.rounds}\r\n                        setEditId={this.setEditId}\r\n                        setDeleteId={this.setDeleteId}\r\n                        deleteRound={this.deleteRound}\r\n                        changeMode={this.props.changeMode}\r\n                        menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                let thisRound = {...this.props.userObj.rounds[this.editId]};\r\n                thisRound.date = thisRound.date.substr(0,10);\r\n                if (thisRound.seconds < 10) {\r\n                    thisRound.seconds = \"0\" + thisRound.seconds;\r\n                } \r\n                delete thisRound.SGS;\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={thisRound} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass RatesModal extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n                      id: \"\"\r\n                   };\r\n        }\r\n\r\n        componentDidMount(){\r\n            this.getSearchedCourse(this.props.course);\r\n        }\r\n\r\n        getSearchedCourse = async (id) => {\r\n            const url = '/courses/'+id;\r\n            fetch(url)\r\n            .then((response) => {\r\n                if (response.status == 200)\r\n                    return response.json();\r\n                else\r\n                {\r\n                    throw Error(response.statusText);\r\n                }\r\n            })\r\n            .then((obj) => \r\n            {\r\n                console.log(\"GET RATES SUCCESS!\");\r\n                let thisCourse = JSON.parse(obj);\r\n                this.setState({\r\n                    courseName: thisCourse.courseName,\r\n                    id: thisCourse.id,\r\n                    course: (\r\n                        <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                            <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                            <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                            <Card.Body>\r\n                                <Card.Title>Location: {thisCourse.location}</Card.Title>\r\n                                <Card.Text>RATES: ALL WEEK</Card.Text>\r\n                                <Card.Text>STANDARD: ${thisCourse.rateStandard}</Card.Text>\r\n                                <Card.Text>SENIOR: ${thisCourse.rateSenior}</Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer>Rates and policies are subject to change without notice.</Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                });\r\n            }).catch((error) =>{\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n            <h3>{this.state.courseName}</h3>\r\n                <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <center>\r\n            <div className=\"modal-body\">\r\n                <Container fluid={true}>\r\n                    <Row noGutters>\r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n                </center>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.handleClose}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default RatesModal;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\nimport { async } from 'regenerator-runtime';\r\n\r\nclass MoreModal extends React.Component {\r\n\r\nconstructor(){\r\n    super();\r\n    this.state={\r\n        id: \"\",\r\n        reviewClicked: false,\r\n        review: \"\",\r\n        rating: \"\"\r\n    };\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.getSearchedCourse(this.props.course);\r\n}\r\n\r\ntoggleReviewClicked = () =>{\r\n    this.setState(state =>({reviewClicked: !state.reviewClicked}));\r\n}\r\n\r\ngetSearchedCourse = async (id) => {\r\n    const url = '/courses/'+id;\r\n    fetch(url)\r\n    .then((response) => {\r\n        if (response.status == 200)\r\n            return response.json();\r\n        else\r\n        {\r\n            this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n            throw Error(response.statusText);\r\n        }\r\n    })\r\n    .then((obj) => \r\n    {\r\n        console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n        let thisCourse = JSON.parse(obj);\r\n        this.setState({\r\n            courseName: thisCourse.courseName,\r\n            id: thisCourse.id,\r\n            rating: thisCourse.rating,\r\n            review: thisCourse.review,\r\n            picture: thisCourse.picture,\r\n            location: thisCourse.location,\r\n            yardage: thisCourse.yardage,\r\n            runningDistance: thisCourse.runningDistance,\r\n            timePar: thisCourse.timePar,\r\n            bestScore: thisCourse.bestScore,\r\n            recordHolder: thisCourse.recordHolder,\r\n            rateSenior: thisCourse.rateSenior,\r\n            rateStandard: thisCourse.rateStandard,\r\n            course: (\r\n                <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                    <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                    <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                    <Card.Body>\r\n                        <Card.Title>Location: {thisCourse.location}</Card.Title>\r\n                        <Card.Text>Yardage: {thisCourse.yardage}</Card.Text>\r\n                        <Card.Text>Running Distance: {thisCourse.runningDistance}</Card.Text>\r\n                        <Card.Text>Time Par: {thisCourse.timePar}</Card.Text>\r\n                        <Card.Text>Best Score: {thisCourse.bestScore}</Card.Text>\r\n                        <Card.Text>Record Holder: {thisCourse.recordHolder}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>Rating: {thisCourse.rating}<br></br>Review: {thisCourse.review}</Card.Footer>\r\n                    <Button onClick={this.toggleReviewClicked}>Leave A Review:</Button>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        });\r\n    }).catch((error) =>{\r\n        console.log(error);\r\n    });\r\n}\r\n\r\neditCourse = async (newData) =>{\r\n    const url = '/courses/' + this.state.id;\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'PUT',\r\n        body: JSON.stringify(newData)}); \r\n    const msg = await res.text();\r\n    console.log(msg);\r\n    if (res.status === 200) {\r\n        this.toggleReviewClicked();\r\n        this.props.handleClose();\r\n        if (this.props.mode === AppMode.COURSES)\r\n            this.props.refreshOnUpdate(AppMode.COURSES);\r\n        else \r\n            this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n    } else {\r\n        this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n    }\r\n}\r\n\r\nhandleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    let newData = {\r\n        courseName: this.state.courseName,\r\n        id: this.state.id,\r\n        rating: this.state.rating,\r\n        review: this.state.review,\r\n        picture: this.state.picture,\r\n        location: this.state.location,\r\n        yardage: this.state.yardage,\r\n        runningDistance: this.state.runningDistance,\r\n        timePar: this.state.timePar,\r\n        bestScore: this.state.bestScore,\r\n        recordHolder: this.state.recordHolder,\r\n        rateSenior: this.state.rateSenior,\r\n        rateStandard: this.state.rateStandard\r\n    }\r\n\r\n    this.editCourse(newData);\r\n\r\n}\r\n\r\nhandleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>{this.state.courseName}</h3>\r\n                <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            {this.state.reviewClicked ? \r\n                <div className=\"modal\" role=\"dialog\">\r\n                <div className=\"modal-dialog modal-lg\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>Leaving A Review</h3>\r\n                        <button className=\"modal-close\" onClick={this.toggleReviewClicked}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                <div className=\"modal-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>\r\n                        <label>Rating:\r\n                        <select name=\"rating\" value={this.state.rating} \r\n                        className=\"form-control form-center\" onChange={this.handleChange}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        </select> \r\n                        </label>\r\n                        <p></p>\r\n                        <label>Review:\r\n                        <textarea name=\"review\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                            placeholder=\"Enter round notes\" value={this.state.review} \r\n                            onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <Button type=\"submit\">Submit Review</Button>\r\n                        </Row>\r\n                    </Container>\r\n                    </form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-primary btn-color-theme\"\r\n                    onClick={this.toggleReviewClicked}>OK</button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            :null}\r\n            <div className=\"modal-body\">\r\n                <Container fluid={true}>\r\n                    <Row noGutters>\r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            {/* <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.handleClose}>OK</button>\r\n            </div> */}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MoreModal;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass BookingPage extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            courseName: this.props.course,\r\n            bookingTime: '',\r\n            bookingDate: ''\r\n        }\r\n    }\r\n\r\n    handleBookTeeTime = () => {\r\n        console.log(\"Booking tee time\");\r\n        console.log(this.state);\r\n        this.props.handleClose();\r\n        alert(\"Tee Time Booked!\");\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleClose = () =>{\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3>Booking Tee Time</h3>\r\n                    {/* <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                        &times;\r\n                    </button> */}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <div className=\"padded-page\">\r\n                    <form onSubmit={this.handleBookTeeTime}>\r\n                    <center>\r\n                        <h1>Request Tee Time at {this.state.courseName}</h1><br></br>\r\n                        <label for=\"bookingDate\">Date: <br></br>\r\n                            <input type=\"date\" id=\"bookingDate\" name=\"bookingDate\" value={this.state.bookingDate} onChange={this.handleChange} required></input>\r\n                        </label>\r\n                        <p></p>\r\n                        <label for=\"bookingTime\">Time: <br></br>\r\n                        <select type=\"date\" id=\"bookingTime\" name=\"bookingTime\" value={this.state.bookingTime} onChange={this.handleChange} required>\r\n                            <option></option>\r\n                            <option value=\"9:00 AM\">9:00 AM</option>\r\n                            <option value=\"10:00 AM\">10:00 AM</option>\r\n                            <option value=\"11:00 AM\">11:00 AM</option>\r\n                            <option value=\"12:00 AM\">12:00 PM</option> \r\n                            <option value=\"1:00 PM\">1:00 PM</option>\r\n                            <option value=\"2:00 PM\">2:00 PM</option> \r\n                            <option value=\"3:00 PM\">3:00 PM</option>\r\n                            <option value=\"4:00 PM\">4:00 PM</option>\r\n                            <option value=\"5:00 PM\">5:00 PM</option>    \r\n                        </select>\r\n                        </label>\r\n                        <p></p>\r\n                        <button className=\"btn btn-primary btn-color-theme modal-submit-btn\">Request Tee Time</button>\r\n                        <button onClick={this.props.handleClose} className=\"btn btn-primary btn-color-theme modal-submit-btn\">Cancel</button>\r\n                    </center>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    {/* <button className=\"btn btn-primary btn-color-theme\"\r\n                    onClick={this.props.close}>OK</button> */}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n       \r\n        );\r\n    }   \r\n}\r\n\r\nexport default BookingPage;","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport RatesModal from \"./RatesModal.js\";\r\nimport MoreModal from \"./MoreModal.js\";\r\nimport BookingPage from \"./BookingPage.js\";\r\n\r\nclass AllCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    \r\n        this.state={\r\n            item: \"\",\r\n            getCourseClicked: false,\r\n            getRatesButtonClicked: false,\r\n            bookTeeTimeClicked: false,\r\n            more: false\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCourse();\r\n    }\r\n    \r\n    toggleGetCourseClicked = () => {\r\n        this.setState(state => ({getCourseClicked: !state.getCourseClicked}));\r\n    }\r\n\r\n    toggleMoreClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({more: !state.more}));\r\n    }\r\n\r\n    toggleGetRatesClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({getRatesButtonClicked: !state.getRatesButtonClicked}));\r\n    }\r\n\r\n    toggleBookTeeTimeClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({bookTeeTimeClicked: !state.bookTeeTimeClicked}));\r\n    }\r\n\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: thisCourse.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{c.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                            {this.setState({item: c.id})}\r\n                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                            <Button type=\"button\" onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                            <Button type=\"button\" onClick={() => this.toggleBookTeeTimeClicked(c.id)}>Book Tee Time</Button>&nbsp;\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n\r\n            // this.renderCourses(thisCourse);\r\n            // console.log(thisCourse);\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"allCoursesPage\">\r\n                <h1></h1>\r\n                <table >\r\n                    <tbody>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>                    \r\n                            {this.state.course}\r\n                        </Row>\r\n                    </Container> \r\n                    </tbody>\r\n                </table>\r\n                {this.state.getRatesButtonClicked ? \r\n                    <RatesModal handleClose={this.toggleGetRatesClicked} \r\n                    course={this.state.item} changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.more ? \r\n                    <MoreModal handleClose={this.toggleMoreClicked} \r\n                        course={this.state.item} changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.bookTeeTimeClicked ? \r\n                    <BookingPage handleClose={this.toggleBookTeeTimeClicked} \r\n                        course={this.state.item} changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n            </div>\r\n            );\r\n    }   \r\n}\r\n\r\nexport default AllCourses;","import React from 'react';\r\n\r\nclass NearbyCourses extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"padded-page\">\r\n                <center>\r\n                <h1 >Nearby Courses</h1>\r\n                <h2>This page is under construction.</h2>\r\n                <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n                 height=\"200\" width=\"200\"/>\r\n                <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n                </center>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default NearbyCourses;","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass AdvancedSearch extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            rating: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            rateStandard: \"\",\r\n            rateSenior: \"\",\r\n            searchType: \"\",\r\n            allCourses: [],\r\n            filteredCourses: []\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCourse();\r\n    }\r\n\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            let table = [];\r\n            for (var i = 0; i < thisCourse.length; i++)\r\n            {\r\n                table.push(thisCourse[i]);\r\n            }\r\n            \r\n            this.setState({allCourses: table});\r\n            // console.log(this.state.allCourses);\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.searchStart();\r\n        let type = this.state.searchType;\r\n        let len = this.state.allCourses.length;\r\n        let c = this.state.allCourses;\r\n        let table = [];\r\n        switch (type){\r\n            case \"rates\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].rateSenior === this.state.rateSenior || c[i].rateStandard === this.state.rateStandard)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"rating\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].rating === this.state.rating)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"yardage\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].yardage === this.state.yardage)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"runningDistance\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].runningDistance === this.state.runningDistance)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"timePar\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].timePar === this.state.timePar)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        // console.log(table);\r\n        this.props.setFilteredData(table);\r\n        this.props.handleClose();\r\n    }\r\n\r\n    handleSwitch = (type) => {\r\n        if (type === \"rates\")\r\n        {\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Standard Rate: $<br></br>\r\n                        <input id=\"rateStandard\" name=\"rateStandard\" placeholder=\"rateStandard\" value={this.state.rateStandard} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Senior Rate: $<br></br>\r\n                        <input id=\"rateSenior\" name=\"rateSenior\" placeholder=\"rateSenior\" value={this.state.rateSenior} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"rating\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Rating:<br></br>\r\n                        <input id=\"rating\" name=\"rating\" placeholder=\"rating\" value={this.state.rating} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p> \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"yardage\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Yardage:<br></br>\r\n                        <input id=\"yardage\" name=\"yardage\"  placeholder=\"yardage\" value={this.state.yardage} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>  \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"runningDistance\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Running Distance:<br></br>\r\n                        <input id=\"runningDistance\" name=\"runningDistance\"  placeholder=\"runningDistance\" value={this.state.runningDistance} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p> \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"timePar\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Time Par:<br></br>\r\n                        <input id=\"timePar\" name=\"timePar\"  placeholder=\"timePar\" value={this.state.timePar} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n\r\n    render (){\r\n        return(\r\n        <div className=\"modal\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>Advanced Search</h3>\r\n                        <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <label>Search By:&nbsp;\r\n                            <select name=\"searchType\" value={this.state.searchType} \r\n                                className=\"form-control form-center\" onChange={this.handleChange}>\r\n                                <option></option>\r\n                                <option value=\"rates\">Rates</option>\r\n                                <option value=\"rating\">Ratings</option>\r\n                                <option value=\"yardage\">Holes Yardage</option>\r\n                                <option value=\"runningDistance\">Running Distance</option>\r\n                                <option value=\"timePar\">Time Pars</option>\r\n                            </select> \r\n                            </label>\r\n                            <p></p>\r\n                        </form>\r\n                        {this.handleSwitch(this.state.searchType)}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {this.state.searchType !== \"\" ? \r\n                        <button onClick={this.handleSubmit} id=\"submitBtn\" type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                            className=\"btn btn-primary btn-color-theme\">\r\n                            &nbsp;Submit\r\n                        </button> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvancedSearch;","import React from 'react';\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\nimport FloatingButton from \"./FloatingButton.js\";\r\nimport RatesModal from \"./RatesModal.js\";\r\nimport MoreModal from \"./MoreModal.js\";\r\nimport BookingPage from \"./BookingPage.js\";\r\nimport AdvancedSearch from \"./AdvancedSearch.js\";\r\n\r\nclass SpecificCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            addCourseClicked: false,\r\n            getCourseClicked: false,\r\n            searchCourseClicked: false,\r\n            searchStart: false,\r\n            getRatesButtonClicked: false,\r\n            bookTeeTimeClicked: false,\r\n            advancedSearchClicked: false,\r\n            more: false,\r\n            selectButtonValue: \"Select Course\",\r\n            query: \"\",\r\n            data: [],\r\n            filteredData: [],\r\n            item: \"\",\r\n            \r\n            id: \"\",\r\n            rating: \"\",\r\n            review: \"\",\r\n            picture: \"\",\r\n            location: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            bestScore: \"\",\r\n            recordHolder: \"\"\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getCourse();\r\n    }\r\n\r\n    toggleAddCourseClicked = () => {\r\n        this.setState(state => ({addCourseClicked: !state.addCourseClicked}));\r\n    }\r\n\r\n    toggleAdvancedSearchClicked = () => {\r\n        this.setState(state => ({advancedSearchClicked: !state.advancedSearchClicked}));\r\n    }\r\n\r\n    toggleMoreClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({more: !state.more}));\r\n    }\r\n\r\n    toggleGetCourseClicked = () => {\r\n        this.setState(state => ({getCourseClicked: !state.getCourseClicked}));\r\n    }\r\n\r\n    toggleGetRatesClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({getRatesButtonClicked: !state.getRatesButtonClicked}));\r\n    }\r\n\r\n    toggleBookTeeTimeClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({bookTeeTimeClicked: !state.bookTeeTimeClicked}));\r\n    }\r\n\r\n    setSelectButtonValue = (newVal) => {\r\n        this.setState({selectButtonValue : newVal});\r\n    }\r\n\r\n    setSearchTrue = () => {\r\n        this.setState({searchStart : true});\r\n    }\r\n\r\n    setSearchFalse = () => {\r\n        this.setState({searchStart : false});\r\n    }\r\n\r\n    setSearchCourseClickedTrue = () => {\r\n        this.setState({searchCourseClicked : true});\r\n        this.setSelectButtonValue(\"Clear Selected\");\r\n    }\r\n\r\n    setSearchCourseClickedFalse = () => {\r\n        this.setState({searchCourseClicked : false});\r\n        this.setSelectButtonValue(\"Select Course\");\r\n    }\r\n\r\n    setFilteredData = (newData) => {\r\n        this.setState({\r\n            course: newData.map((c) =>(\r\n                <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                    <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                    <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                    <Card.Body>\r\n                        <Card.Title>{c.courseName}</Card.Title>\r\n                        <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                        <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                        <Button onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                        <Button onClick={() => this.toggleBookTeeTimeClicked(c.id)}>Book Tee Time</Button>&nbsp;\r\n                    </Card.Body>\r\n                    <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            ))\r\n        });\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const query = event.target.value;\r\n        this.setState(prevState => {\r\n          const filteredData = prevState.data.filter(element => {\r\n            return element.id.toLowerCase().includes(query.toLowerCase());\r\n          });\r\n\r\n          if (query == \"\")\r\n          {\r\n              this.setSearchFalse();\r\n              this.setSelectButtonValue(\"Select Course\");\r\n          }\r\n          else\r\n          {\r\n              this.setSearchTrue();\r\n              this.setSelectButtonValue(\"Select All \"+ filteredData.length +\" Matching Courses\");\r\n          }\r\n\r\n          return {\r\n            query,\r\n            filteredData\r\n          };\r\n        });\r\n\r\n    };\r\n\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET ALL COURSES SUCCESS!\");\r\n            let data = JSON.parse(obj);\r\n            const { query } = this.state;\r\n            const filteredData = data.filter(element => {\r\n              return element.id.toLowerCase().includes(query.toLowerCase());\r\n            });\r\n    \r\n            this.setState({\r\n              data,\r\n              filteredData\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    getSearchedCourse = async (id) => {\r\n        this.setSearchCourseClickedTrue();\r\n        this.setSearchFalse();\r\n        const url = '/courses/'+id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: (\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{thisCourse.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {thisCourse.recordHolder}</Card.Text>\r\n                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(thisCourse.id)}>More</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleGetRatesClicked(thisCourse.id)}>Get Rates</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleBookTeeTimeClicked(thisCourse.id)}>Book Tee Time</Button>&nbsp;\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {thisCourse.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    handleClick = (event) =>{\r\n        event.preventDefault();\r\n        if (this.state.selectButtonValue == \"Select Course\")\r\n        {\r\n\r\n        }\r\n        else if (this.state.selectButtonValue == \"Clear Selected\")\r\n        {\r\n            this.setSearchCourseClickedFalse();\r\n            this.setSearchFalse();\r\n            this.setState({query: \"\"});\r\n        }\r\n        else{\r\n            this.setSearchCourseClickedTrue();\r\n            this.setSearchFalse();\r\n            this.setState({\r\n                course: this.state.filteredData.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{c.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleBookTeeTimeClicked(c.id)}>Book Tee Time</Button>&nbsp;\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getRates = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"specificCoursePage\">\r\n                <div style={{display: 'flex'}}>\r\n                    <h3>Find Speedgolf-Friendly Courses:&nbsp;</h3>\r\n                    <h3>\r\n                        <a data-tip=\"React-tooltip\">&#9432;</a>\r\n                        <ReactTooltip variant=\"bottom\" effect=\"solid\">\r\n                            <span>\r\n                                Enter search term or course name to see matching courses, or enter a space to see ALL courses in the database.\r\n                                Click on course in the list to select it, or click on 'Select' button to select all matching courses.\r\n                            </span>\r\n                        </ReactTooltip>\r\n                    </h3>\r\n                </div>\r\n\r\n                <input style={{width: '60%'}} placeholder=\"Enter course name or search term\"\r\n                 value={this.state.query} onChange={this.handleInputChange}\r\n                 disabled={this.state.searchCourseClicked ? true:false}></input>&nbsp;\r\n                <Button onClick={this.handleClick}>{this.state.selectButtonValue}</Button>&nbsp;\r\n                <Button onClick={this.toggleAdvancedSearchClicked} disabled={this.state.searchCourseClicked ? true:false}>Advanced Search</Button>\r\n                {this.state.searchStart ? <div>{this.state.filteredData.map(i => <a className=\"course-search-list\" onClick={() => this.getSearchedCourse(i.id)}>{i.id}</a>)}</div> : null}\r\n                \r\n                {this.state.searchCourseClicked ? <div style={{marginTop: \"50px\"}}><h3>1 Course Selected: </h3>\r\n                <Container fluid={true}>\r\n                    <Row noGutters>  \r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>  </div>               \r\n                 : null}\r\n\r\n\r\n                {this.state.advancedSearchClicked ? \r\n                    <AdvancedSearch handleClose={this.toggleAdvancedSearchClicked}\r\n                    searchStart={this.setSearchCourseClickedTrue}\r\n                    toggleMoreClicked={this.toggleMoreClicked}\r\n                    toggleGetRatesClicked={this.toggleGetRatesClicked}\r\n                    toggleBookTeeTimeClicked={this.toggleBookTeeTimeClicked}\r\n                    course={this.state.item}  changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    setFilteredData={this.setFilteredData}\r\n                    />\r\n                    : null}\r\n                {this.state.getRatesButtonClicked ? \r\n                    <RatesModal handleClose={this.toggleGetRatesClicked}\r\n                    course={this.state.item}  changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.more ? \r\n                    <MoreModal handleClose={this.toggleMoreClicked} \r\n                        course={this.state.item}  changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.bookTeeTimeClicked ? \r\n                    <BookingPage handleClose={this.toggleBookTeeTimeClicked} \r\n                        course={this.state.item} changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default SpecificCourses;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass AddCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            courseName: \"\",\r\n            id: \"\",\r\n            rating: \"\",\r\n            review: \"\",\r\n            picture: \"\",\r\n            location: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            bestScore: \"\",\r\n            recordHolder: \"\",\r\n            rateStandard: \"\",\r\n            rateSenior: \"\"\r\n        };\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    addCourse = async (newData) => {\r\n        console.log(newData);\r\n        const url = '/courses/' + this.state.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status == 200) {\r\n            console.log(\"SUCCESS\");\r\n            console.log(msg);\r\n            this.props.changeMode(AppMode.COURSES_ALL);\r\n        } else {\r\n            console.log(\"FAILURE\");\r\n            console.log(msg);\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let courseData = this.state;\r\n        this.addCourse(courseData);\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"addCoursePage\">\r\n                <form onSubmit={this.handleSubmit} style={{marginBottom: \"50px\"}}>\r\n                    <center>\r\n                    <h3>Add Course</h3>\r\n                    <label>\r\n                        Course ID:<br></br>\r\n                        <input id=\"id\" name=\"id\" placeholder=\"id\" value={this.state.id} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Course Name:<br></br>\r\n                        <input id=\"courseName\" name=\"courseName\" placeholder=\"courseName\" value={this.state.courseName} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Standard Rate: $<br></br>\r\n                        <input id=\"rateStandard\" name=\"rateStandard\" placeholder=\"rateStandard\" value={this.state.rateStandard} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Senior Rate: $<br></br>\r\n                        <input id=\"rateSenior\" name=\"rateSenior\" placeholder=\"rateSenior\" value={this.state.rateSenior} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Rating:<br></br>\r\n                        <input id=\"rating\" name=\"rating\" placeholder=\"rating\" value={this.state.rating} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Review:<br></br>\r\n                        <input id=\"review\" name=\"review\"  placeholder=\"review\" value={this.state.review} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Picture:<br></br>\r\n                        <input id=\"picture\" name=\"picture\"  placeholder=\"picture\" value={this.state.picture} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Location:<br></br>\r\n                        <input id=\"location\" name=\"location\"  placeholder=\"location\" value={this.state.location} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Yardage:<br></br>\r\n                        <input id=\"yardage\" name=\"yardage\"  placeholder=\"yardage\" value={this.state.yardage} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Running Distance:<br></br>\r\n                        <input id=\"runningDistance\" name=\"runningDistance\"  placeholder=\"runningDistance\" value={this.state.runningDistance} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Time Par:<br></br>\r\n                        <input id=\"timePar\" name=\"timePar\"  placeholder=\"timePar\" value={this.state.timePar} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Best Score:<br></br>\r\n                        <input id=\"bestScore\" name=\"bestScore\"  placeholder=\"bestScore\" value={this.state.bestScore} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Record Holder:<br></br>\r\n                        <input id=\"recordHolder\" name=\"recordHolder\"  placeholder=\"recordHolder\" value={this.state.recordHolder} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <button id=\"submitBtn\" type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                        className=\"btn btn-primary btn-color-theme\">\r\n                        &nbsp;Submit\r\n                    </button>\r\n                    </center>\r\n                </form>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default AddCourses;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport AllCourses from './AllCourses.js';\r\nimport NearbyCourses from './NearbyCourses.js';\r\nimport SpecificCourses from './SpecificCourses.js';\r\nimport AddCourses from './AddCourses.js';\r\n\r\nclass CoursesPage extends React.Component {\r\n\r\n    render() {\r\n        switch(this.props.mode){\r\n            case AppMode.COURSES:\r\n                return (<SpecificCourses userObj={this.props.userObj} mode={this.props.mode} changeMode={this.props.changeMode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n            case AppMode.COURSES_NEARBY:\r\n                return (<NearbyCourses changeMode={this.props.changeMode} mode={this.props.mode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n            case AppMode.COURSES_ALL:\r\n                return (<AllCourses changeMode={this.props.changeMode} mode={this.props.mode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n            case AppMode.COURSES_ADD:\r\n                return (<AddCourses changeMode={this.props.changeMode}/>);\r\n        }\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;","import React from 'react';\r\n\r\nclass AboutBox extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>About SpeedScore</h3>\r\n                <button className=\"modal-close\" onClick={this.props.close}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <img\r\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                height=\"200\" width=\"200\"/>\r\n                <h3>The World's First and Only Suite of Apps for\r\n                Speedgolf</h3>\r\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\r\n                &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                reserved.\r\n                </p>\r\n                <div style={{textAlign: \"left\"}}>\r\n                <p>SpeedScore apps support</p>\r\n                <ul>\r\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                <li>tracking personal speedgolf rounds and sharing results\r\n                (<i>SpeedScore Track&reg;</i>)</li>\r\n                <li>finding speedgolf-friendly courses, booking tee times, and\r\n                paying to play speedgolf by the minute (<i>SpeedScore\r\n                Play&reg;</i>)</li>\r\n                </ul>\r\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                associate professor of computer science at Washington State\r\n                University and the <i>Professor of Speedgolf</i>, with support\r\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\r\n                <p>For more information on SpeedScore, visit <a\r\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                site</a>. For more information on speedgolf, visit <a\r\n                href=\"http://playspeedgolf.com\"\r\n                target=\"_blank\">playspeedgolf.com</a> and <a\r\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                USA</a>.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.close}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AboutBox;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport AboutBox from './AboutBox.js';\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.COURSES] = \"Search Courses\";\r\nmodeTitle[AppMode.COURSES_NEARBY] = \"Nearby Courses\";\r\nmodeTitle[AppMode.COURSES_ALL] = \"All Speedgolf-Friendly Courses\";\r\nmodeTitle[AppMode.COURSES_ADD] = \"Add a Course\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_NEARBY] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_ALL] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_ADD] = CoursesPage;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                  editAccount: false,\r\n                  showEditAccountDialog: false,\r\n                  statusMsg: \"\",\r\n                  showAboutDialog: false\r\n                 };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.FEED //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n  showEditAccount = () => {\r\n    this.setState({showEditAccountDialog: true});\r\n\r\n  }\r\n\r\n  cancelEditAccount = () => {\r\n    this.setState({showEditAccountDialog: false});\r\n  }\r\n\r\n  setUserObjType = (newType) => {\r\n    this.setState({userObj: newType});\r\n  }\r\n\r\n  //editAccountDone -- called after successful edit or\r\n  //deletion of user account. msg contains the status\r\n  //message and deleted indicates whether an account was\r\n  //edited (deleted == false) or deleted (deleted == true)\r\n  editAccountDone = (msg, deleted) => {\r\n    if (deleted) {\r\n      this.setState({showEditAccountDialog: false,\r\n                     statusMsg: msg,\r\n                     mode: AppMode.LOGIN});\r\n      } else {\r\n        this.setState({showEditAccountDialog: false,\r\n          statusMsg: msg});\r\n      }\r\n  }\r\n\r\n  closeStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div className=\"padded-page\">\r\n        {this.state.showAboutDialog ? \r\n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\r\n              <span>{this.state.statusMsg}</span>\r\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                  <span className=\"fa fa-times\"></span></button></div> : null}\r\n        {this.state.showEditAccountDialog ? \r\n            <CreateEditAccountDialog \r\n              create={false} \r\n              userId={this.state.userObj.id} \r\n              done={this.editAccountDone} \r\n              cancel={this.cancelEditAccount}/> : null}\r\n        <NavBar \r\n          aboutOpen={this.state.showAboutDialog}\r\n          title={modeTitle[this.state.mode]} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n          <SideMenu \r\n            type={this.state.userObj.type}\r\n            changeMode={this.handleChangeMode}\r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            localAccount={this.state.userObj.authStrategy === \"local\"}\r\n            editAccount={this.showEditAccount}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\r\n          <ModeBar \r\n            aboutOpen={this.state.showAboutDialog}\r\n            mode={this.state.mode} \r\n            changeMode={this.handleChangeMode}\r\n            menuOpen={this.state.menuOpen}/>\r\n          <ModePage \r\n            setUserObjType={this.setUserObjType}\r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}