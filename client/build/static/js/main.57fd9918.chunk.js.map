{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/ConfirmDeleteAccount.js","components/AddCardDialog.js","components/CreateEditAccountDialog.js","components/ResetPasswordDialog.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/FeedPage.js","components/ConfirmDeleteRound.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/Rounds.js","components/RatesModal.js","components/MoreModal.js","components/BookingPage.js","components/AllCourses.js","components/NearbyCourses.js","components/AdvancedSearch.js","components/SpecificCourses.js","components/AddCourses.js","components/AllAppointments.js","components/PaymentDialog.js","components/MyAppointments.js","components/CoursesPage.js","components/AboutBox.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","COURSES_NEARBY","COURSES_ALL","COURSES_ADD","COURSES_APPT","COURSES_MYAPPT","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","this","aboutOpen","onClick","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","type","profilePicURL","displayName","localAccount","editAccount","showAbout","logOut","ModeBar","ConfirmDeleteAccount","handleChange","match","emailRef","current","value","email","state","emailMatches","setState","createRef","focus","role","close","ref","onChange","deleteAccount","disabled","AddCardDialog","event","target","name","handleSubmit","preventDefault","data","addCard","number","expDate","placeholder","required","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","setCustomValidity","formUpdated","origAccountInfo","formIsUpdated","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","securityQuestion","securityAnswer","setDefaultDisplayName","a","userData","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","confirmDelete","confirmDeleteAccount","e","toggleAddCardClicked","addCardClicked","console","log","getCard","then","response","json","Error","statusText","obj","parse","card","catch","error","newUserRef","userId","cancel","onSubmit","autocomplete","size","pattern","onBlur","accept","profilePic","profilePicDataURL","rows","cols","maxLength","ResetPasswordDialog","resetPasswordRef","resetPasswordRepeatRef","resetPassword","errorMsg","checkForSubmit","code","cancelResetPassword","onKeyUp","LookUpAccountDialog","handleLookUpAccount","authStrategy","getSecurityAnswer","ErrMsg","errMsg","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","emailInputRef","passwordInputRef","window","open","statusMsg","accountCreateDone","msg","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPaswordDialog","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","pw","showResetPasswordDialog","deleted","closeStatusMsg","githubIcon","githubLabel","loginMsg","newAccountCreated","googleIcon","googleLabel","htmlFor","style","padding","fontSize","FeedPage","fontStyle","ConfirmDeleteRound","deleteRound","RoundsTable","editRound","setEditId","showConfirmDelete","setDeleteId","renderTable","table","r","push","key","rounds","date","substring","course","Number","strokes","minutes","seconds","keys","colSpan","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","faIcon","btnLabel","roundData","saveRound","min","sec","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","max","FloatingButton","handleClick","Rounds","addRound","newData","userObj","refreshOnUpdate","editId","_id","deleteId","val","closeErrorMsg","icon","RatesModal","getSearchedCourse","thisCourse","courseName","Col","marginTop","marginBottom","Card","display","Img","variant","picture","Body","Title","location","Text","rateStandard","rateSenior","Footer","handleClose","Container","fluid","Row","noGutters","MoreModal","toggleReviewClicked","reviewClicked","setErrorMsg","rating","review","yardage","runningDistance","timePar","bestScore","recordHolder","Button","editCourse","reload","alert","tomorrow","setDate","getDate","thirdDay","fourthDay","fifthDay","sixthDay","seventhDay","day1","day2","day3","day4","day5","day6","day7","BookingPage","getAllAppointments","appointments","map","c","username","time","handleBookTeeTime","newappt","paid","bookingDate","bookingTime","addAppointment","addAppointment_op","document","getElementById","removeAttribute","i","setAttribute","for","AllCourses","toggleGetCourseClicked","getCourseClicked","toggleMoreClicked","item","more","toggleGetRatesClicked","getRatesButtonClicked","toggleBookTeeTimeClicked","cn","index","cname","bookTeeTimeClicked","handleDelete","filteredData","splice","getCourse","float","info","NearbyCourses","AdvancedSearch","allCourses","searchStart","searchType","len","setCourseAmount","setFilteredData","handleSwitch","filteredCourses","SpecificCourses","toggleAddCourseClicked","addCourseClicked","toggleAdvancedSearchClicked","advancedSearchClicked","setSelectButtonValue","newVal","selectButtonValue","setSearchTrue","setSearchFalse","x","courseAmount","setSearchCourseClickedTrue","searchCourseClicked","setSearchCourseClickedFalse","toggleOneDelete","oneDelete","handleInputChange","query","prevState","filter","element","toLowerCase","includes","data-tip","effect","AddCourses","addCourse","courseData","AllAppointments","toggleDeleteClicked","deleteClicked","handleDeleteAll","user","d","t","handleDeleteFromDB","u","PaymentDialog","thisCard","parseInt","handlePayment","handleUserPayment","mmId","MyAppointments","toggleSetMatched","s","matched","togglePayClicked","payClicked","handleAllPayment","mid","aid","p","getMyAppointments","CoursesPage","AboutBox","textAlign","href","modeTitle","modeToPage","App","newMode","handleChangeMode","openMenu","closeMenu","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","setUserObjType","newType","editAccountDone","showAboutDialog","isAuthenticated","ModePage","Boolean","hostname","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57fd9918.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\",\r\n    COURSES_NEARBY: \"CoursesMode-Nearby\",\r\n    COURSES_ALL: \"CoursesMode-All\",\r\n    COURSES_ADD: \"CoursesMode-ADD\",\r\n    COURSES_APPT: \"CourseMode-APPT\",\r\n    COURSES_MYAPPT: \"CourseMode-MYAPPT\"\r\n\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.COURSES_ADD || \r\n          this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode === AppMode.COURSES_ADD) {\r\n      this.props.changeMode(AppMode.COURSES);\r\n    } \r\n    else if (this.props.mode !== AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className={\"navbar\" + (this.props.aboutOpen ? \" ignore-click\":\"\")}>  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n      width=\"38px\" />\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\nimport App from './App.js';\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\r\n        <a className=\"sidemenu-item \">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n    case AppMode.COURSES_NEARBY:\r\n    case AppMode.COURSES_ALL:\r\n    case AppMode.COURSES_ADD:\r\n    case AppMode.COURSES_MYAPPT:\r\n    case AppMode.COURSES_APPT:\r\n      return(\r\n        <div>\r\n        <a id=\"specificCourse\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES)}>\r\n            <span className=\"fa fa-search\"></span>&nbsp;Specific Course</a>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_NEARBY)}>\r\n            <span className=\"fa fa-map-marker\"></span>&nbsp;Nearby Courses</a>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_ALL)}>\r\n            <span className=\"fa fa-th-list\"></span>&nbsp;All Speedgolf-Friendly Courses</a>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_MYAPPT)}>\r\n            <span className=\"fa fa-th-list\"></span>&nbsp;My Appointments</a>\r\n        {this.props.type === \"operator\" ? <a id=\"addCourse\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_ADD)}>\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a> : null}\r\n        {this.props.type === \"operator\" ? <a id=\"allAppointments\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_APPT)}>\r\n            <span className=\"fa fa-eye\"></span>&nbsp;View all Appointments</a> : null}\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.profilePicURL} height='60' width='60' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n        </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          {this.props.localAccount ? \r\n            <a id=\"accountBtn\" className=\"sidemenu-item\" onClick={this.props.editAccount}>\r\n              <span className=\"fa fa-user\"></span>&nbsp;Account</a> : null}\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n          \" invisible\" : (this.props.menuOpen || this.props.aboutOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.ROUNDS || \r\n               this.props.mode === AppMode.ROUNDS_EDITROUND || \r\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                  \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a id=\"courseMode\" className={((this.props.mode === AppMode.COURSES) || \r\n        (this.props.mode === AppMode.COURSES_NEARBY) || \r\n        (this.props.mode === AppMode.COURSES_ALL) ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\n\r\nclass ConfirmDeleteAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {emailMatches: false};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.emailRef.current.focus();\r\n    }\r\n\r\n    handleChange = () => {\r\n        const match = (this.emailRef.current.value === this.props.email);\r\n        if (match != this.state.emailMatches) {\r\n            this.setState({emailMatches: match});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete your account? <br />\r\n                 <i>This action cannot be undone.</i></p>\r\n              <label>\r\n                Confirm Email ({this.props.email}):\r\n                <br/>\r\n                <input \r\n                    className=\"form-center\"\r\n                    type=\"text\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <br />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\r\n                  Yes, Delete My Account</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteAccount;","import React from 'react';\r\n\r\nclass AddCardDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                    name: '',\r\n                    number: 0,\r\n                    expDate: ''\r\n                };\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        let data = this.state;\r\n        this.props.addCard(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Enter Card Information</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                  <center>\r\n                    <label>\r\n                        Name on Card: <br></br>\r\n                        <input id=\"name\" name=\"name\" placeholder=\"name\" value={this.state.name} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Card Number: <br></br>\r\n                        <input id=\"number\" name=\"number\" placeholder=\"number\" value={this.state.number} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Expiration Date: (format: MM/YY)<br></br>\r\n                        <input id=\"expDate\" name=\"expDate\" placeholder=\"expDate\" value={this.state.expDate} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                  </center>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.handleSubmit}>\r\n                  Add Card</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCardDialog;","import React from 'react';\r\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\r\nimport AddCardDialog from './AddCardDialog.js';\r\nimport { async } from 'regenerator-runtime';\r\n\r\nclass CreateEditAccountDialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.origAccountInfo = null;\r\n        //Create a ref for the email input DOM element\r\n        this.newUserRef = React.createRef();\r\n        this.repeatPassRef = React.createRef();\r\n        this.profilePicRef = React.createRef();\r\n        this.state = {\r\n                    type: \"user\",\r\n                    accountName: \"\",\r\n                    displayName: \"\",\r\n                    profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                    password: \"\",\r\n                    passwordRepeat: \"\",\r\n                    securityQuestion: \"\",\r\n                    securityAnswer: \"\",\r\n                    formUpdated: false,\r\n                    confirmDelete: false,\r\n                    addCardClicked: false, card: 0};\r\n    } \r\n\r\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\r\n    //the database and push them into the state.\r\n    async componentDidMount() {\r\n        if (!this.props.create) {\r\n            //obtain current user data from database and push into state\r\n            const url = \"/users/\" + this.props.userId;\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n            const userData = JSON.parse(json);\r\n            this.origAccountInfo = userData; //This determines whether update can occur\r\n            this.origAccountInfo.passwordRepeat = userData.password;\r\n            this.setState({\r\n                        type: this.props.type,\r\n                        accountName: this.props.userId,\r\n                        displayName: userData.displayName,\r\n                        profilePicURL: userData.profilePicURL,\r\n                        password: userData.password,\r\n                        passwordRepeat: userData.password,\r\n                        securityQuestion: userData.securityQuestion,\r\n                        securityAnswer: userData.securityAnswer});\r\n        this.getCard();\r\n\r\n        }\r\n    }\r\n\r\n    //checkDataValidity -- Callback function invoked after a form element in\r\n    //the 'Create Account' dialog box changes and component state has been\r\n    //updated. We first check whether the passwords match. If they do not, \r\n    //we set a custom validity message to be displayed when the user clicks the\r\n    //'Create Account' button. Otherwise, we reset the custom validity message\r\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n    //Second, we check whether anything in the form changed from the original.\r\n    //If so, we update the 'formUpdated' state var, so that the form's submit\r\n    //button is enabled.\r\n    checkDataValidity = () => {\r\n        if (this.state.password != this.state.passwordRepeat) {\r\n            //Passwords don't match\r\n            this.repeatPassRef.current.setCustomValidity(\r\n            \"This password must match password entered in previous field.\");\r\n        } else {\r\n            this.repeatPassRef.current.setCustomValidity(\"\");\r\n        }\r\n    }\r\n\r\n    //handleChange--Called when a field in a dialog box form changes.\r\n    handleChange = (event) => {\r\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\r\n        if (event.target.name === \"profilePic\") {\r\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\r\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                               formUpdated: formUpdated},\r\n                               this.checkDataValidity);\r\n            } else { //The user selected a file\r\n                const self = this;\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\r\n                reader.addEventListener(\"load\",function() {\r\n                    self.setState({profilePicURL:  this.result,\r\n                                   formUpdated: formUpdated},this.checkDataValidity);\r\n                });\r\n                \r\n            }\r\n        } else {\r\n            this.setState({[event.target.name]: event.target.value,\r\n                           formUpdated: formUpdated},this.checkDataValidity);\r\n        }\r\n    } \r\n\r\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \r\n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\r\n    //true since this.origAccountInfo is set to null.\r\n    //Should be called whenever the user makes a change to form data.\r\n    formIsUpdated = (updateField,updateVal) => {\r\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\r\n        if (updateField != \"type\" && \r\n             this.state.type != this.origAccountInfo.type) \r\n             {return true;}\r\n        if (updateField != \"displayName\" && \r\n             this.state.displayName != this.origAccountInfo.displayName) \r\n             {return true;}\r\n        if (updateField != \"profilePicURL\" && \r\n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \r\n             {return true;}\r\n        if (updateField != \"password\" &&\r\n            this.state.password !== this.origAccountInfo.password)\r\n            {return true;}\r\n        if (updateField != \"passwordRepeat\" &&\r\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\r\n            {return true;}\r\n        if (updateField != \"securityQuestion\" &&\r\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\r\n            {return true;}\r\n        if (updateField != \"securityAnswer\" &&\r\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\r\n            {return true;}\r\n        return false;\r\n    }\r\n\r\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\r\n    //Sets default value of display name to value entered into Email field \r\n    //as a courtesy.\r\n    setDefaultDisplayName = (event) => {\r\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\r\n        this.setState({displayName: event.target.value});\r\n      }\r\n    }\r\n\r\n    //handleSubmit -- Triggered when user clicks on submit button to\r\n    //either create or edit account.\r\n    //Custom data checking ensures user account under this email does not \r\n    //already exist and that the rest of the info is valid. We create a new  \r\n    // object for user, save it to localStorage and take user to app's \r\n    //landing page. \r\n    handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        //Initialize user account\r\n        let userData = {\r\n            type: this.state.type,\r\n            displayName: this.state.displayName,\r\n            password: this.state.password,\r\n            profilePicURL: this.state.profilePicURL,\r\n            securityQuestion: this.state.securityQuestion,\r\n            securityAnswer: this.state.securityAnswer\r\n        };\r\n        const url = '/users/' + this.state.accountName;\r\n        let res;\r\n        if (this.props.create) { //use POST route to create new user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'POST',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\r\n            } else { //Unsuccessful account creation\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        } else { //use PUT route to update existing user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'PUT',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"User Account Updated!\",false);\r\n            } else { //Unsuccessful account update\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //deleteAccount -- Called after confirms account deletion. \r\n    //Uses DELETE server route to perform server deletion. \r\n    //Calls on done with status message and\r\n    //true if delete was succesful, false otherwise.\r\n    deleteAccount = async() => {\r\n       const url = '/users/' + this.state.accountName;\r\n       const res = await fetch(url, \r\n                    {method: 'DELETE'}); \r\n        if (res.status == 200) { //successful account deletion!\r\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\r\n        } else { //Unsuccessful account deletion\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.props.done(resText,false);\r\n        }\r\n        this.setState({confirmDelete: false});\r\n    }\r\n\r\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\r\n    //button to indicate intention to delete account. Presents the Confirm\r\n    //Delete dialog box.\r\n    confirmDeleteAccount = (e) => {\r\n        e.preventDefault();\r\n        this.setState({confirmDelete: true});\r\n    }\r\n\r\n    toggleAddCardClicked = () => {\r\n        this.setState(state => ({addCardClicked: !state.addCardClicked}));\r\n    }\r\n\r\n    addCard = async(data) =>{\r\n        console.log(data);\r\n        const url = '/cards/' + this.state.accountName;\r\n        let res;\r\n        res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(data)}); \r\n        if (res.status == 200) { //successful account creation!\r\n            this.props.done(\"Card Added\",false);\r\n        } else { //Unsuccessful account update\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.props.done(resText,false);\r\n        }\r\n        this.toggleAddCardClicked();\r\n    }\r\n\r\n    getCard = async() => {\r\n        const url = '/cards/'+this.state.accountName;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCard = JSON.parse(obj);\r\n            if (thisCard.length != 0)\r\n            {\r\n                this.setState({\r\n                    card: 1\r\n                });\r\n            }\r\n            \r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n    return (  \r\n    <div className=\"modal\" role=\"dialog\">\r\n    <div className=\"modal-dialog modal-lg\"></div>\r\n        <div className=\"modal-content form-center\">\r\n            <div className=\"modal-header\">\r\n              <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\r\n              <button className=\"modal-close\" \r\n                       onClick={this.props.cancel}>\r\n                &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n                Type:\r\n                <select name=\"type\" value={this.state.type} \r\n                    className=\"form-control form-center\" onChange={this.handleChange}>\r\n                    <option value=\"user\">User</option>\r\n                    <option value=\"operator\">Operator</option>\r\n                </select> \r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Email: \r\n                <input  \r\n                autocomplete=\"off\"\r\n                disabled={!this.props.create}\r\n                className=\"form-control form-text form-center\"\r\n                name=\"accountName\"\r\n                type=\"email\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Email Address\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                ref={this.newUserRef}\r\n                value={this.state.accountName}\r\n                onChange={this.handleChange}\r\n                onBlur={this.setDefaultDisplayName}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Password:\r\n                <input\r\n                autocomplete=\"off\"\r\n                className=\"form-control form-text form-center\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\r\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                required={true}\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Repeat Password:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"passwordRepeat\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Repeat Password\"\r\n                required={true}\r\n                ref={this.repeatPassRef}\r\n                value={this.state.passwordRepeat}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Display Name:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"displayName\"\r\n                type=\"text\"\r\n                size=\"30\"\r\n                placeholder=\"Display Name\"\r\n                required={true}\r\n                value={this.state.displayName}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Profile Picture:<br/>\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"profilePic\"\r\n                type=\"file\"\r\n                accept=\"image/x-png,image/gif,image/jpeg\" \r\n                ref={this.profilePicRef}\r\n                value={this.state.profilePic}\r\n                onChange={this.handleChange}\r\n                />\r\n                <img src={this.state.profilePicURL != \"\" ? \r\n                            this.state.profilePicURL :\r\n                            this.state.profilePicDataURL} \r\n                        height=\"60\" width=\"60\" \r\n                 />\r\n            </label> \r\n            <br/>\r\n            <label>\r\n                Security Question:\r\n                <textarea\r\n                className=\"form-control form-text form-center\"\r\n                name=\"securityQuestion\"\r\n                size=\"35\"\r\n                placeholder=\"Security Question\"\r\n                rows=\"2\"\r\n                cols=\"35\"\r\n                maxLength=\"100\"\r\n                required={true}\r\n                value={this.state.securityQuestion}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Answer to Security Question:\r\n                <textarea\r\n                className=\"form-control form-text form-center\"\r\n                name=\"securityAnswer\"\r\n                type=\"text\"\r\n                placeholder=\"Answer\"\r\n                rows=\"2\"\r\n                cols=\"35\"\r\n                maxLength=\"100\"\r\n                required={true}\r\n                value={this.state.securityAnswer}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            {!this.props.create ?  \r\n            <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\r\n                Delete Account...\r\n            </button> : null}\r\n            <br/><br/>\r\n            {!this.props.create ?  \r\n            <button type=\"button\" className=\"btn btn-small btn-primary\" onClick={this.toggleAddCardClicked} disabled={this.state.card === 1 ? true:false}>\r\n                Add Card\r\n            </button> : null}\r\n            <br/><br/>\r\n            <button role=\"submit\" \r\n                disabled={!this.state.formUpdated}\r\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\r\n                <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\r\n                &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\r\n            </button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        {this.state.confirmDelete ? \r\n          <ConfirmDeleteAccount email={this.state.accountName}\r\n                                deleteAccount={this.deleteAccount}\r\n                                close={() => (this.setState({confirmDelete: false}))}\r\n         /> : null}\r\n         {this.state.addCardClicked ? \r\n          <AddCardDialog email={this.state.accountName}\r\n                                addCard={this.addCard}\r\n                                close={() => (this.setState({addCardClicked: false}))}\r\n         /> : null}\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default CreateEditAccountDialog;","import React from 'react'\r\n\r\nclass ResetPasswordDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.resetPasswordRef = React.createRef();\r\n        this.resetPasswordRepeatRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\r\n    //If so, call on resetPassword in parent component to actually reset the password.\r\n    //Otherwise, display an error message prompting the user to try again.\r\n    handleSubmit= (event) => {\r\n        event.preventDefault();\r\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\r\n            this.props.resetPassword(this.resetPasswordRef.current.value);\r\n        } else {\r\n            this.resetPasswordRepeatRef.current.focus();\r\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\r\n        }\r\n    }\r\n\r\n    checkForSubmit = (e) => {\r\n        if (e.code === \"Enter\") {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Reset Password</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                        className=\"form-control form-text\"\r\n                        ref={this.resetPasswordRef}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Repeat New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat new password\"\r\n                        className=\"form-control form-text\"\r\n                        onKeyUp={this.checkForSubmit}\r\n                        ref={this.resetPasswordRepeatRef}\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                     className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );\r\n        \r\n    }\r\n}\r\n\r\nexport default ResetPasswordDialog;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass LookUpAccountDialog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n    //button, we check whether the account exists. If it does, we update the state,\r\n    //setting the resetEmail var to the email entered, hiding the current dialog box\r\n    //and showing the security question dialog box.\r\n    handleLookUpAccount = async(event) => {\r\n        event.preventDefault();\r\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            const obj = JSON.parse(json);\r\n            if (obj.authStrategy === \"local\") {\r\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\r\n            } else { //Account exists but was created through OAuth so password can't be reset \r\n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\r\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\r\n            }\r\n        } else {\r\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={() => {this.props.cancelResetPassword()}}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\r\n                    <form onSubmit={this.handleLookUpAccount}>\r\n                    <label>\r\n                        Account Email Address: \r\n                        <input\r\n                        ref={this.emailRef}\r\n                        className=\"form-control form-text\"\r\n                        type=\"email\"\r\n                        size=\"35\"\r\n                        placeholder=\"Enter Email Address\"\r\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                        ref={this.emailRef}\r\n                        required={true}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" \r\n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n        );   \r\n    }\r\n\r\n}\r\n\r\nexport default LookUpAccountDialog;\r\n","import React from 'react';\r\n\r\nclass SecurityQuestionDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.securityAnswerRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //Focus cursor in email secrity answer field when mounted\r\n    componentDidMount() {\r\n        this.securityAnswerRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.securityAnswerRef.current.value === this.props.answer) {\r\n            this.props.getNewPassword();\r\n        } else {\r\n            this.securityAnswerRef.current.focus();\r\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Security Question: \r\n                        <textarea\r\n                        readOnly={true}\r\n                        value={this.props.question}\r\n                        className=\"form-control form-text\"\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Security Answer: \r\n                        <textarea\r\n                        className=\"form-control form-text\"\r\n                        placeholder=\"Enter Security Question Answer\"\r\n                        ref={this.securityAnswerRef}\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );        \r\n    }\r\n}\r\n export default SecurityQuestionDialog;","import React from 'react';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\r\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\r\nimport LookUpAccountDialog from './LookUpAccountDialog.js';\r\nimport SecurityQuestionDialog from './SecurityQuestionDialog.js';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\nconstructor() {\r\n    super();\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.passwordInputRef = React.createRef();\r\n    this.state = {statusMsg: \"\",\r\n                  loginBtnIcon: \"fa fa-sign-in\",\r\n                  loginBtnLabel: \"Log In\",\r\n                  showLookUpAccountDialog: false,\r\n                  showSecurityQuestionDialog: false,\r\n                  showResetPaswordDialog: false,\r\n                  githubIcon: \"fa fa-github\",\r\n                  githubLabel: \"Sign in with GitHub\",\r\n                  loginMsg: \"\",\r\n                  newAccountCreated: false,\r\n                  googleIcon: \"fa fa-google\",\r\n                  googleLabel: \"Sign in with Google\"\r\n                  };\r\n} \r\n    \r\n//Focus cursor in email input field when mounted\r\ncomponentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n}  \r\n\r\n//handleLoginSubmit -- Called when user clicks on login button.\r\nhandleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value +\r\n                \"&password=\" + this.passwordInputRef.current.value;\r\n    const res = await fetch(url, {method: 'POST'}); \r\n    if (res.status == 200) { //successful login!\r\n        window.open(\"/\",\"_self\");\r\n    } else { //Unsuccessful login\r\n      const resText = await res.text();\r\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                     loginBtnLabel: \"Log In\",\r\n                     statusMsg: resText});\r\n    }\r\n}\r\n\r\n  //accountCreateDone -- Called by child CreateAccountDialog component when \r\n  //user attempted to create new account. Hide the dialog and display \r\n  //a message indicating result of the attempt.\r\n  accountCreateDone = (msg) => {\r\n      this.setState({statusMsg: msg,\r\n                     showCreateAccountDialog: false});\r\n  }\r\n\r\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n  cancelCreateAccount = () => {\r\n      this.setState({showCreateAccountDialog: false});\r\n  }\r\n\r\n//cancelResetPassword -- Called by one of the child three child dialog box components when\r\n//the user decides to cancel resetting their password. Toggles state so that all three\r\n//of the dialog boxes are hidden\r\ncancelResetPassword = () => {\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.setState({showLookUpAccountDialog: false,\r\n                   showSecurityQuestionDialog: false,\r\n                   showResetPaswordDialog: false});             \r\n}\r\n\r\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n//provider\r\nhandleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`,\"_self\");\r\n}\r\n\r\n//handleOAuthLoginClick -- Called whent the user clicks on button to\r\n//authenticate via a third-party OAuth service. The name of the provider is\r\n//passed in as a parameter.\r\nhandleOAuthLoginClick = (provider) => {\r\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n                  [provider + \"Label\"] : \"Connecting...\"});\r\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\r\n}\r\n\r\n//getSecurityAnswer: Given the id, security question, and security answer obtained\r\n//from the LookUpAccountDialog component, update state such that the user will\r\n//next be prompted to enter security question and answer for verification\r\ngetSecurityAnswer = (userId, question, answer) => {\r\n    this.resetUserId = userId;\r\n    this.resetQ = question;\r\n    this.resetA = answer;\r\n    this.setState({showLookUpAccountDialog: false,\r\n                   showSecurityQuestionDialog: true\r\n                });\r\n}\r\n\r\n//getNewPassword-- Called after user successfully provides correct answer\r\n//to security question. Presents the \"Reset Password\" dialog box.\r\ngetNewPassword = () => {\r\n    this.setState({showSecurityQuestionDialog: false,\r\n                    showResetPaswordDialog: true});\r\n}\r\n\r\n//resetPassword--Called after the user successfully enters a new (acceptable)\r\n//password. pw contains the new password. Call on the Update (PUT) server\r\n//route to update the user's password in the database.\r\nresetPassword = async(pw) => {\r\n    const url = \"/users/\" + this.resetUserId;\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'PUT',\r\n        body: JSON.stringify({password: pw})}); \r\n    if (res.status == 200) { //successful update creation!\r\n        this.setState({showResetPaswordDialog: false,\r\n                       statusMsg: \"Password successfully reset!\"});\r\n    } else { //Unsuccessful account creation\r\n        //Grab textual error message\r\n        const resText = await res.text();\r\n        this.setState({showResetPasswordDialog: false,\r\n                      statusMsg: resText});\r\n    }\r\n    \r\n}\r\n\r\n//newAccountCreated -- Called after successful creation of a new account\r\naccountCreateDone = (msg,deleted) => {\r\n    this.setState({statusMsg: msg,\r\n                   showCreateAccountDialog: false});\r\n}\r\n\r\n//closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\r\ncloseStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n}\r\n\r\n//cancelCreateAccount -- called to hide Create Account dialog without creating acct\r\ncancelCreateAccount = () => {\r\n    this.setState({showCreateAccountDialog: false});\r\n}\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n        <center>\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.statusMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n            {this.state.showLookUpAccountDialog ? \r\n              <LookUpAccountDialog cancelResetPassword={this.cancelResetPassword}\r\n                                   getSecurityAnswer={this.getSecurityAnswer}/> : null}\r\n            {this.state.showSecurityQuestionDialog ? \r\n               <SecurityQuestionDialog cancelResetPassword={this.cancelResetPassword}\r\n                                       question={this.resetQ}\r\n                                       answer={this.resetA}\r\n                                       getNewPassword={this.getNewPassword}/> : null}\r\n            {this.state.showResetPaswordDialog ? \r\n              <ResetPasswordDialog cancelResetPassword={this.cancelResetPassword}\r\n                                   resetPassword={this.resetPassword} /> : null}\r\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Email:\r\n                <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Password:\r\n                <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                id=\"passwordInput\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\r\n                &nbsp;{this.state.loginBtnLabel}\r\n            </button>\r\n            <p>\r\n            <button type=\"button\" className=\"btn btn-link login-link\" \r\n                    onClick={() => {this.setState({showCreateAccountDialog: true});}}>\r\n                Create an account</button> | \r\n                <button type=\"button\" className=\"btn btn-link login-link\"\r\n                        onClick={() => {this.setState({showLookUpAccountDialog: true});}}>\r\n                Reset your password</button>\r\n            </p>  \r\n            <button id=\"github-login-btn\" type=\"button\" className=\"btn btn-github\"\r\n               onClick={() => this.handleOAuthLoginClick(\"github\")}>\r\n              <span className={this.state.githubIcon}></span>&nbsp;\r\n                {this.state.githubLabel}\r\n            </button>\r\n            <button id=\"google-login-btn\" type=\"button\" className=\"btn btn-google\"\r\n               onClick={() => this.handleOAuthLoginClick(\"google\")}>\r\n              <span className={this.state.googleIcon}></span>&nbsp;\r\n                {this.state.googleLabel}\r\n            </button>\r\n            <p>\r\n                <i>Version CptS 489</i>\r\n            </p>\r\n            </form>\r\n            {this.state.showCreateAccountDialog ? \r\n              <CreateEditAccountDialog\r\n                create={true} \r\n                done={this.accountCreateDone}\r\n                cancel={this.cancelCreateAccount} /> : null}\r\n            {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass FeedPage extends React.Component {\r\n\r\n    // handleClick = (type) => {\r\n    //     this.props.userObj.type = type;\r\n    //     this.props.setUserObjType(this.props.userObj);\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"feedMode\" className=\"padded-page\">\r\n            <center>\r\n            {/* {(this.props.userObj.authStrategy === \"google\") || (this.props.userObj.authStrategy === \"github\") ?\r\n                <div className=\"modal\" role=\"dialog\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h3>What do you want to be?</h3>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                            <Button onClick={() => this.handleClick(\"user\")}>User</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <Button onClick={() => this.handleClick(\"operator\")}>Operator</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : null} */}\r\n            <h1 >Activity Feed</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\n\r\nclass ConfirmDeleteRound extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Round Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete this round?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteRound}>\r\n                  Yes, Delete</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteRound;","import React from 'react';\r\nimport ConfirmDeleteRound from './ConfirmDeleteRound.js';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {showConfirmDelete: false};\r\n  }\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //deleteRound -- Triggered when the user clicks on the \"Yes, Delete\"\r\n  //button in the Confirm Delete dialog box. It executes the deletion and\r\n  //closes the dialog box.\r\n  deleteRound = () => {\r\n    this.props.deleteRound();\r\n    this.setState({showConfirmDelete: false});\r\n  }\r\n\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({showConfirmDelete: true});\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.rounds.length; ++r) {\r\n    table.push(\r\n      <tr key={r}>\r\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n        <td>{this.props.rounds[r].course}</td>\r\n        <td>{(Number(this.props.rounds[r].strokes) + \r\n              Number(this.props.rounds[r].minutes)) +\r\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \" (\" + \r\n              this.props.rounds[r].strokes + \r\n              \" in \" + this.props.rounds[r].minutes + \":\" + \r\n              (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \")\"}\r\n        </td>\r\n        <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button onClick={this.props.menuOpen ? null : \r\n          () => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n      {this.state.showConfirmDelete ?\r\n        <ConfirmDeleteRound \r\n          close={() => this.setState({showConfirmDelete: false})} \r\n          deleteRound={this.deleteRound} /> : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  course: \"\",\r\n                  type: \"practice\",\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\"}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor() {\r\n        super();\r\n        this.deleteId = \"\";\r\n        this.editId = \"\";\r\n        this.state = {errorMsg: \"\"};           \r\n    }\r\n\r\n    //addRound -- Given an object newData containing a new round, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.setState({errorMsg: \"\"});\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round in the database. \r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.editId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\r\n    deleteRound = async () => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.deleteId]._id;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: \"An error occurred when attempting to delete round from database: \" \r\n            + msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }  \r\n    }\r\n \r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.deleteId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.editId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    closeErrorMsg = () => {\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    {this.state.errorMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.errorMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeErrorMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n                    <RoundsTable \r\n                        rounds={this.props.userObj.rounds}\r\n                        setEditId={this.setEditId}\r\n                        setDeleteId={this.setDeleteId}\r\n                        deleteRound={this.deleteRound}\r\n                        changeMode={this.props.changeMode}\r\n                        menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                let thisRound = {...this.props.userObj.rounds[this.editId]};\r\n                thisRound.date = thisRound.date.substr(0,10);\r\n                if (thisRound.seconds < 10) {\r\n                    thisRound.seconds = \"0\" + thisRound.seconds;\r\n                } \r\n                delete thisRound.SGS;\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={thisRound} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass RatesModal extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n                      id: \"\"\r\n                   };\r\n        }\r\n\r\n        // Get information of the course that was selected on render\r\n        componentDidMount(){\r\n            this.getSearchedCourse(this.props.course);\r\n        }\r\n\r\n        // Get information of the course that was selected to show rates information\r\n        getSearchedCourse = async (id) => {\r\n            const url = '/courses/'+id;\r\n            fetch(url)\r\n            .then((response) => {\r\n                if (response.status == 200)\r\n                    return response.json();\r\n                else\r\n                {\r\n                    throw Error(response.statusText);\r\n                }\r\n            })\r\n            .then((obj) => \r\n            {\r\n                console.log(\"GET RATES SUCCESS!\");\r\n                let thisCourse = JSON.parse(obj);\r\n                this.setState({\r\n                    courseName: thisCourse.courseName,\r\n                    id: thisCourse.id,\r\n                    course: (\r\n                        <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                            <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                            <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                            <Card.Body>\r\n                                <Card.Title>Location: {thisCourse.location}</Card.Title>\r\n                                <Card.Text>RATES: ALL WEEK</Card.Text>\r\n                                <Card.Text>STANDARD: ${thisCourse.rateStandard}</Card.Text>\r\n                                <Card.Text>SENIOR: ${thisCourse.rateSenior}</Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer>Rates and policies are subject to change without notice.</Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                });\r\n            }).catch((error) =>{\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\nrender() {\r\n    return (\r\n        <div id=\"ratesModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n            <h3>{this.state.courseName}</h3>\r\n                <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <center>\r\n            <div className=\"modal-body\">\r\n                <Container fluid={true}>\r\n                    <Row noGutters>\r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n                </center>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.handleClose}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default RatesModal;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\nimport { async } from 'regenerator-runtime';\r\n\r\nclass MoreModal extends React.Component {\r\n\r\nconstructor(){\r\n    super();\r\n    this.state={\r\n        id: \"\",\r\n        reviewClicked: false,\r\n        review: \"\",\r\n        rating: \"\"\r\n    };\r\n}\r\n\r\n// Get information on the course that was selected on render\r\ncomponentDidMount(){\r\n    this.getSearchedCourse(this.props.course);\r\n}\r\n\r\ntoggleReviewClicked = () =>{\r\n    this.setState(state =>({reviewClicked: !state.reviewClicked}));\r\n}\r\n\r\n// Get information of course selected to show more information\r\n// Also save the course information, for PUT request, in case user wants to edit\r\ngetSearchedCourse = async (id) => {\r\n    const url = '/courses/'+id;\r\n    fetch(url)\r\n    .then((response) => {\r\n        if (response.status == 200)\r\n            return response.json();\r\n        else\r\n        {\r\n            this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n            throw Error(response.statusText);\r\n        }\r\n    })\r\n    .then((obj) => \r\n    {\r\n        console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n        let thisCourse = JSON.parse(obj);\r\n        this.setState({\r\n            courseName: thisCourse.courseName,\r\n            id: thisCourse.id,\r\n            rating: thisCourse.rating,\r\n            review: thisCourse.review,\r\n            picture: thisCourse.picture,\r\n            location: thisCourse.location,\r\n            yardage: thisCourse.yardage,\r\n            runningDistance: thisCourse.runningDistance,\r\n            timePar: thisCourse.timePar,\r\n            bestScore: thisCourse.bestScore,\r\n            recordHolder: thisCourse.recordHolder,\r\n            rateSenior: thisCourse.rateSenior,\r\n            rateStandard: thisCourse.rateStandard,\r\n            course: (\r\n                <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                    <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                    <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                    <Card.Body>\r\n                        <Card.Title>Location: {thisCourse.location}</Card.Title>\r\n                        <Card.Text>Yardage: {thisCourse.yardage}</Card.Text>\r\n                        <Card.Text>Running Distance: {thisCourse.runningDistance}</Card.Text>\r\n                        <Card.Text>Time Par: {thisCourse.timePar}</Card.Text>\r\n                        <Card.Text>Best Score: {thisCourse.bestScore}</Card.Text>\r\n                        <Card.Text>Record Holder: {thisCourse.recordHolder}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>Rating: {thisCourse.rating}<br></br>Review: {thisCourse.review}</Card.Footer>\r\n                    <Button onClick={this.toggleReviewClicked}>Leave A Review:</Button>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        });\r\n    }).catch((error) =>{\r\n        console.log(error);\r\n    });\r\n}\r\n\r\n// Sends a PUT request to the backend to edit a course in the courses schema\r\neditCourse = async (newData) =>{\r\n    const url = '/courses/' + this.state.id;\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'PUT',\r\n        body: JSON.stringify(newData)}); \r\n    const msg = await res.text();\r\n    console.log(msg);\r\n    if (res.status === 200) {\r\n        this.toggleReviewClicked();\r\n        this.props.handleClose();\r\n        window.location.reload(false);\r\n    } else {\r\n        alert(msg);\r\n    }\r\n}\r\n\r\n// Save the new information that were changed then call editCourse(newInformation) to update the backend\r\nhandleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    let newData = {\r\n        courseName: this.state.courseName,\r\n        id: this.state.id,\r\n        rating: this.state.rating,\r\n        review: this.state.review,\r\n        picture: this.state.picture,\r\n        location: this.state.location,\r\n        yardage: this.state.yardage,\r\n        runningDistance: this.state.runningDistance,\r\n        timePar: this.state.timePar,\r\n        bestScore: this.state.bestScore,\r\n        recordHolder: this.state.recordHolder,\r\n        rateSenior: this.state.rateSenior,\r\n        rateStandard: this.state.rateStandard\r\n    }\r\n    this.editCourse(newData);\r\n\r\n}\r\n\r\nhandleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <div id=\"moreModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>{this.state.courseName}</h3>\r\n                <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            {this.state.reviewClicked ? \r\n                <div className=\"modal\" role=\"dialog\">\r\n                <div className=\"modal-dialog modal-lg\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>Leaving A Review</h3>\r\n                        <button className=\"modal-close\" onClick={this.toggleReviewClicked}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                <div className=\"modal-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>\r\n                        <label>Rating:\r\n                        <select name=\"rating\" value={this.state.rating} \r\n                        className=\"form-control form-center\" onChange={this.handleChange}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        </select> \r\n                        </label>\r\n                        <p></p>\r\n                        <label>Review:\r\n                        <textarea name=\"review\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                            placeholder=\"Enter round notes\" value={this.state.review} \r\n                            onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <Button type=\"submit\">Submit Review</Button>\r\n                        </Row>\r\n                    </Container>\r\n                    </form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-primary btn-color-theme\"\r\n                    onClick={this.toggleReviewClicked}>OK</button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            :null}\r\n            <div className=\"modal-body\">\r\n                <Container fluid={true}>\r\n                    <Row noGutters>\r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            {/* <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.handleClose}>OK</button>\r\n            </div> */}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MoreModal;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\n// For setting min and max value of <input type=\"date\">\r\n// Also to later usage of actual booking tee time implementation\r\nlet today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\nlet tomorrow = new Date(today);\r\ntomorrow.setDate(tomorrow.getDate() + 1);\r\nlet thirdDay = new Date(tomorrow);\r\nthirdDay.setDate(thirdDay.getDate() + 1);\r\nlet fourthDay = new Date(thirdDay);\r\nfourthDay.setDate(fourthDay.getDate() + 1);\r\nlet fifthDay = new Date(fourthDay);\r\nfifthDay.setDate(fifthDay.getDate() + 1);\r\nlet sixthDay = new Date(fifthDay);\r\nsixthDay.setDate(sixthDay.getDate() + 1);\r\nlet seventhDay = new Date(sixthDay);\r\nseventhDay.setDate(seventhDay.getDate() + 1);\r\n\r\nlet day1 = today.toISOString().substring(0,10);\r\nconsole.log(day1);\r\nlet day2 = tomorrow.toISOString().substring(0,10);\r\nlet day3 = thirdDay.toISOString().substring(0,10);\r\nlet day4 = fourthDay.toISOString().substring(0,10);\r\nlet day5 = fifthDay.toISOString().substring(0,10);\r\nlet day6 = sixthDay.toISOString().substring(0,10);\r\nlet day7 = seventhDay.toISOString().substring(0,10);\r\n\r\n\r\nclass BookingPage extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            courseName: this.props.course,\r\n            bookingTime: '',\r\n            bookingDate: day1,\r\n            course: ''\r\n        }\r\n    }\r\n\r\n    // Get information on selected course on render\r\n    componentDidMount(){\r\n        this.getSearchedCourse(this.props.course);\r\n        this.getAllAppointments();\r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getAllAppointments = async () => {\r\n        const url = '/allappointments_op/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                appointments: thisCourse.map((c) =>(\r\n                    {\r\n                        username: c.username,\r\n                        courseName: c.courseName,\r\n                        date: c.date,\r\n                        time: c.time\r\n                    }\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    // Get information on selected course then set it to a state for usage in this component\r\n    getSearchedCourse = async (id) => {\r\n        const url = '/courses/'+id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: thisCourse\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    // Checks for the date and time that were requested for booking\r\n    // Then prepare data to send to the database\r\n    // by calling editCourse(newData)\r\n    handleBookTeeTime = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Booking tee time\");\r\n        let newData = {\r\n            appointments: this.state.course.appointments,\r\n            courseName: this.state.course.courseName,\r\n            id: this.state.course.id,\r\n            rating: this.state.course.rating,\r\n            review: this.state.course.review,\r\n            picture: this.state.course.picture,\r\n            location: this.state.course.location,\r\n            yardage: this.state.course.yardage,\r\n            runningDistance: this.state.course.runningDistance,\r\n            timePar: this.state.course.timePar,\r\n            bestScore: this.state.course.bestScore,\r\n            recordHolder: this.state.course.recordHolder,\r\n            rateSenior: this.state.course.rateSenior,\r\n            rateStandard: this.state.course.rateStandard\r\n        }\r\n\r\n        let newappt = {\r\n            userId: this.props.userObj.id,\r\n            username: this.props.userObj.displayName,\r\n            courseName: this.props.courseName,\r\n            date: '',\r\n            time: '',\r\n            paid: \"false\"\r\n        }\r\n\r\n        switch(this.state.bookingDate){\r\n            case day1:\r\n                newData.appointments.day1[this.state.bookingTime] = false;\r\n                newappt.date = day1;\r\n                break;\r\n            case day2:\r\n                newData.appointments.day2[this.state.bookingTime] = false;\r\n                newappt.date = day2;\r\n                break;\r\n            case day3:\r\n                newData.appointments.day3[this.state.bookingTime] = false;\r\n                newappt.date = day3;\r\n                break;\r\n            case day4:\r\n                newData.appointments.day4[this.state.bookingTime] = false;\r\n                newappt.date = day4;\r\n                break;\r\n            case day5:\r\n                newData.appointments.day5[this.state.bookingTime] = false;\r\n                newappt.date = day5;\r\n                break;\r\n            case day6:\r\n                newData.appointments.day6[this.state.bookingTime] = false;\r\n                newappt.date = day6;\r\n                break;\r\n            case day7:\r\n                newData.appointments.day7[this.state.bookingTime] = false;\r\n                newappt.date = day7;\r\n                break;\r\n        }\r\n        switch(this.state.bookingTime){\r\n            case '0':\r\n                newappt.time = \"9:00 AM\";\r\n                break;\r\n            case '1':\r\n                newappt.time = \"10:00 AM\";\r\n                break;\r\n            case '2':\r\n                newappt.time = \"11:00 AM\";\r\n                break;\r\n            case '3':\r\n                newappt.time = \"12:00 PM\";\r\n                break;\r\n            case '4':\r\n                newappt.time = \"1:00 PM\";\r\n                break;\r\n            case '5':\r\n                newappt.time = \"2:00 PM\";\r\n                break;\r\n            case '6':\r\n                newappt.time = \"3:00 PM\";\r\n                break;\r\n            case '7':\r\n                newappt.time = \"4:00 PM\";\r\n                break;\r\n            case '8':\r\n                newappt.time = \"5:00 PM\";\r\n                break;\r\n        }\r\n        this.addAppointment(newappt);\r\n        this.addAppointment_op(newappt);\r\n        this.editCourse(newData);\r\n        this.props.handleClose();\r\n    }\r\n\r\n    // Sends a PUT request to the backend with the new information\r\n    // new information here is the appointments that were scheduled\r\n    addAppointment_op = async (newData) =>{\r\n        const url = '/appointments_op/';\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            // this.toggleReviewClicked();\r\n            // this.props.handleClose();\r\n            alert(\"Appointment_op Added\");\r\n            if (this.props.mode === AppMode.COURSES)\r\n                this.props.refreshOnUpdate(AppMode.COURSES);\r\n            else \r\n                this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        }\r\n    }\r\n\r\n    // Sends a PUT request to the backend with the new information\r\n    // new information here is the appointments that were scheduled\r\n    addAppointment = async (newData) =>{\r\n        const url = '/appointments/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            // this.toggleReviewClicked();\r\n            // this.props.handleClose();\r\n            alert(\"Appointment Added\");\r\n            if (this.props.mode === AppMode.COURSES)\r\n                this.props.refreshOnUpdate(AppMode.COURSES);\r\n            else \r\n                this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        }\r\n    }\r\n\r\n    // Sends a PUT request to the backend with the new information\r\n    // new information here is the appointments that were scheduled\r\n    editCourse = async (newData) =>{\r\n        const url = '/courses/' + this.props.course;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            // this.toggleReviewClicked();\r\n            // this.props.handleClose();\r\n            alert(\"Tee Time Booked!\");\r\n            if (this.props.mode === AppMode.COURSES)\r\n                this.props.refreshOnUpdate(AppMode.COURSES);\r\n            else \r\n                this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    // Handles enabling/disabling the time slots option on each date\r\n    // depending on the state of the appointments.day.time\r\n    handleClick = () =>{\r\n        document.getElementById(\"0\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"1\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"2\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"3\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"4\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"5\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"6\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"7\").removeAttribute(\"disabled\");\r\n        document.getElementById(\"8\").removeAttribute(\"disabled\");\r\n\r\n        console.log(this.state.appointments);\r\n        for (var i = 0; i < this.state.appointments.length; i++)\r\n        {\r\n            console.log(this.state.course.courseName, this.state.appointments[i].courseName);\r\n            if ((this.state.bookingDate === this.state.appointments[i].date) && (this.state.course.courseName === this.state.appointments[i].courseName))\r\n            {\r\n                switch(this.state.appointments[i].time){\r\n                    case \"9:00 AM\":\r\n                        document.getElementById(\"0\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"10:00 AM\":\r\n                        document.getElementById(\"1\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"11:00 AM\":\r\n                        document.getElementById(\"2\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"12:00 PM\":\r\n                        document.getElementById(\"3\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"1:00 PM\":\r\n                        document.getElementById(\"4\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"2:00 PM\":\r\n                        document.getElementById(\"5\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"3:00 PM\":\r\n                        document.getElementById(\"6\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"4:00 PM\":\r\n                        document.getElementById(\"7\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                    case \"5:00 PM\":\r\n                        document.getElementById(\"8\").setAttribute(\"disabled\",true);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"bookingPage\" className=\"modal\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3>Booking Tee Time</h3>\r\n                    {/* <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                        &times;\r\n                    </button> */}\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                <div className=\"padded-page\">\r\n                    <form onSubmit={this.handleBookTeeTime}>\r\n                    <center>\r\n                        <h1>Request Tee Time at {this.state.courseName}</h1><br></br>\r\n                        <label for=\"bookingDate\">Date: <br></br>\r\n                            <input type=\"date\" id=\"bookingDate\" name=\"bookingDate\" min={day1} max={day7} value={this.state.bookingDate} onChange={this.handleChange} required></input>\r\n                        </label>\r\n                        <p></p>\r\n                        <label for=\"bookingTime\">Time: <br></br>\r\n                        <select type=\"date\" id=\"bookingTime\" name=\"bookingTime\" value={this.state.bookingTime} onChange={this.handleChange} onClick={this.handleClick} required>\r\n                            <option></option>\r\n                            <option id=\"0\" value=\"0\">9:00 AM</option>\r\n                            <option id=\"1\" value=\"1\">10:00 AM</option>\r\n                            <option id=\"2\" value=\"2\">11:00 AM</option>\r\n                            <option id=\"3\" value=\"3\">12:00 PM</option> \r\n                            <option id=\"4\" value=\"4\">1:00 PM</option>\r\n                            <option id=\"5\" value=\"5\">2:00 PM</option> \r\n                            <option id=\"6\" value=\"6\">3:00 PM</option>\r\n                            <option id=\"7\" value=\"7\">4:00 PM</option>\r\n                            <option id=\"8\" value=\"8\">5:00 PM</option>    \r\n                        </select>\r\n                        </label>\r\n                        <p></p>\r\n                        <button className=\"btn btn-primary btn-color-theme modal-submit-btn\">Request Tee Time</button>\r\n                        <button onClick={this.props.handleClose} className=\"btn btn-primary btn-color-theme modal-submit-btn\">Cancel</button>\r\n                    </center>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    {/* <button className=\"btn btn-primary btn-color-theme\"\r\n                    onClick={this.props.close}>OK</button> */}\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n       \r\n        );\r\n    }   \r\n}\r\n\r\nexport default BookingPage;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport { Navbar, Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport RatesModal from \"./RatesModal.js\";\r\nimport MoreModal from \"./MoreModal.js\";\r\nimport BookingPage from \"./BookingPage.js\";\r\n\r\nclass AllCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    \r\n        this.state={\r\n            item: \"\",\r\n            getCourseClicked: false,\r\n            getRatesButtonClicked: false,\r\n            bookTeeTimeClicked: false,\r\n            more: false,\r\n            index: 0,\r\n            cname: ''\r\n        };\r\n    }\r\n\r\n    // Get information of all courses on render\r\n    componentDidMount(){\r\n        this.getCourse();\r\n    }\r\n    \r\n    toggleGetCourseClicked = () => {\r\n        this.setState(state => ({getCourseClicked: !state.getCourseClicked}));\r\n    }\r\n\r\n    toggleMoreClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({more: !state.more}));\r\n    }\r\n\r\n    toggleGetRatesClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({getRatesButtonClicked: !state.getRatesButtonClicked}));\r\n    }\r\n\r\n    toggleBookTeeTimeClicked = (key, i, cn) => {\r\n        this.setState({item: key});\r\n        this.setState({index: i});\r\n        this.setState({cname: cn});\r\n        this.setState(state => ({bookTeeTimeClicked: !state.bookTeeTimeClicked}));\r\n    }\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (key) => {\r\n        const url = '/courses/' + key;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            for (var i = 0; i < this.state.filteredData.length; i++)\r\n            {\r\n                if (this.state.filteredData[i].id === key)\r\n                {\r\n                    this.state.course.splice(i, 1);\r\n                    this.setState({\r\n                        course: this.state.course\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                filteredData: thisCourse,\r\n                course: thisCourse.map((c, index) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>                      \r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{c.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                            {this.setState({item: c.id})}\r\n                            <Button id=\"moreBtn\" type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                            <Button id=\"ratesBtn\" type=\"button\" onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                            <Button id=\"bookingBtn\" type=\"button\" onClick={() => this.toggleBookTeeTimeClicked(c.id, index, c.courseName)}>Book Tee Time</Button>&nbsp;\r\n                            {this.props.userObj.type === \"operator\" ? \r\n                            <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(c.id)}>&times;</Button>\r\n                            : null}\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"allCoursesPage\">\r\n                <h1></h1>\r\n                <table >\r\n                    <tbody>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>                    \r\n                            {this.state.course}\r\n                        </Row>\r\n                    </Container> \r\n                    </tbody>\r\n                </table>\r\n                {this.state.getRatesButtonClicked ? \r\n                    <RatesModal handleClose={this.toggleGetRatesClicked} \r\n                    course={this.state.item} changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.more ? \r\n                    <MoreModal handleClose={this.toggleMoreClicked}\r\n                        course={this.state.item} changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.bookTeeTimeClicked ? \r\n                    <BookingPage handleClose={this.toggleBookTeeTimeClicked} userObj={this.props.userObj} courseName={this.state.cname}\r\n                        course={this.state.item} changeMode={this.props.changeMode} editId={this.state.index}\r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} info={this.props.info}\r\n                    />\r\n                    : null}\r\n            </div>\r\n            );\r\n    }   \r\n}\r\n\r\nexport default AllCourses;","import React from 'react';\r\n\r\nclass NearbyCourses extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"padded-page\">\r\n                <center>\r\n                <h1 >Nearby Courses</h1>\r\n                <h2>This page is under construction.</h2>\r\n                <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n                 height=\"200\" width=\"200\"/>\r\n                <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n                </center>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default NearbyCourses;","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass AdvancedSearch extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            rating: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            rateStandard: \"\",\r\n            rateSenior: \"\",\r\n            searchType: \"\",\r\n            allCourses: [],\r\n            filteredCourses: []\r\n        };\r\n    }\r\n\r\n    // Get information on all courses at render\r\n    componentDidMount(){\r\n        this.getCourse();\r\n    }\r\n\r\n    // Get information on all courses for searching purposes\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            let table = [];\r\n            for (var i = 0; i < thisCourse.length; i++)\r\n            {\r\n                table.push(thisCourse[i]);\r\n            }\r\n            \r\n            this.setState({allCourses: table});\r\n            // console.log(this.state.allCourses);\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    // Query what to show depending on form that was submitted\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.searchStart();\r\n        let type = this.state.searchType;\r\n        let len = this.state.allCourses.length;\r\n        let c = this.state.allCourses;\r\n        let table = [];\r\n        switch (type){\r\n            case \"rates\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].rateSenior === this.state.rateSenior || c[i].rateStandard === this.state.rateStandard)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"rating\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].rating === this.state.rating)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"yardage\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].yardage === this.state.yardage)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"runningDistance\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].runningDistance === this.state.runningDistance)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"timePar\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].timePar === this.state.timePar)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(table.length);\r\n        this.props.setCourseAmount(table.length);\r\n        this.props.setFilteredData(table);\r\n        this.props.handleClose();\r\n    }\r\n\r\n    // toggling between different forms of advanced search\r\n    handleSwitch = (type) => {\r\n        if (type === \"rates\")\r\n        {\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Standard Rate: $<br></br>\r\n                        <input id=\"rateStandard\" name=\"rateStandard\" placeholder=\"rateStandard\" value={this.state.rateStandard} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Senior Rate: $<br></br>\r\n                        <input id=\"rateSenior\" name=\"rateSenior\" placeholder=\"rateSenior\" value={this.state.rateSenior} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"rating\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Rating:<br></br>\r\n                        <input id=\"rating\" name=\"rating\" placeholder=\"rating\" value={this.state.rating} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p> \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"yardage\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Yardage:<br></br>\r\n                        <input id=\"yardage\" name=\"yardage\"  placeholder=\"yardage\" value={this.state.yardage} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>  \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"runningDistance\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Running Distance:<br></br>\r\n                        <input id=\"runningDistance\" name=\"runningDistance\"  placeholder=\"runningDistance\" value={this.state.runningDistance} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p> \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"timePar\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Time Par:<br></br>\r\n                        <input id=\"timePar\" name=\"timePar\"  placeholder=\"timePar\" value={this.state.timePar} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n\r\n    render (){\r\n        return(\r\n        <div id=\"advancedSearchPage\" className=\"modal\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>Advanced Search</h3>\r\n                        <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <label>Search By:&nbsp;\r\n                            <select id=\"searchOptions\" name=\"searchType\" value={this.state.searchType} \r\n                                className=\"form-control form-center\" onChange={this.handleChange}>\r\n                                <option></option>\r\n                                <option value=\"rates\">Rates</option>\r\n                                <option id=\"RATING\" value=\"rating\">Ratings</option>\r\n                                <option value=\"yardage\">Holes Yardage</option>\r\n                                <option value=\"runningDistance\">Running Distance</option>\r\n                                <option value=\"timePar\">Time Pars</option>\r\n                            </select> \r\n                            </label>\r\n                            <p></p>\r\n                        </form>\r\n                        {this.handleSwitch(this.state.searchType)}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {this.state.searchType !== \"\" ? \r\n                        <button onClick={this.handleSubmit} id=\"submitBtn\" type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                            className=\"btn btn-primary btn-color-theme\">\r\n                            &nbsp;Submit\r\n                        </button> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvancedSearch;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\nimport FloatingButton from \"./FloatingButton.js\";\r\nimport RatesModal from \"./RatesModal.js\";\r\nimport MoreModal from \"./MoreModal.js\";\r\nimport BookingPage from \"./BookingPage.js\";\r\nimport AdvancedSearch from \"./AdvancedSearch.js\";\r\n\r\nclass SpecificCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            addCourseClicked: false,\r\n            getCourseClicked: false,\r\n            searchCourseClicked: false,\r\n            searchStart: false,\r\n            getRatesButtonClicked: false,\r\n            bookTeeTimeClicked: false,\r\n            advancedSearchClicked: false,\r\n            more: false,\r\n            selectButtonValue: \"Select Course\",\r\n            courseAmount: 1,\r\n            oneDelete: false,\r\n            query: \"\",\r\n            data: [],\r\n            filteredData: [],\r\n            item: \"\",\r\n            cname: '',\r\n\r\n            id: \"\",\r\n            rating: \"\",\r\n            review: \"\",\r\n            picture: \"\",\r\n            location: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            bestScore: \"\",\r\n            recordHolder: \"\"\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getCourse();\r\n    }\r\n\r\n    toggleAddCourseClicked = () => {\r\n        this.setState(state => ({addCourseClicked: !state.addCourseClicked}));\r\n    }\r\n\r\n    toggleAdvancedSearchClicked = () => {\r\n        this.setState(state => ({advancedSearchClicked: !state.advancedSearchClicked}));\r\n    }\r\n\r\n    toggleMoreClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({more: !state.more}));\r\n    }\r\n\r\n    toggleGetCourseClicked = () => {\r\n        this.setState(state => ({getCourseClicked: !state.getCourseClicked}));\r\n    }\r\n\r\n    toggleGetRatesClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({getRatesButtonClicked: !state.getRatesButtonClicked}));\r\n    }\r\n\r\n    toggleBookTeeTimeClicked = (key, cn) => {\r\n        this.setState({item: key});\r\n        this.setState({cname: cn});\r\n        this.setState(state => ({bookTeeTimeClicked: !state.bookTeeTimeClicked}));\r\n    }\r\n\r\n    setSelectButtonValue = (newVal) => {\r\n        this.setState({selectButtonValue : newVal});\r\n    }\r\n\r\n    setSearchTrue = () => {\r\n        this.setState({searchStart : true});\r\n    }\r\n\r\n    setSearchFalse = () => {\r\n        this.setState({searchStart : false});\r\n    }\r\n\r\n    setCourseAmount = (x) => {\r\n        this.setState({courseAmount: x});\r\n    }\r\n\r\n    setSearchCourseClickedTrue = () => {\r\n        this.setState({searchCourseClicked : true});\r\n        this.setSelectButtonValue(\"Clear Selected\");\r\n    }\r\n\r\n    setSearchCourseClickedFalse = () => {\r\n        this.setState({searchCourseClicked : false});\r\n        this.setSelectButtonValue(\"Select Course\");\r\n    }\r\n\r\n    toggleOneDelete = () => {\r\n        this.setState(state => ({oneDelete: !state.oneDelete}));\r\n    }\r\n\r\n    // Show courses that were selected when user searches\r\n    setFilteredData = (newData) => {\r\n        this.setState({\r\n            course: newData.map((c) =>(\r\n                <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                    <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                    <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                    <Card.Body>\r\n                        <Card.Title>{c.courseName}</Card.Title>\r\n                        <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                        <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                        <Button onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                        <Button onClick={() => this.toggleBookTeeTimeClicked(c.id, c.courseName)}>Book Tee Time</Button>&nbsp;\r\n                    </Card.Body>\r\n                    <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            ))\r\n        });\r\n    }\r\n\r\n    // Handles changing the name of the Select Button to the appropriate values\r\n    handleInputChange = event => {\r\n        const query = event.target.value;\r\n        this.setState(prevState => {\r\n          const filteredData = prevState.data.filter(element => {\r\n            return element.id.toLowerCase().includes(query.toLowerCase());\r\n          });\r\n\r\n          if (query == \"\")\r\n          {\r\n              this.setSearchFalse();\r\n              this.setSelectButtonValue(\"Select Course\");\r\n          }\r\n          else\r\n          {\r\n              this.setSearchTrue();\r\n              this.setSelectButtonValue(\"Select All \"+ filteredData.length +\" Matching Courses\");\r\n              this.setCourseAmount(filteredData.length);\r\n          }\r\n\r\n          return {\r\n            query,\r\n            filteredData\r\n          };\r\n        });\r\n\r\n    };\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (key) => {\r\n        const url = '/courses/' + key;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            if (this.state.oneDelete)\r\n            {\r\n                this.setState({\r\n                    course: '',\r\n                    courseAmount: 0\r\n                });\r\n            }\r\n            else{\r\n                for (var i = 0; i < this.state.filteredData.length; i++)\r\n                {\r\n                    if (this.state.filteredData[i].id === key)\r\n                    {\r\n                        this.state.course.splice(i, 1);\r\n                        this.setState({\r\n                            course: this.state.course\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Retrieve information for all courses for searching usage\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET ALL COURSES SUCCESS!\");\r\n            let data = JSON.parse(obj);\r\n            const { query } = this.state;\r\n            const filteredData = data.filter(element => {\r\n              return element.id.toLowerCase().includes(query.toLowerCase());\r\n            });\r\n    \r\n            this.setState({\r\n              data,\r\n              filteredData\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    // Retrieve information of 1 course provided an id\r\n    getSearchedCourse = async (id) => {\r\n        this.setSearchCourseClickedTrue();\r\n        this.setSearchFalse();\r\n        this.setCourseAmount(1);\r\n        this.toggleOneDelete();\r\n        const url = '/courses/'+id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: (\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{thisCourse.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {thisCourse.recordHolder}</Card.Text>\r\n                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(thisCourse.id)}>More</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleGetRatesClicked(thisCourse.id)}>Get Rates</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleBookTeeTimeClicked(thisCourse.id, thisCourse.courseName)}>Book Tee Time</Button>&nbsp;\r\n                            {this.props.userObj.type === \"operator\" ? \r\n                            <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(thisCourse.id)}>&times;</Button>\r\n                            : null}\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {thisCourse.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    // Handle event when user clicks into 1 of the choices provided when searching for a course\r\n    handleClick = (event) =>{\r\n        event.preventDefault();\r\n        if (this.state.selectButtonValue == \"Select Course\")\r\n        {\r\n\r\n        }\r\n        else if (this.state.selectButtonValue == \"Clear Selected\")\r\n        {\r\n            this.setSearchCourseClickedFalse();\r\n            this.setSearchFalse();\r\n            this.setState({query: \"\"});\r\n        }\r\n        else{\r\n            this.setSearchCourseClickedTrue();\r\n            this.setSearchFalse();\r\n            this.setState({\r\n                course: this.state.filteredData.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{c.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleBookTeeTimeClicked(c.id, c.courseName)}>Book Tee Time</Button>&nbsp;\r\n                            {this.props.userObj.type === \"operator\" ? \r\n                            <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(c.id)}>&times;</Button>\r\n                            : null}\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"specificCoursePage\">\r\n                <div style={{display: 'flex'}}>\r\n                    <h3>Find Speedgolf-Friendly Courses:&nbsp;</h3>\r\n                    <h3>\r\n                        <a data-tip=\"React-tooltip\">&#9432;</a>\r\n                        <ReactTooltip variant=\"bottom\" effect=\"solid\">\r\n                            <span>\r\n                                Enter search term or course name to see matching courses, or enter a space to see ALL courses in the database.\r\n                                Click on course in the list to select it, or click on 'Select' button to select all matching courses.\r\n                            </span>\r\n                        </ReactTooltip>\r\n                    </h3>\r\n                </div>\r\n\r\n                <input style={{width: '60%'}} placeholder=\"Enter course name or search term\"\r\n                 value={this.state.query} onChange={this.handleInputChange}\r\n                 disabled={this.state.searchCourseClicked ? true:false}></input>&nbsp;\r\n                <Button onClick={this.handleClick}>{this.state.selectButtonValue}</Button>&nbsp;\r\n                <Button id=\"advancedSearchBtn\" onClick={this.toggleAdvancedSearchClicked} disabled={this.state.searchCourseClicked ? true:false}>Advanced Search</Button>\r\n                {this.state.searchStart ? <div>{this.state.filteredData.map(i => <a className=\"course-search-list\" onClick={() => this.getSearchedCourse(i.id)}>{i.id}</a>)}</div> : null}\r\n                \r\n                {this.state.searchCourseClicked ? <div style={{marginTop: \"50px\"}}><h3>{this.state.courseAmount} Course Selected: </h3>\r\n                <Container fluid={true}>\r\n                    <Row noGutters>  \r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>  </div>               \r\n                 : null}\r\n\r\n\r\n                {this.state.advancedSearchClicked ? \r\n                    <AdvancedSearch handleClose={this.toggleAdvancedSearchClicked}\r\n                    searchStart={this.setSearchCourseClickedTrue}\r\n                    toggleMoreClicked={this.toggleMoreClicked}\r\n                    toggleGetRatesClicked={this.toggleGetRatesClicked}\r\n                    toggleBookTeeTimeClicked={this.toggleBookTeeTimeClicked}\r\n                    course={this.state.item}  changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    setFilteredData={this.setFilteredData}\r\n                    setCourseAmount={this.setCourseAmount}\r\n                    />\r\n                    : null}\r\n                {this.state.getRatesButtonClicked ? \r\n                    <RatesModal handleClose={this.toggleGetRatesClicked}\r\n                    course={this.state.item}  changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.more ? \r\n                    <MoreModal handleClose={this.toggleMoreClicked} \r\n                        course={this.state.item}  changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.bookTeeTimeClicked ? \r\n                    <BookingPage handleClose={this.toggleBookTeeTimeClicked} userObj={this.props.userObj} courseName={this.state.cname}\r\n                    course={this.state.item} changeMode={this.props.changeMode}\r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default SpecificCourses;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass AddCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            courseName: \"\",\r\n            id: \"\",\r\n            rating: \"\",\r\n            review: \"\",\r\n            picture: \"\",\r\n            location: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            bestScore: \"\",\r\n            recordHolder: \"\",\r\n            rateStandard: \"\",\r\n            rateSenior: \"\",\r\n            appointments: {\r\n                day1:[true, true, true, true, true, true, true, true, true],\r\n                day2:[true, true, true, true, true, true, true, true, true],\r\n                day3:[true, true, true, true, true, true, true, true, true],\r\n                day4:[true, true, true, true, true, true, true, true, true],\r\n                day5:[true, true, true, true, true, true, true, true, true],\r\n                day6:[true, true, true, true, true, true, true, true, true],\r\n                day7:[true, true, true, true, true, true, true, true, true]\r\n              }\r\n        };\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    // sends a POST request to the backend to add a course to do the courses schema\r\n    addCourse = async (newData) => {\r\n        console.log(newData);\r\n        const url = '/courses/' + this.state.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status == 200) {\r\n            console.log(\"SUCCESS\");\r\n            console.log(msg);\r\n            this.props.changeMode(AppMode.COURSES_ALL);\r\n        } else {\r\n            console.log(\"FAILURE\");\r\n            console.log(msg);\r\n        }\r\n    }\r\n\r\n    // Handles form submit\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let courseData = this.state;\r\n        this.addCourse(courseData);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"addCoursePage\">\r\n                <form onSubmit={this.handleSubmit} style={{marginBottom: \"50px\"}}>\r\n                    <center>\r\n                    <h3>Add Course</h3>\r\n                    <label>\r\n                        Course ID:<br></br>\r\n                        <input id=\"id\" name=\"id\" placeholder=\"id\" value={this.state.id} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Course Name:<br></br>\r\n                        <input id=\"courseName\" name=\"courseName\" placeholder=\"courseName\" value={this.state.courseName} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Standard Rate: $<br></br>\r\n                        <input id=\"rateStandard\" name=\"rateStandard\" placeholder=\"rateStandard\" value={this.state.rateStandard} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Senior Rate: $<br></br>\r\n                        <input id=\"rateSenior\" name=\"rateSenior\" placeholder=\"rateSenior\" value={this.state.rateSenior} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Rating:<br></br>\r\n                        <input id=\"rating\" name=\"rating\" placeholder=\"rating\" value={this.state.rating} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Review:<br></br>\r\n                        <input id=\"review\" name=\"review\"  placeholder=\"review\" value={this.state.review} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Picture:<br></br>\r\n                        <input id=\"picture\" name=\"picture\"  placeholder=\"picture\" value={this.state.picture} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Location:<br></br>\r\n                        <input id=\"location\" name=\"location\"  placeholder=\"location\" value={this.state.location} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Yardage:<br></br>\r\n                        <input id=\"yardage\" name=\"yardage\"  placeholder=\"yardage\" value={this.state.yardage} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Running Distance:<br></br>\r\n                        <input id=\"runningDistance\" name=\"runningDistance\"  placeholder=\"runningDistance\" value={this.state.runningDistance} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Time Par:<br></br>\r\n                        <input id=\"timePar\" name=\"timePar\"  placeholder=\"timePar\" value={this.state.timePar} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Best Score:<br></br>\r\n                        <input id=\"bestScore\" name=\"bestScore\"  placeholder=\"bestScore\" value={this.state.bestScore} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Record Holder:<br></br>\r\n                        <input id=\"recordHolder\" name=\"recordHolder\"  placeholder=\"recordHolder\" value={this.state.recordHolder} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <button id=\"submitBtn\" type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                        className=\"btn btn-primary btn-color-theme\">\r\n                        &nbsp;Submit\r\n                    </button>\r\n                    </center>\r\n                </form>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default AddCourses;","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\n\r\nclass AllAppointments extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    \r\n        this.state={\r\n            deleteClicked: false\r\n        };\r\n    }\r\n\r\n    // Get information of all courses on render\r\n    componentDidMount(){\r\n        this.getAllAppointments();\r\n    }\r\n\r\n    toggleDeleteClicked = () => {\r\n        this.setState(state => ({deleteClicked: !state.deleteClicked}));\r\n    }\r\n\r\n    handleDeleteAll = (user, course, d, t, i) =>{\r\n        this.handleDelete(user, course, d, t, i);\r\n        this.handleDeleteFromDB(user, course, d, t);\r\n    }\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (u, c, d, t, i) => {\r\n        const url = '/appointments/'+u+'/'+c+'/'+d+'/'+t+'/'+i;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getAllAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    handleDeleteFromDB = async(u, c, d, t) => {\r\n        const url = '/appointments_op/'+u+'/'+c+'/'+d+'/'+t;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getAllAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getAllAppointments = async () => {\r\n        const url = '/allappointments_op/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: thisCourse.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.userId} style={{ width: \"30rem\", display: \"flex\" }}>                      \r\n                        <Card.Body>\r\n                            <Button style={{float: 'right'}} onClick={() => this.handleDeleteAll(c.username, c.courseName, c.date, c.time, c.userId)}>&times;</Button>\r\n                            <Card.Title>Appointment for {c.username}</Card.Title>\r\n                            <Card.Text>Location: {c.courseName}</Card.Text>\r\n                            <Card.Text>On: {c.date}</Card.Text>\r\n                            <Card.Text>At: {c.time}</Card.Text>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"allAppointmentsPage\">\r\n                <h1></h1>\r\n                <table >\r\n                    <tbody>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>                    \r\n                            {this.state.course}\r\n                        </Row>\r\n                    </Container> \r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllAppointments;","import React from 'react';\r\n\r\nclass PaymentDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                    name: '',\r\n                    number: 0,\r\n                    expDate: ''\r\n                };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCard();\r\n    }\r\n\r\n    getCard = async() => {\r\n        const url = '/cards/'+this.props.userObj.id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCard = JSON.parse(obj);\r\n            this.setState({\r\n                card: thisCard.map((c) =>(\r\n                    {\r\n                        name: c.name,\r\n                        number: c.number,\r\n                        expDate: c.expDate\r\n                    }\r\n                ))\r\n            });\r\n            \r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        let data = this.state;\r\n        console.log(data);\r\n        console.log(this.state.card);\r\n        if (this.state.card[0].name === data.name && this.state.card[0].number === parseInt(data.number) && this.state.card[0].expDate === data.expDate)\r\n        {\r\n            let i = this.props.info;\r\n            this.props.handlePayment(i.userId,i.username,i.courseName,i.date,i.time,i.paid);\r\n            this.props.handleUserPayment(i.mmId,i.userId,i.username,i.courseName,i.date,i.time,i.paid);\r\n            this.props.close();\r\n        }\r\n        else {\r\n            alert(\"INVALID CARD\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Enter Card Information</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                  <center>\r\n                    <label>\r\n                        Name on Card: <br></br>\r\n                        <input id=\"name\" name=\"name\" placeholder=\"name\" value={this.state.name} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Card Number: <br></br>\r\n                        <input id=\"number\" name=\"number\" placeholder=\"number\" value={this.state.number} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Expiration Date: (format: MM/YY)<br></br>\r\n                        <input id=\"expDate\" name=\"expDate\" placeholder=\"expDate\" value={this.state.expDate} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                  </center>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.handleSubmit}>\r\n                  Verify Card</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentDialog;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport { Navbar, Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport { async } from 'regenerator-runtime';\r\nimport PaymentDialog from './PaymentDialog';\r\n\r\nclass MyAppointments extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    \r\n        this.state={\r\n            matched: false,\r\n            payClicked: false\r\n        };\r\n    }\r\n\r\n    // Get information of all courses on render\r\n    componentDidMount(){\r\n        this.getMyAppointments();\r\n    }\r\n\r\n    toggleSetMatched = (s) => {\r\n        this.setState(state => ({matched: !state.matched}));\r\n    }\r\n\r\n    togglePayClicked = () => {\r\n        this.setState(state => ({payClicked: !state.payClicked}));\r\n    }\r\n\r\n    handleDeleteAll = (user, course, d, t, i) =>{\r\n        this.handleDelete(user, course, d, t, i);\r\n        this.handleDeleteFromDB(user, course, d, t);\r\n    }\r\n\r\n    handleAllPayment = (mid, aid, u, c, d, t, p) => {\r\n        if (p === \"true\")\r\n            alert(\"You've already paid!\");\r\n        else{\r\n            this.setState({info: {\r\n                mmId: mid,\r\n                userId: aid,\r\n                username: u,\r\n                courseName: c,\r\n                date: d,\r\n                time: t,\r\n                paid: p\r\n            }});\r\n            this.togglePayClicked();\r\n            // this.handlePayment(aid, u, c, d, t, p);\r\n            // this.handleUserPayment(mid, aid, u, c, d, t, p);\r\n        }\r\n    }   \r\n\r\n    handleUserPayment = async (mid, aid, u, c, d, t, p) => {\r\n        let newData = {\r\n            userId: aid,\r\n            username: u,\r\n            courseName: c,\r\n            date: d,\r\n            time: t,\r\n            paid: \"true\"\r\n        }\r\n        const url = '/appointments/'+this.props.userObj.id+'/'+mid;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            alert(\"Paid\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_MYAPPT);\r\n        }\r\n    }\r\n\r\n    handlePayment = async(aid, u, c, d, t, p) => {\r\n        let newData = {\r\n            userId: aid,\r\n            username: u,\r\n            courseName: c,\r\n            date: d,\r\n            time: t,\r\n            paid: \"true\"\r\n        }\r\n        const url = '/appointments_op/'+u+'/'\r\n                                        +c+'/'\r\n                                        +d+'/'\r\n                                        +t;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            alert(\"Paid\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_MYAPPT);\r\n        }\r\n    }\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (u, c, d, t, i) => {\r\n        const url = '/appointments/'+u+'/'+c+'/'+d+'/'+t+'/'+i;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    handleDeleteFromDB = async(u, c, d, t) => {\r\n        const url = '/appointments_op/'+u+'/'+c+'/'+d+'/'+t;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getMyAppointments = async () => {\r\n        const url = '/appointments/'+this.props.userObj.id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: thisCourse.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.userId} style={{ width: \"30rem\", display: \"flex\" }}>                      \r\n                        <Card.Body>\r\n                            <Button style={{float: 'right'}} onClick={() => this.handleDeleteAll(c.username, c.courseName, c.date, c.time, c.userId)}>&times;</Button>\r\n                            <Card.Title>Appointment for {c.username}</Card.Title>\r\n                            <Card.Text>Location: {c.courseName}</Card.Text>\r\n                            <Card.Text>On: {c.date}</Card.Text>\r\n                            <Card.Text>At: {c.time}</Card.Text>\r\n                            <Button style={{float: 'right'}} onClick={() => this.handleAllPayment(c._id, c.userId, c.username, c.courseName, c.date, c.time, c.paid)}>{c.paid === \"true\" ? \"Paid\": \"Pay\"}</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"allAppointmentsPage\">\r\n                <h1></h1>\r\n                <table >\r\n                    <tbody>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>                    \r\n                            {this.state.course}\r\n                        </Row>\r\n                    </Container> \r\n                    </tbody>\r\n                </table>\r\n                {this.state.payClicked ? <PaymentDialog userObj={this.props.userObj} info={this.state.info}\r\n                toggleSetMatched={this.toggleSetMatched} close={this.togglePayClicked}\r\n                handleUserPayment={this.handleUserPayment} handlePayment={this.handlePayment}></PaymentDialog> :null}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyAppointments;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport AllCourses from './AllCourses.js';\r\nimport NearbyCourses from './NearbyCourses.js';\r\nimport SpecificCourses from './SpecificCourses.js';\r\nimport AddCourses from './AddCourses.js';\r\nimport AllAppointments from './AllAppointments.js';\r\nimport MyAppointments from './MyAppointments';\r\n\r\nclass CoursesPage extends React.Component {\r\n    render() {\r\n        switch(this.props.mode){\r\n            case AppMode.COURSES:\r\n                return (<SpecificCourses userObj={this.props.userObj} mode={this.props.mode} changeMode={this.props.changeMode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n            case AppMode.COURSES_NEARBY:\r\n                return (<NearbyCourses changeMode={this.props.changeMode} mode={this.props.mode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n            case AppMode.COURSES_ALL:\r\n                return (<AllCourses changeMode={this.props.changeMode} mode={this.props.mode} refreshOnUpdate={this.props.refreshOnUpdate} userObj={this.props.userObj}/>);\r\n            case AppMode.COURSES_ADD:\r\n                return (<AddCourses changeMode={this.props.changeMode}/>);\r\n            case AppMode.COURSES_APPT:\r\n                return (<AllAppointments userObj={this.props.userObj} changeMode={this.props.changeMode}/>);\r\n            case AppMode.COURSES_MYAPPT:\r\n                return (<MyAppointments userObj={this.props.userObj} changeMode={this.props.changeMode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n        }\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;","import React from 'react';\r\n\r\nclass AboutBox extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>About SpeedScore</h3>\r\n                <button className=\"modal-close\" onClick={this.props.close}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <img\r\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                height=\"200\" width=\"200\"/>\r\n                <h3>The World's First and Only Suite of Apps for\r\n                Speedgolf</h3>\r\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\r\n                &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                reserved.\r\n                </p>\r\n                <div style={{textAlign: \"left\"}}>\r\n                <p>SpeedScore apps support</p>\r\n                <ul>\r\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                <li>tracking personal speedgolf rounds and sharing results\r\n                (<i>SpeedScore Track&reg;</i>)</li>\r\n                <li>finding speedgolf-friendly courses, booking tee times, and\r\n                paying to play speedgolf by the minute (<i>SpeedScore\r\n                Play&reg;</i>)</li>\r\n                </ul>\r\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                associate professor of computer science at Washington State\r\n                University and the <i>Professor of Speedgolf</i>, with support\r\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\r\n                <p>For more information on SpeedScore, visit <a\r\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                site</a>. For more information on speedgolf, visit <a\r\n                href=\"http://playspeedgolf.com\"\r\n                target=\"_blank\">playspeedgolf.com</a> and <a\r\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                USA</a>.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.close}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AboutBox;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport AboutBox from './AboutBox.js';\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.COURSES] = \"Search Courses\";\r\nmodeTitle[AppMode.COURSES_NEARBY] = \"Nearby Courses\";\r\nmodeTitle[AppMode.COURSES_ALL] = \"All Speedgolf-Friendly Courses\";\r\nmodeTitle[AppMode.COURSES_ADD] = \"Add a Course\";\r\nmodeTitle[AppMode.COURSES_APPT] = \"All Appointments\";\r\nmodeTitle[AppMode.COURSES_MYAPPT] = \"My Appointments\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_NEARBY] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_ALL] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_ADD] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_APPT] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_MYAPPT] = CoursesPage;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                  editAccount: false,\r\n                  showEditAccountDialog: false,\r\n                  statusMsg: \"\",\r\n                  showAboutDialog: false\r\n                 };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.COURSES_ALL //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n  showEditAccount = () => {\r\n    this.setState({showEditAccountDialog: true});\r\n\r\n  }\r\n\r\n  cancelEditAccount = () => {\r\n    this.setState({showEditAccountDialog: false});\r\n  }\r\n\r\n  setUserObjType = (newType) => {\r\n    this.setState({userObj: newType});\r\n  }\r\n\r\n  //editAccountDone -- called after successful edit or\r\n  //deletion of user account. msg contains the status\r\n  //message and deleted indicates whether an account was\r\n  //edited (deleted == false) or deleted (deleted == true)\r\n  editAccountDone = (msg, deleted) => {\r\n    if (deleted) {\r\n      this.setState({showEditAccountDialog: false,\r\n                     statusMsg: msg,\r\n                     mode: AppMode.LOGIN});\r\n      } else {\r\n        this.setState({showEditAccountDialog: false,\r\n          statusMsg: msg});\r\n      }\r\n  }\r\n\r\n  closeStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div className=\"padded-page\">\r\n        {this.state.showAboutDialog ? \r\n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\r\n              <span>{this.state.statusMsg}</span>\r\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                  <span className=\"fa fa-times\"></span></button></div> : null}\r\n        {this.state.showEditAccountDialog ? \r\n            <CreateEditAccountDialog \r\n              create={false} \r\n              userId={this.state.userObj.id} \r\n              done={this.editAccountDone} \r\n              cancel={this.cancelEditAccount}/> : null}\r\n        <NavBar \r\n          aboutOpen={this.state.showAboutDialog}\r\n          title={modeTitle[this.state.mode]} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n          <SideMenu \r\n            type={this.state.userObj.type}\r\n            changeMode={this.handleChangeMode}\r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            localAccount={this.state.userObj.authStrategy === \"local\"}\r\n            editAccount={this.showEditAccount}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\r\n          <ModeBar \r\n            aboutOpen={this.state.showAboutDialog}\r\n            mode={this.state.mode} \r\n            changeMode={this.handleChangeMode}\r\n            menuOpen={this.state.menuOpen}/>\r\n          <ModePage \r\n            setUserObjType={this.setUserObjType}\r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}