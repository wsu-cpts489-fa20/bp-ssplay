{"version":3,"sources":["AppMode.js","components/NavBar.js","components/SideMenu.js","components/ModeBar.js","components/ConfirmDeleteAccount.js","components/CreateEditAccountDialog.js","components/ResetPasswordDialog.js","components/LookUpAccountDialog.js","components/SecurityQuestionDialog.js","components/LoginPage.js","components/FeedPage.js","components/ConfirmDeleteRound.js","components/RoundsTable.js","components/RoundForm.js","components/FloatingButton.js","components/Rounds.js","components/RatesModal.js","components/MoreModal.js","components/BookingPage.js","components/Map.js","components/AllCourses.js","components/NearbyCourses.js","components/AdvancedSearch.js","components/SpecificCourses.js","components/AddCourses.js","components/AllAppointments.js","components/PaymentDialog.js","components/MyAppointments.js","components/CoursesPage.js","components/AboutBox.js","components/AddCardDialog.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","FEED","ROUNDS","ROUNDS_LOGROUND","ROUNDS_EDITROUND","COURSES","COURSES_NEARBY","COURSES_ALL","COURSES_ADD","COURSES_APPT","COURSES_MYAPPT","Object","freeze","NavBar","getMenuBtnIcon","props","mode","menuOpen","handleMenuBtnClick","changeMode","toggleMenuOpen","className","this","aboutOpen","onClick","id","src","alt","height","width","title","React","Component","SideMenu","renderModeMenuItems","type","profilePicURL","displayName","localAccount","editAccount","toggleAddCardClicked","showAbout","logOut","ModeBar","ConfirmDeleteAccount","handleChange","match","emailRef","current","value","email","state","emailMatches","setState","createRef","focus","role","close","ref","onChange","deleteAccount","disabled","CreateEditAccountDialog","checkDataValidity","password","passwordRepeat","repeatPassRef","setCustomValidity","event","formUpdated","origAccountInfo","formIsUpdated","target","name","length","self","reader","FileReader","readAsDataURL","profilePicRef","files","addEventListener","result","updateField","updateVal","securityQuestion","securityAnswer","setDefaultDisplayName","handleSubmit","a","preventDefault","userData","url","accountName","create","fetch","headers","method","body","JSON","stringify","res","status","done","text","resText","confirmDelete","confirmDeleteAccount","e","newUserRef","userId","json","parse","cancel","onSubmit","autocomplete","size","placeholder","pattern","required","onBlur","accept","profilePic","profilePicDataURL","rows","cols","maxLength","card","ResetPasswordDialog","resetPasswordRef","resetPasswordRepeatRef","resetPassword","errorMsg","checkForSubmit","code","cancelResetPassword","onKeyUp","LookUpAccountDialog","handleLookUpAccount","response","obj","authStrategy","getSecurityAnswer","ErrMsg","errMsg","SecurityQuestionDialog","securityAnswerRef","answer","getNewPassword","readOnly","question","LoginPage","handleLoginSubmit","loginBtnIcon","loginBtnLabel","emailInputRef","passwordInputRef","window","open","statusMsg","accountCreateDone","msg","showCreateAccountDialog","cancelCreateAccount","resetUserId","resetQ","resetA","showLookUpAccountDialog","showSecurityQuestionDialog","showResetPaswordDialog","handleOAuthLogin","provider","handleOAuthLoginClick","setTimeout","pw","showResetPasswordDialog","deleted","closeStatusMsg","githubIcon","githubLabel","loginMsg","newAccountCreated","googleIcon","googleLabel","htmlFor","style","padding","fontSize","FeedPage","fontStyle","ConfirmDeleteRound","deleteRound","RoundsTable","editRound","setEditId","showConfirmDelete","setDeleteId","renderTable","table","r","push","key","rounds","date","substring","course","Number","strokes","minutes","seconds","keys","colSpan","RoundForm","newSec","newSGS","computeSGS","SGS","newStrokes","newMin","faIcon","btnLabel","roundData","saveRound","min","sec","today","Date","now","getTimezoneOffset","toISOString","substr","holes","notes","thisRound","startData","max","FloatingButton","handleClick","Rounds","addRound","newData","userObj","refreshOnUpdate","editId","_id","deleteId","val","closeErrorMsg","icon","RatesModal","getSearchedCourse","then","Error","statusText","console","log","thisCourse","courseName","Col","marginTop","marginBottom","Card","display","Img","variant","picture","Body","Title","location","Text","rateStandard","rateSenior","Footer","catch","error","handleClose","Container","fluid","Row","noGutters","MoreModal","toggleReviewClicked","reviewClicked","setErrorMsg","rating","review","yardage","runningDistance","timePar","bestScore","recordHolder","availability","Button","editCourse","reload","alert","tomorrow","setDate","getDate","thirdDay","fourthDay","fifthDay","sixthDay","seventhDay","bounds","infoWindow","currentInfoWindow","service","infoPane","day1","day2","day3","day4","day5","day6","day7","BookingPage","toggleSetTeeTimeClicked","setTeeTimeClick","document","getElementById","removeAttribute","setAttribute","getAllAppointments","appointments","map","c","username","time","handleBookTeeTime","newappt","bookingDate","bookingTime","paid","bruhFunction","updateCourse","addAppointment","addAppointment_op","i","handleSetTeeTime","setTimeAvailDate","nine","ten","eleven","twelve","one","two","three","four","five","teeTime","backgroundColor","for","AllCourses","toggleGetCourseClicked","getCourseClicked","toggleMoreClicked","item","more","toggleGetRatesClicked","getRatesButtonClicked","toggleBookTeeTimeClicked","cn","index","cname","bookTeeTimeClicked","handleDelete","filteredData","splice","getCourse","float","info","mapStyles","position","CurrentLocation","getNearbyPlaces","maps","google","request","rankBy","places","RankBy","DISTANCE","keyword","PlacesService","nearbySearch","nearbyCallback","results","PlacesServiceStatus","OK","createMarkers","forEach","place","marker","Marker","geometry","addListener","placeId","place_id","fields","getDetails","placeResult","showDetails","extend","fitBounds","placeInfowindow","InfoWindow","setContent","showPanel","classList","contains","remove","lastChild","removeChild","photos","firstPhoto","photo","createElement","add","getUrl","appendChild","textContent","address","formatted_address","website","websitePara","websiteLink","websiteUrl","createTextNode","href","initialCenter","lat","lng","currentLocation","prevProps","prevState","loadMap","recenterMap","center","LatLng","panTo","LatLngBounds","centerAroundCurrentLocation","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","setPosition","setCenter","mapRef","refs","node","ReactDOM","findDOMNode","zoom","mapConfig","assign","Map","children","Children","cloneElement","mapCenter","renderChildren","defaultProps","visible","NearbyCourses","showingInfoWindow","activeMarker","selectedPlace","onMarkerClick","onClose","GoogleApiWrapper","apiKey","AdvancedSearch","allCourses","searchStart","searchType","len","setCourseAmount","setFilteredData","handleSwitch","filteredCourses","SpecificCourses","toggleAddCourseClicked","addCourseClicked","toggleAdvancedSearchClicked","advancedSearchClicked","setSelectButtonValue","newVal","selectButtonValue","setSearchTrue","setSearchFalse","x","courseAmount","setSearchCourseClickedTrue","searchCourseClicked","setSearchCourseClickedFalse","fData","adData","handleInputChange","query","data","filter","element","toLowerCase","includes","data-tip","effect","AddCourses","addCourse","courseData","AllAppointments","toggleDeleteClicked","deleteClicked","handleDeleteAll","user","d","t","handleDeleteFromDB","u","PaymentDialog","getCard","thisCard","number","expDate","parseInt","handlePayment","handleUserPayment","mmId","MyAppointments","toggleSetMatched","s","matched","togglePayClicked","payClicked","handleAllPayment","mid","aid","p","getMyAppointments","CoursesPage","AboutBox","textAlign","AddCardDialog","addCard","cardExist","cardId","setCardExist","setCardDeleted","modeTitle","modeToPage","App","newMode","handleChangeMode","openMenu","closeMenu","setUserId","Id","authenticated","showEditAccount","showEditAccountDialog","cancelEditAccount","setUserObjType","newType","addCardClicked","editAccountDone","showAboutDialog","isAuthenticated","ModePage","Boolean","hostname","render","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f9146414.chunk.js","sourcesContent":["/* AppMode: The enumerated type for AppMode. */\r\n\r\nconst AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    FEED: \"FeedMode\",\r\n    ROUNDS: \"RoundsMode\",\r\n    ROUNDS_LOGROUND: \"RoundsMode-LogRound\",\r\n    ROUNDS_EDITROUND: \"RoundsMode-EditRound\",\r\n    COURSES: \"CoursesMode\",\r\n    COURSES_NEARBY: \"CoursesMode-Nearby\",\r\n    COURSES_ALL: \"CoursesMode-All\",\r\n    COURSES_ADD: \"CoursesMode-ADD\",\r\n    COURSES_APPT: \"CourseMode-APPT\",\r\n    COURSES_MYAPPT: \"CourseMode-MYAPPT\"\r\n\r\n};\r\n\r\nObject.freeze(AppMode); //This ensures that the object is immutable.\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  getMenuBtnIcon = () => {\r\n      if (this.props.mode === AppMode.COURSES_ADD || \r\n          this.props.mode === AppMode.ROUNDS_LOGROUND || \r\n          this.props.mode === AppMode.ROUNDS_EDITROUND)\r\n          return \"fa fa-arrow-left\";\r\n      if (this.props.menuOpen)\r\n        return \"fa fa-times\";\r\n      return \"fa fa-bars\";\r\n  }\r\n\r\n  handleMenuBtnClick = () => {\r\n    if (this.props.mode === AppMode.ROUNDS_LOGROUND ||\r\n        this.props.mode === AppMode.ROUNDS_EDITROUND) {\r\n      this.props.changeMode(AppMode.ROUNDS);\r\n    } else if (this.props.mode === AppMode.COURSES_ADD) {\r\n      this.props.changeMode(AppMode.COURSES);\r\n    } \r\n    else if (this.props.mode !== AppMode.LOGIN) {\r\n      this.props.toggleMenuOpen();\r\n    }\r\n  }\r\n\r\n    \r\n  render() {\r\n    return (\r\n    <div className={\"navbar\" + (this.props.aboutOpen ? \" ignore-click\":\"\")}>  \r\n    <span className=\"navbar-items\">\r\n      <button className=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n        <span id=\"menuBtnIcon\" className={\"sidemenu-btn-icon \" + this.getMenuBtnIcon()}>\r\n        </span>\r\n      </button>\r\n      <img src=\"http://tiny.cc/sslogo\" alt=\"Speed Score Logo\" height=\"38px\"\r\n      width=\"38px\" />\r\n      <span className=\"navbar-title\">\r\n        &nbsp;{this.props.title}\r\n      </span>\r\n    </span>\r\n  </div>\r\n); \r\n}\r\n}\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js'\r\nimport App from './App.js';\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n//renderModeItems -- Renders correct subset of mode menu items based on\r\n//current mode, which is stored in this.prop.mode. Uses switch statement to\r\n//determine mode.\r\nrenderModeMenuItems = () => {\r\n  switch (this.props.mode) {\r\n    case AppMode.FEED:\r\n      return(\r\n        <div>\r\n        <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-users\"></span>&nbsp;Followed Users</a>\r\n        <a className=\"sidemenu-item \">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Feed</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.ROUNDS:\r\n      return(\r\n        <div>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Log New Round</a>\r\n          <a className=\"sidemenu-item\">\r\n            <span className=\"fa fa-search\"></span>&nbsp;Search Rounds</a>\r\n        </div>\r\n      );\r\n    break;\r\n    case AppMode.COURSES:\r\n    case AppMode.COURSES_NEARBY:\r\n    case AppMode.COURSES_ALL:\r\n    case AppMode.COURSES_ADD:\r\n    case AppMode.COURSES_MYAPPT:\r\n    case AppMode.COURSES_APPT:\r\n      return(\r\n        <div>\r\n        <a id=\"specificCourse\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES)}>\r\n            <span className=\"fa fa-search\"></span>&nbsp;Specific Course</a>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_NEARBY)}>\r\n            <span className=\"fa fa-map-marker\"></span>&nbsp;Nearby Courses</a>\r\n        <a className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_ALL)}>\r\n            <span className=\"fa fa-th-list\"></span>&nbsp;All Speedgolf-Friendly Courses</a>\r\n        <a id=\"myAppointments\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_MYAPPT)}>\r\n            <span className=\"fa fa-th-list\"></span>&nbsp;My Appointments</a>\r\n        {this.props.type === \"operator\" ? <a id=\"addCourse\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_ADD)}>\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add a Course</a> : null}\r\n        {this.props.type === \"operator\" ? <a id=\"allAppointments\" className=\"sidemenu-item\" onClick={() => this.props.changeMode(AppMode.COURSES_APPT)}>\r\n            <span className=\"fa fa-eye\"></span>&nbsp;View all Appointments</a> : null}\r\n        </div>\r\n      );\r\n    default:\r\n        return null;\r\n    }\r\n}\r\n\r\n    render() {\r\n       return (\r\n        <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")}\r\n             onClick={this.props.toggleMenuOpen}>\r\n          {/* SIDE MENU TITLE */}\r\n          <div className=\"sidemenu-title\">\r\n            <img src={this.props.profilePicURL} height='60' width='60' />\r\n            <span id=\"userID\" className=\"sidemenu-userID\">&nbsp;{this.props.displayName}</span>\r\n        </div>\r\n          {/* MENU CONTENT */}\r\n          {this.renderModeMenuItems()}\r\n          {/* The following menu items are present regardless of mode */}\r\n          {this.props.localAccount ? \r\n            <a id=\"accountBtn\" className=\"sidemenu-item\" onClick={this.props.editAccount}>\r\n              <span className=\"fa fa-user\"></span>&nbsp;Account</a> : null}\r\n          <a id=\"addCardbtn\" className=\"sidemenu-item\" onClick={this.props.toggleAddCardClicked}>\r\n            <span className=\"fa fa-plus\"></span>&nbsp;Add Card</a>\r\n          <a id=\"aboutBtn\" className=\"sidemenu-item\" onClick={this.props.showAbout}>\r\n            <span className=\"fa fa-info-circle\"></span>&nbsp;About</a>\r\n          <a id=\"logOutBtn\" className=\"sidemenu-item\" onClick={this.props.logOut}>\r\n            <span className=\"fa fa-sign-out-alt\"></span>&nbsp;Log Out</a>\r\n        </div>\r\n       );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\n\r\nclass ModeBar extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \r\n          \" invisible\" : (this.props.menuOpen || this.props.aboutOpen ? \" ignore-click visible\" : \" visible\"))}>\r\n        <a className={(this.props.mode === AppMode.FEED ? \" item-selected\" : null)}\r\n            onClick={()=>this.props.changeMode(AppMode.FEED)}>\r\n          <span className=\"modebaricon fa fa-th-list\"></span>\r\n          <span className=\"modebar-text\">Feed</span>\r\n        </a>\r\n        <a className={(this.props.mode === AppMode.ROUNDS || \r\n               this.props.mode === AppMode.ROUNDS_EDITROUND || \r\n               this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                  \" item-selected\" : null)}\r\n           onClick={()=>this.props.changeMode(AppMode.ROUNDS)}>\r\n          <span className=\"modebar-icon  fa fa-history\"></span>\r\n          <span className=\"modebar-text\">Rounds</span>\r\n        </a>\r\n        <a id=\"courseMode\" className={((this.props.mode === AppMode.COURSES) || \r\n        (this.props.mode === AppMode.COURSES_NEARBY) || \r\n        (this.props.mode === AppMode.COURSES_ALL) ? \" item-selected\" : null)}\r\n          onClick={()=>this.props.changeMode(AppMode.COURSES)}>\r\n          <span className=\"modebar-icon  fa fa-flag\"></span>\r\n          <span className=\"modebar-text\">Courses</span>\r\n        </a> \r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default ModeBar;\r\n","import React from 'react';\r\n\r\nclass ConfirmDeleteAccount extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {emailMatches: false};\r\n    }\r\n    \r\n    componentDidMount() {\r\n        this.emailRef.current.focus();\r\n    }\r\n\r\n    handleChange = () => {\r\n        const match = (this.emailRef.current.value === this.props.email);\r\n        if (match != this.state.emailMatches) {\r\n            this.setState({emailMatches: match});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Account Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete your account? <br />\r\n                 <i>This action cannot be undone.</i></p>\r\n              <label>\r\n                Confirm Email ({this.props.email}):\r\n                <br/>\r\n                <input \r\n                    className=\"form-center\"\r\n                    type=\"text\"\r\n                    ref={this.emailRef}\r\n                    onChange={this.handleChange} />\r\n                </label>\r\n                <br />\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteAccount} disabled={!this.state.emailMatches}>\r\n                  Yes, Delete My Account</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteAccount;","import React from 'react';\r\nimport ConfirmDeleteAccount from './ConfirmDeleteAccount.js';\r\nimport { async } from 'regenerator-runtime';\r\n\r\nclass CreateEditAccountDialog extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.origAccountInfo = null;\r\n        //Create a ref for the email input DOM element\r\n        this.newUserRef = React.createRef();\r\n        this.repeatPassRef = React.createRef();\r\n        this.profilePicRef = React.createRef();\r\n        this.state = {\r\n                    type: \"user\",\r\n                    accountName: \"\",\r\n                    displayName: \"\",\r\n                    profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                    password: \"\",\r\n                    passwordRepeat: \"\",\r\n                    securityQuestion: \"\",\r\n                    securityAnswer: \"\",\r\n                    formUpdated: false,\r\n                    confirmDelete: false};\r\n    } \r\n\r\n    //componentDidMount -- If we are editing an existing user acccount, we need to grab the data from\r\n    //the database and push them into the state.\r\n    async componentDidMount() {\r\n        if (!this.props.create) {\r\n            //obtain current user data from database and push into state\r\n            const url = \"/users/\" + this.props.userId;\r\n            const res = await fetch(url);\r\n            const json = await res.json();\r\n            const userData = JSON.parse(json);\r\n            this.origAccountInfo = userData; //This determines whether update can occur\r\n            this.origAccountInfo.passwordRepeat = userData.password;\r\n            this.setState({\r\n                        type: this.props.type,\r\n                        accountName: this.props.userId,\r\n                        displayName: userData.displayName,\r\n                        profilePicURL: userData.profilePicURL,\r\n                        password: userData.password,\r\n                        passwordRepeat: userData.password,\r\n                        securityQuestion: userData.securityQuestion,\r\n                        securityAnswer: userData.securityAnswer});\r\n        }\r\n    }\r\n\r\n    //checkDataValidity -- Callback function invoked after a form element in\r\n    //the 'Create Account' dialog box changes and component state has been\r\n    //updated. We first check whether the passwords match. If they do not, \r\n    //we set a custom validity message to be displayed when the user clicks the\r\n    //'Create Account' button. Otherwise, we reset the custom validity message\r\n    //to empty so that it will NOT fire when the user clicks 'Create Account'.\r\n    //Second, we check whether anything in the form changed from the original.\r\n    //If so, we update the 'formUpdated' state var, so that the form's submit\r\n    //button is enabled.\r\n    checkDataValidity = () => {\r\n        if (this.state.password != this.state.passwordRepeat) {\r\n            //Passwords don't match\r\n            this.repeatPassRef.current.setCustomValidity(\r\n            \"This password must match password entered in previous field.\");\r\n        } else {\r\n            this.repeatPassRef.current.setCustomValidity(\"\");\r\n        }\r\n    }\r\n\r\n    //handleChange--Called when a field in a dialog box form changes.\r\n    handleChange = (event) => {\r\n        const formUpdated = (this.origAccountInfo == null ? true : this.formIsUpdated(event.target.name,event.target.value));\r\n        if (event.target.name === \"profilePic\") {\r\n            if (event.target.value.length == 0) { //The user canceled the file selection -- set back to default\r\n                this.setState({profilePicURL: \"https://icon-library.net//images/default-profile-icon/default-profile-icon-24.jpg\",\r\n                               formUpdated: formUpdated},\r\n                               this.checkDataValidity);\r\n            } else { //The user selected a file\r\n                const self = this;\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(this.profilePicRef.current.files[0]);\r\n                reader.addEventListener(\"load\",function() {\r\n                    self.setState({profilePicURL:  this.result,\r\n                                   formUpdated: formUpdated},this.checkDataValidity);\r\n                });\r\n                \r\n            }\r\n        } else {\r\n            this.setState({[event.target.name]: event.target.value,\r\n                           formUpdated: formUpdated},this.checkDataValidity);\r\n        }\r\n    } \r\n\r\n    //formisUpdated-- Checks whether any form data element has changed from the original. If so, \r\n    //returns true. Returns false otherwise. Note that in case of editing new account, always returns\r\n    //true since this.origAccountInfo is set to null.\r\n    //Should be called whenever the user makes a change to form data.\r\n    formIsUpdated = (updateField,updateVal) => {\r\n        if (this.origAccountInfo[updateField] != updateVal) {return true;}\r\n        if (updateField != \"type\" && \r\n             this.state.type != this.origAccountInfo.type) \r\n             {return true;}\r\n        if (updateField != \"displayName\" && \r\n             this.state.displayName != this.origAccountInfo.displayName) \r\n             {return true;}\r\n        if (updateField != \"profilePicURL\" && \r\n             this.state.profilePicURL != this.origAccountInfo.profilePicURL) \r\n             {return true;}\r\n        if (updateField != \"password\" &&\r\n            this.state.password !== this.origAccountInfo.password)\r\n            {return true;}\r\n        if (updateField != \"passwordRepeat\" &&\r\n            this.state.passwordRepeat !== this.origAccountInfo.passwordRepeat)\r\n            {return true;}\r\n        if (updateField != \"securityQuestion\" &&\r\n            this.state.securityQuestion !== this.origAccountInfo.securityQuestion)\r\n            {return true;}\r\n        if (updateField != \"securityAnswer\" &&\r\n            this.state.securityAnswer !== this.origAccountInfo.securityAnswer)\r\n            {return true;}\r\n        return false;\r\n    }\r\n\r\n    //setDefaultDisplayName -- Triggered by onBlur() event of Email field.\r\n    //Sets default value of display name to value entered into Email field \r\n    //as a courtesy.\r\n    setDefaultDisplayName = (event) => {\r\n      if (event.target.value.length > 0 && this.state.displayName === \"\") {\r\n        this.setState({displayName: event.target.value});\r\n      }\r\n    }\r\n\r\n    //handleSubmit -- Triggered when user clicks on submit button to\r\n    //either create or edit account.\r\n    //Custom data checking ensures user account under this email does not \r\n    //already exist and that the rest of the info is valid. We create a new  \r\n    // object for user, save it to localStorage and take user to app's \r\n    //landing page. \r\n    handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n        //Initialize user account\r\n        let userData = {\r\n            type: this.state.type,\r\n            displayName: this.state.displayName,\r\n            password: this.state.password,\r\n            profilePicURL: this.state.profilePicURL,\r\n            securityQuestion: this.state.securityQuestion,\r\n            securityAnswer: this.state.securityAnswer\r\n        };\r\n        const url = '/users/' + this.state.accountName;\r\n        let res;\r\n        if (this.props.create) { //use POST route to create new user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'POST',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"New account created! Enter credentials to log in.\",false);\r\n            } else { //Unsuccessful account creation\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        } else { //use PUT route to update existing user account\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'PUT',\r\n                body: JSON.stringify(userData)}); \r\n            if (res.status == 200) { //successful account creation!\r\n                this.props.done(\"User Account Updated!\",false);\r\n            } else { //Unsuccessful account update\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                this.props.done(resText,false);\r\n            }\r\n        }\r\n    }\r\n\r\n    //deleteAccount -- Called after confirms account deletion. \r\n    //Uses DELETE server route to perform server deletion. \r\n    //Calls on done with status message and\r\n    //true if delete was succesful, false otherwise.\r\n    deleteAccount = async() => {\r\n       const url = '/users/' + this.state.accountName;\r\n       const res = await fetch(url, \r\n                    {method: 'DELETE'}); \r\n        if (res.status == 200) { //successful account deletion!\r\n            this.props.done(\"Account '\" + this.state.accountName + \"' has been deleted.\",true);\r\n        } else { //Unsuccessful account deletion\r\n            //Grab textual error message\r\n            const resText = await res.text();\r\n            this.props.done(resText,false);\r\n        }\r\n        this.setState({confirmDelete: false});\r\n    }\r\n\r\n    //confirmDeleteAccount -- Called when user clicks on \"Delete Account...\"\r\n    //button to indicate intention to delete account. Presents the Confirm\r\n    //Delete dialog box.\r\n    confirmDeleteAccount = (e) => {\r\n        e.preventDefault();\r\n        this.setState({confirmDelete: true});\r\n    }\r\n\r\n    render() {\r\n    return (  \r\n    <div className=\"modal\" role=\"dialog\">\r\n    <div className=\"modal-dialog modal-lg\"></div>\r\n        <div className=\"modal-content form-center\">\r\n            <div className=\"modal-header\">\r\n              <h3><b>{this.props.create ? \"Create New Account\" : \"Edit Account\"}</b></h3>\r\n              <button className=\"modal-close\" \r\n                       onClick={this.props.cancel}>\r\n                &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n            <form onSubmit={this.handleSubmit}>\r\n            <label>\r\n                Type:\r\n                <select name=\"type\" value={this.state.type} \r\n                    className=\"form-control form-center\" onChange={this.handleChange}>\r\n                    <option value=\"user\">User</option>\r\n                    <option value=\"operator\">Operator</option>\r\n                </select> \r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Email: \r\n                <input  \r\n                autocomplete=\"off\"\r\n                disabled={!this.props.create}\r\n                className=\"form-control form-text form-center\"\r\n                name=\"accountName\"\r\n                type=\"email\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Email Address\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                ref={this.newUserRef}\r\n                value={this.state.accountName}\r\n                onChange={this.handleChange}\r\n                onBlur={this.setDefaultDisplayName}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Password:\r\n                <input\r\n                autocomplete=\"off\"\r\n                className=\"form-control form-text form-center\"\r\n                name=\"password\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\r\n                \"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                required={true}\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Repeat Password:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"passwordRepeat\"\r\n                type=\"password\"\r\n                size=\"35\"\r\n                placeholder=\"Repeat Password\"\r\n                required={true}\r\n                ref={this.repeatPassRef}\r\n                value={this.state.passwordRepeat}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Display Name:\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"displayName\"\r\n                type=\"text\"\r\n                size=\"30\"\r\n                placeholder=\"Display Name\"\r\n                required={true}\r\n                value={this.state.displayName}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Profile Picture:<br/>\r\n                <input\r\n                className=\"form-control form-text form-center\"\r\n                name=\"profilePic\"\r\n                type=\"file\"\r\n                accept=\"image/x-png,image/gif,image/jpeg\" \r\n                ref={this.profilePicRef}\r\n                value={this.state.profilePic}\r\n                onChange={this.handleChange}\r\n                />\r\n                <img src={this.state.profilePicURL != \"\" ? \r\n                            this.state.profilePicURL :\r\n                            this.state.profilePicDataURL} \r\n                        height=\"60\" width=\"60\" \r\n                 />\r\n            </label> \r\n            <br/>\r\n            <label>\r\n                Security Question:\r\n                <textarea\r\n                className=\"form-control form-text form-center\"\r\n                name=\"securityQuestion\"\r\n                size=\"35\"\r\n                placeholder=\"Security Question\"\r\n                rows=\"2\"\r\n                cols=\"35\"\r\n                maxLength=\"100\"\r\n                required={true}\r\n                value={this.state.securityQuestion}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            <label>\r\n                Answer to Security Question:\r\n                <textarea\r\n                className=\"form-control form-text form-center\"\r\n                name=\"securityAnswer\"\r\n                type=\"text\"\r\n                placeholder=\"Answer\"\r\n                rows=\"2\"\r\n                cols=\"35\"\r\n                maxLength=\"100\"\r\n                required={true}\r\n                value={this.state.securityAnswer}\r\n                onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <br/>\r\n            {!this.props.create ?  \r\n            <button className=\"btn btn-small btn-danger\" onClick={this.confirmDeleteAccount}>\r\n                Delete Account...\r\n            </button> : null}\r\n            <br/><br/>\r\n            {!this.props.create ?  \r\n            <button type=\"button\" className=\"btn btn-small btn-primary\" onClick={this.toggleAddCardClicked} disabled={this.state.card === 1 ? true:false}>\r\n                Add Card\r\n            </button> : null}\r\n            <br/><br/>\r\n            <button role=\"submit\" \r\n                disabled={!this.state.formUpdated}\r\n                className=\"btn btn-primary btn-color-theme modal-submit-btn\">\r\n                <span className={this.props.create ? \"fa fa-user-plus\" : \"fa fa-user\"}></span>\r\n                &nbsp;{this.props.create ? \"Create Account\" : \"Update Account\"}\r\n            </button>\r\n            </form>\r\n            </div>\r\n        </div>\r\n        {this.state.confirmDelete ? \r\n          <ConfirmDeleteAccount email={this.state.accountName}\r\n                                deleteAccount={this.deleteAccount}\r\n                                close={() => (this.setState({confirmDelete: false}))}\r\n         /> : null}\r\n    </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default CreateEditAccountDialog;","import React from 'react'\r\n\r\nclass ResetPasswordDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.resetPasswordRef = React.createRef();\r\n        this.resetPasswordRepeatRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleSubmit -- When the user submits the form, ensure that the passwords match.\r\n    //If so, call on resetPassword in parent component to actually reset the password.\r\n    //Otherwise, display an error message prompting the user to try again.\r\n    handleSubmit= (event) => {\r\n        event.preventDefault();\r\n        if (this.resetPasswordRef.current.value === this.resetPasswordRepeatRef.current.value) {\r\n            this.props.resetPassword(this.resetPasswordRef.current.value);\r\n        } else {\r\n            this.resetPasswordRepeatRef.current.focus();\r\n            this.setState({errorMsg: \"The passwords you entered do not match. Please try again.\"});\r\n        }\r\n    }\r\n\r\n    checkForSubmit = (e) => {\r\n        if (e.code === \"Enter\") {\r\n            e.preventDefault();\r\n            this.handleSubmit();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Reset Password</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Enter new password\"\r\n                pattern=\"(?=^.{8,}$)((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$\"\r\n                        className=\"form-control form-text\"\r\n                        ref={this.resetPasswordRef}\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Repeat New Password: \r\n                        <input\r\n                        type=\"password\"\r\n                        placeholder=\"Repeat new password\"\r\n                        className=\"form-control form-text\"\r\n                        onKeyUp={this.checkForSubmit}\r\n                        ref={this.resetPasswordRepeatRef}\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                     className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-key\"></span>&nbsp;Reset Password\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );\r\n        \r\n    }\r\n}\r\n\r\nexport default ResetPasswordDialog;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass LookUpAccountDialog extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.emailRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //handleLookUpAccount: When the user clicks on the \"Look Up Account\" dialog box\r\n    //button, we check whether the account exists. If it does, we update the state,\r\n    //setting the resetEmail var to the email entered, hiding the current dialog box\r\n    //and showing the security question dialog box.\r\n    handleLookUpAccount = async(event) => {\r\n        event.preventDefault();\r\n        let response = await fetch(\"/users/\" + this.emailRef.current.value);\r\n        if (response.status == 200) {\r\n            const json = await response.json();\r\n            const obj = JSON.parse(json);\r\n            if (obj.authStrategy === \"local\") {\r\n                this.props.getSecurityAnswer(obj.id,obj.securityQuestion, obj.securityAnswer);\r\n            } else { //Account exists but was created through OAuth so password can't be reset \r\n                this.setState({ErrMsg: \"That account is authenticated through \" + obj.authStrategy + \". \" +\r\n                               \"Please log in to \" + obj.authStrategy + \" to reset the password.\"});\r\n            }\r\n        } else {\r\n            this.setState({errorMsg: \"Sorry, there is no account associated with '\" + this.emailRef.current.value + \"'.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Look Up Account</b></h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={() => {this.props.cancelResetPassword()}}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null}\r\n                    <form onSubmit={this.handleLookUpAccount}>\r\n                    <label>\r\n                        Account Email Address: \r\n                        <input\r\n                        ref={this.emailRef}\r\n                        className=\"form-control form-text\"\r\n                        type=\"email\"\r\n                        size=\"35\"\r\n                        placeholder=\"Enter Email Address\"\r\n                        pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                        ref={this.emailRef}\r\n                        required={true}\r\n                        />\r\n                    </label>\r\n                    <button type=\"submit\" \r\n                        className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-search\"></span>&nbsp;Look Up Account\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n        );   \r\n    }\r\n\r\n}\r\n\r\nexport default LookUpAccountDialog;\r\n","import React from 'react';\r\n\r\nclass SecurityQuestionDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.securityAnswerRef = React.createRef();\r\n        this.state = {errorMsg: \"\"};\r\n    }\r\n\r\n    //Focus cursor in email secrity answer field when mounted\r\n    componentDidMount() {\r\n        this.securityAnswerRef.current.focus();\r\n    }  \r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        if (this.securityAnswerRef.current.value === this.props.answer) {\r\n            this.props.getNewPassword();\r\n        } else {\r\n            this.securityAnswerRef.current.focus();\r\n            this.setState({errorMsg: \"Sorry, that is not the correct answer to the security question. Try again.\"});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"modal\" role=\"dialog\">\r\n              <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                  <div className=\"modal-header\">\r\n                    <h3 className=\"modal-title\"><b>Answer Security Question</b>\r\n                    </h3>\r\n                    <button className=\"modal-close\" \r\n                        onClick={this.props.cancelResetPassword}>\r\n                        &times;\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"modal-body\">\r\n                    {this.state.errorMsg != \"\" ? <p className=\"emphasis\">{this.state.errorMsg}</p> : null} \r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Security Question: \r\n                        <textarea\r\n                        readOnly={true}\r\n                        value={this.props.question}\r\n                        className=\"form-control form-text\"\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <label>\r\n                        Security Answer: \r\n                        <textarea\r\n                        className=\"form-control form-text\"\r\n                        placeholder=\"Enter Security Question Answer\"\r\n                        ref={this.securityAnswerRef}\r\n                        rows=\"3\"\r\n                        cols=\"35\"\r\n                        />\r\n                    </label>\r\n                    <button role=\"submit\" \r\n                      className=\"btn btn-primary btn-color-theme form-submit-btn\">\r\n                        <span className=\"fa fa-check\"></span>&nbsp;Verify Answer\r\n                    </button>\r\n                    </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          );        \r\n    }\r\n}\r\n export default SecurityQuestionDialog;","import React from 'react';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js';\r\nimport ResetPasswordDialog from './ResetPasswordDialog.js';\r\nimport LookUpAccountDialog from './LookUpAccountDialog.js';\r\nimport SecurityQuestionDialog from './SecurityQuestionDialog.js';\r\n\r\nclass LoginPage extends React.Component {\r\n\r\nconstructor() {\r\n    super();\r\n    //Create a ref for the email input DOM element\r\n    this.emailInputRef = React.createRef();\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.passwordInputRef = React.createRef();\r\n    this.state = {statusMsg: \"\",\r\n                  loginBtnIcon: \"fa fa-sign-in\",\r\n                  loginBtnLabel: \"Log In\",\r\n                  showLookUpAccountDialog: false,\r\n                  showSecurityQuestionDialog: false,\r\n                  showResetPaswordDialog: false,\r\n                  githubIcon: \"fa fa-github\",\r\n                  githubLabel: \"Sign in with GitHub\",\r\n                  loginMsg: \"\",\r\n                  newAccountCreated: false,\r\n                  googleIcon: \"fa fa-google\",\r\n                  googleLabel: \"Sign in with Google\"\r\n                  };\r\n} \r\n    \r\n//Focus cursor in email input field when mounted\r\ncomponentDidMount() {\r\n    this.emailInputRef.current.focus();\r\n}  \r\n\r\n//handleLoginSubmit -- Called when user clicks on login button.\r\nhandleLoginSubmit = async (event) => {\r\n    event.preventDefault();\r\n    this.setState({loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n                   loginBtnLabel: \"Logging In...\"});\r\n    const url = \"auth/login?username=\" + this.emailInputRef.current.value +\r\n                \"&password=\" + this.passwordInputRef.current.value;\r\n    const res = await fetch(url, {method: 'POST'}); \r\n    if (res.status == 200) { //successful login!\r\n        window.open(\"/\",\"_self\");\r\n    } else { //Unsuccessful login\r\n      const resText = await res.text();\r\n      this.setState({loginBtnIcon: \"fa fa-sign-in\",\r\n                     loginBtnLabel: \"Log In\",\r\n                     statusMsg: resText});\r\n    }\r\n}\r\n\r\n  //accountCreateDone -- Called by child CreateAccountDialog component when \r\n  //user attempted to create new account. Hide the dialog and display \r\n  //a message indicating result of the attempt.\r\n  accountCreateDone = (msg) => {\r\n      this.setState({statusMsg: msg,\r\n                     showCreateAccountDialog: false});\r\n  }\r\n\r\n  //cancelCreateAccount -- Called by child CreateAccountDialog componenet when user decides\r\n  //to cancel creation of new account by clicking the \"X\" in top-right of dialog.\r\n  cancelCreateAccount = () => {\r\n      this.setState({showCreateAccountDialog: false});\r\n  }\r\n\r\n//cancelResetPassword -- Called by one of the child three child dialog box components when\r\n//the user decides to cancel resetting their password. Toggles state so that all three\r\n//of the dialog boxes are hidden\r\ncancelResetPassword = () => {\r\n    this.resetUserId = \"\";\r\n    this.resetQ = \"\";\r\n    this.resetA = \"\";\r\n    this.setState({showLookUpAccountDialog: false,\r\n                   showSecurityQuestionDialog: false,\r\n                   showResetPaswordDialog: false});             \r\n}\r\n\r\n//handleOAuthLogin -- Callback function that initiates contact with OAuth\r\n//provider\r\nhandleOAuthLogin = (provider) => {\r\n    window.open(`/auth/${provider}`,\"_self\");\r\n}\r\n\r\n//handleOAuthLoginClick -- Called whent the user clicks on button to\r\n//authenticate via a third-party OAuth service. The name of the provider is\r\n//passed in as a parameter.\r\nhandleOAuthLoginClick = (provider) => {\r\n   this.setState({[provider + \"Icon\"] : \"fa fa-spin fa-spinner\",\r\n                  [provider + \"Label\"] : \"Connecting...\"});\r\n   setTimeout(() => this.handleOAuthLogin(provider),1000);\r\n}\r\n\r\n//getSecurityAnswer: Given the id, security question, and security answer obtained\r\n//from the LookUpAccountDialog component, update state such that the user will\r\n//next be prompted to enter security question and answer for verification\r\ngetSecurityAnswer = (userId, question, answer) => {\r\n    this.resetUserId = userId;\r\n    this.resetQ = question;\r\n    this.resetA = answer;\r\n    this.setState({showLookUpAccountDialog: false,\r\n                   showSecurityQuestionDialog: true\r\n                });\r\n}\r\n\r\n//getNewPassword-- Called after user successfully provides correct answer\r\n//to security question. Presents the \"Reset Password\" dialog box.\r\ngetNewPassword = () => {\r\n    this.setState({showSecurityQuestionDialog: false,\r\n                    showResetPaswordDialog: true});\r\n}\r\n\r\n//resetPassword--Called after the user successfully enters a new (acceptable)\r\n//password. pw contains the new password. Call on the Update (PUT) server\r\n//route to update the user's password in the database.\r\nresetPassword = async(pw) => {\r\n    const url = \"/users/\" + this.resetUserId;\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'PUT',\r\n        body: JSON.stringify({password: pw})}); \r\n    if (res.status == 200) { //successful update creation!\r\n        this.setState({showResetPaswordDialog: false,\r\n                       statusMsg: \"Password successfully reset!\"});\r\n    } else { //Unsuccessful account creation\r\n        //Grab textual error message\r\n        const resText = await res.text();\r\n        this.setState({showResetPasswordDialog: false,\r\n                      statusMsg: resText});\r\n    }\r\n    \r\n}\r\n\r\n//newAccountCreated -- Called after successful creation of a new account\r\naccountCreateDone = (msg,deleted) => {\r\n    this.setState({statusMsg: msg,\r\n                   showCreateAccountDialog: false});\r\n}\r\n\r\n//closeStatusMsg -- Called when user clicks on \"x\" to dismiss status message\r\ncloseStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n}\r\n\r\n//cancelCreateAccount -- called to hide Create Account dialog without creating acct\r\ncancelCreateAccount = () => {\r\n    this.setState({showCreateAccountDialog: false});\r\n}\r\n\r\n  render() {\r\n    return(\r\n        <div>\r\n        <center>\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.statusMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n            {this.state.showLookUpAccountDialog ? \r\n              <LookUpAccountDialog cancelResetPassword={this.cancelResetPassword}\r\n                                   getSecurityAnswer={this.getSecurityAnswer}/> : null}\r\n            {this.state.showSecurityQuestionDialog ? \r\n               <SecurityQuestionDialog cancelResetPassword={this.cancelResetPassword}\r\n                                       question={this.resetQ}\r\n                                       answer={this.resetA}\r\n                                       getNewPassword={this.getNewPassword}/> : null}\r\n            {this.state.showResetPaswordDialog ? \r\n              <ResetPasswordDialog cancelResetPassword={this.cancelResetPassword}\r\n                                   resetPassword={this.resetPassword} /> : null}\r\n            <form id=\"loginInterface\" onSubmit={this.handleLoginSubmit}>\r\n            <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Email:\r\n                <input\r\n                ref={this.emailInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"email\"\r\n                placeholder=\"Enter Email Address\"\r\n                id=\"emailInput\"\r\n                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p />\r\n            <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                Password:\r\n                <input\r\n                ref={this.passwordInputRef}\r\n                className=\"form-control login-text\"\r\n                type=\"password\"\r\n                id=\"passwordInput\"\r\n                placeholder=\"Enter Password\"\r\n                pattern=\"[A-Za-z0-9!@#$%^&*()_+\\-]+\"\r\n                required={true}\r\n                />\r\n            </label>\r\n            <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                <span id=\"login-btn-icon\" className={this.state.loginBtnIcon}/>\r\n                &nbsp;{this.state.loginBtnLabel}\r\n            </button>\r\n            <p>\r\n            <button type=\"button\" className=\"btn btn-link login-link\" \r\n                    onClick={() => {this.setState({showCreateAccountDialog: true});}}>\r\n                Create an account</button> | \r\n                <button type=\"button\" className=\"btn btn-link login-link\"\r\n                        onClick={() => {this.setState({showLookUpAccountDialog: true});}}>\r\n                Reset your password</button>\r\n            </p>  \r\n            <button id=\"github-login-btn\" type=\"button\" className=\"btn btn-github\"\r\n               onClick={() => this.handleOAuthLoginClick(\"github\")}>\r\n              <span className={this.state.githubIcon}></span>&nbsp;\r\n                {this.state.githubLabel}\r\n            </button>\r\n            <button id=\"google-login-btn\" type=\"button\" className=\"btn btn-google\"\r\n               onClick={() => this.handleOAuthLoginClick(\"google\")}>\r\n              <span className={this.state.googleIcon}></span>&nbsp;\r\n                {this.state.googleLabel}\r\n            </button>\r\n            <p>\r\n                <i>Version CptS 489</i>\r\n            </p>\r\n            </form>\r\n            {this.state.showCreateAccountDialog ? \r\n              <CreateEditAccountDialog\r\n                create={true} \r\n                done={this.accountCreateDone}\r\n                cancel={this.cancelCreateAccount} /> : null}\r\n            {this.state.showResetPasswordDialog ? <ResetPasswordDialog /> : null}\r\n        </center>\r\n        </div>\r\n        )\r\n    }\r\n} \r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass FeedPage extends React.Component {\r\n\r\n    // handleClick = (type) => {\r\n    //     this.props.userObj.type = type;\r\n    //     this.props.setUserObjType(this.props.userObj);\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"feedMode\" className=\"padded-page\">\r\n            <center>\r\n            {/* {(this.props.userObj.authStrategy === \"google\") || (this.props.userObj.authStrategy === \"github\") ?\r\n                <div className=\"modal\" role=\"dialog\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h3>What do you want to be?</h3>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                            <Button onClick={() => this.handleClick(\"user\")}>User</Button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <Button onClick={() => this.handleClick(\"operator\")}>Operator</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div> : null} */}\r\n            <h1 >Activity Feed</h1>\r\n            <h2>This page is under construction.</h2>\r\n            <img src=\"https://dl.dropboxusercontent.com/s/qpjhy9x9gwdxpob/SpeedScoreLogo64Trans.png\" \r\n             height=\"200\" width=\"200\"/>\r\n            <p style={{fontStyle: \"italic\"}}>Version CptS 489 React Demo</p>\r\n            </center>\r\n        </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default FeedPage;","import React from 'react';\r\n\r\nclass ConfirmDeleteRound extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Confirm Round Deletion</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <p>Do you really want to delete this round?</p>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.props.deleteRound}>\r\n                  Yes, Delete</button>\r\n                  <button className=\"btn btn-secondary\" onClick={this.props.close}>\r\n                  No, Cancel</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfirmDeleteRound;","import React from 'react';\r\nimport ConfirmDeleteRound from './ConfirmDeleteRound.js';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundsTable extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {showConfirmDelete: false};\r\n  }\r\n\r\n  //editRound -- Triggered when the user clicks the edit button for a given\r\n  //round. The id param is the unique property that identifies the round.\r\n  //Set the state variable representing the id of the round to be edited and\r\n  //then switch to the ROUNDS_EDITROUND mode to allow the user to edit the\r\n  //chosen round.\r\n  editRound = (id) => {\r\n    this.props.setEditId(id);\r\n    this.props.changeMode(AppMode.ROUNDS_EDITROUND);\r\n  }\r\n\r\n  //deleteRound -- Triggered when the user clicks on the \"Yes, Delete\"\r\n  //button in the Confirm Delete dialog box. It executes the deletion and\r\n  //closes the dialog box.\r\n  deleteRound = () => {\r\n    this.props.deleteRound();\r\n    this.setState({showConfirmDelete: false});\r\n  }\r\n\r\n\r\n  //confirmDelete -- Triggered when the user clicks the delete button\r\n  //for a given round. The id paam is the unique property that \r\n  //identifies the round. Set the state variable representing the id\r\n  //of the round to be deleted and then present a dialog box asking\r\n  //the user to confirm the deletion.\r\n  confirmDelete = (id) => {\r\n    this.props.setDeleteId(id);\r\n    this.setState({showConfirmDelete: true});\r\n  }\r\n\r\n\r\n  //renderTable -- render an HTML table displaying the rounds logged\r\n  //by the current user and providing buttons to view/edit and delete each round.\r\n  renderTable = () => {\r\n  let table = [];\r\n  for (let r = 0; r < this.props.rounds.length; ++r) {\r\n    table.push(\r\n      <tr key={r}>\r\n        <td>{this.props.rounds[r].date.substring(0,10)}</td>\r\n        <td>{this.props.rounds[r].course}</td>\r\n        <td>{(Number(this.props.rounds[r].strokes) + \r\n              Number(this.props.rounds[r].minutes)) +\r\n              \":\" + (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \" (\" + \r\n              this.props.rounds[r].strokes + \r\n              \" in \" + this.props.rounds[r].minutes + \":\" + \r\n              (this.props.rounds[r].seconds < 10 ?  \r\n                \"0\" + this.props.rounds[r].seconds :\r\n                this.props.rounds[r].seconds) + \")\"}\r\n        </td>\r\n        <td><button onClick={this.props.menuOpen ? null : () => \r\n          this.editRound(r)}>\r\n              <span className=\"fa fa-eye\"></span></button></td>\r\n        <td><button onClick={this.props.menuOpen ? null : \r\n          () => this.confirmDelete(r)}>\r\n              <span className=\"fa fa-trash\"></span></button></td>\r\n      </tr> \r\n    );\r\n  }\r\n  return table;\r\n  }\r\n\r\n  //render--render the entire rounds table with header, displaying a \"No\r\n  //Rounds Logged\" message in case the table is empty.\r\n  render() {\r\n    return(\r\n    <div className=\"padded-page\">\r\n      <h1></h1>\r\n      <table className=\"table table-hover\">\r\n        <thead className=\"thead-light\">\r\n        <tr>\r\n          <th>Date</th>\r\n          <th>Course</th>\r\n          <th>Score</th>\r\n          <th>View/Edit...</th>\r\n          <th>Delete</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Object.keys(this.props.rounds).length === 0 ? \r\n          <tr>\r\n          <td colSpan=\"5\" style={{fontStyle: \"italic\"}}>No rounds logged</td>\r\n          </tr> : this.renderTable()\r\n          }\r\n        </tbody>\r\n      </table>\r\n      {this.state.showConfirmDelete ?\r\n        <ConfirmDeleteRound \r\n          close={() => this.setState({showConfirmDelete: false})} \r\n          deleteRound={this.deleteRound} /> : null}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoundsTable;\r\n","import React from 'react';\r\nimport AppMode from './../AppMode.js';\r\n\r\nclass RoundForm extends React.Component {\r\n  constructor(props) {\r\n  super(props);\r\n  //Create date object for today, taking time zone into consideration\r\n  let today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\n  //store date as ISO string\r\n  if (this.props.mode === AppMode.ROUNDS_LOGROUND) {\r\n    //If logging a new round, the starting state is a default round with\r\n    //today's date.\r\n    this.state = {date:  today.toISOString().substr(0,10), \r\n                  course: \"\",\r\n                  type: \"practice\",\r\n                  holes: \"18\",\r\n                  strokes: 80,\r\n                  minutes: 50,\r\n                  seconds: \"00\",\r\n                  notes: \"\",\r\n                  faIcon: \"fa fa-save\",\r\n                  btnLabel: \"Save Round Data\"}\r\n  } else {\r\n    //if editing an existing round, the starting state is the round's\r\n    //current data\r\n    let thisRound = {...this.props.startData};\r\n    delete thisRound.id;\r\n    thisRound.faIcon = \"fa fa-edit\";\r\n    thisRound.btnLabel = \"Update Round Data\";\r\n    this.state = thisRound;\r\n  }\r\n}\r\n  \r\n  \r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        if (name === \"seconds\") {\r\n          let newSec = (event.target.value.length < 2 ? \"0\" + \r\n            event.target.value : event.target.value);\r\n          let newSGS = this.computeSGS(this.state.strokes, this.state.minutes, \r\n                                       newSec);\r\n          this.setState({seconds: newSec, SGS: newSGS});\r\n        } else if (name === \"strokes\") {\r\n          let newStrokes = event.target.value;\r\n          let newSGS = this.computeSGS(newStrokes, this.state.minutes, \r\n            this.state.seconds);\r\n          this.setState({strokes: newStrokes, SGS: newSGS});\r\n        } else if (name === \"minutes\") {\r\n            let newMin = event.target.value;\r\n            let newSGS = this.computeSGS(this.state.strokes, newMin, \r\n              this.state.seconds);\r\n            this.setState({minutes: newMin, SGS: newSGS});\r\n        } else {\r\n          this.setState({[name]: event.target.value});\r\n        }\r\n    }\r\n  \r\n  \r\n    //handleSubmit -- When the user clicks on the button to save/update the\r\n    //round, start the spinner and invoke the parent component's saveRound\r\n    //method to do the actual work. Note that saveRound is set to the correct\r\n    //parent method based on whether the user is logging a new round or editing\r\n    //an existing round.\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({faIcon: \"fa fa-spin fa-spinner\",\r\n                        btnLabel: (this.props.mode === AppMode.ROUNDS_LOGROUND ? \r\n                                    \"Saving...\" : \"Updating...\")});\r\n        //Prepare current round data to be saved\r\n        let roundData = this.state;\r\n        delete roundData.faIcon;\r\n        delete roundData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.props.saveRound,1000,roundData); \r\n        event.preventDefault(); \r\n        }\r\n  \r\n\r\n    computeSGS = (strokes, min, sec) => {\r\n      return (Number(strokes) + Number(min)) \r\n                  + \":\" + sec;\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <form className=\"padded-page\" onSubmit={this.handleSubmit}>\r\n          <center>\r\n            <label>\r\n              Date:\r\n              <input name=\"date\" className=\"form-control form-center\" \r\n                type=\"date\" value={this.state.date} onChange={this.handleChange} />\r\n            </label>\r\n            <p></p>\r\n            <label>\r\n              Course:\r\n              <input name=\"course\" className=\"form-control form-center\" type=\"text\"\r\n                value={this.state.course} onChange={this.handleChange}\r\n                placeholder=\"Course played\" size=\"50\" maxLength=\"50\" />\r\n            </label>\r\n          <p></p>\r\n          <label>Type:\r\n          <select name=\"type\" value={this.state.type} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"practice\">Practice</option>\r\n            <option value=\"tournament\">Tournament</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Holes:\r\n          <select name=\"holes\" value={this.state.holes} \r\n            className=\"form-control form-center\" onChange={this.handleChange}>\r\n            <option value=\"9\">9</option>\r\n            <option value=\"18\">18</option>\r\n          </select> \r\n          </label>\r\n          <p></p>\r\n          <label># Strokes:\r\n          <input name=\"strokes\" className=\"form-control form-center\" type=\"number\" \r\n            min=\"9\" max=\"200\" value={this.state.strokes} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Time: <br></br>\r\n          <input name=\"minutes\" type=\"number\" size=\"3\"\r\n            min=\"10\" max=\"400\" value={this.state.minutes}\r\n            onChange={this.handleChange} />:  \r\n          <input name=\"seconds\" type=\"number\" size=\"2\"\r\n            min=\"0\" max=\"60\" value={this.state.seconds} \r\n            onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <label>Speedgolf Score: <br></br>\r\n              <input name=\"SGS\" className=\"form-center\" type=\"text\" size=\"6\" \r\n                disabled={true} value={this.computeSGS(this.state.strokes,this.state.minutes,this.state.seconds)} />\r\n          </label>\r\n          <p></p>\r\n          <label>Notes:\r\n              <textarea name=\"notes\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                placeholder=\"Enter round notes\" value={this.state.notes} \r\n                onChange={this.handleChange} />\r\n          </label>\r\n          <p></p>\r\n          <p></p>\r\n          <button type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n            className=\"btn btn-primary btn-color-theme\">\r\n              <span className={this.state.faIcon}/>&nbsp;{this.state.btnLabel}\r\n          </button>\r\n          </center>\r\n        </form>\r\n      );\r\n    }\r\n}\r\n\r\nexport default RoundForm;","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render() {\r\n      return(\r\n        <div className=\"floatbtn\" onClick={this.props.handleClick}>\r\n          <span className=\"floatbtn-icon fa fa-plus\"></span>\r\n        </div>  \r\n      );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;\r\n","//Rounds -- A parent component for the app's \"rounds\" mode.\r\n//Manages the rounds data for the current user and conditionally renders the\r\n//appropriate rounds mode page based on App's mode, which is passed in as a prop.\r\n\r\nimport React from 'react';\r\nimport AppMode from './../AppMode.js';\r\nimport RoundsTable from './RoundsTable.js';\r\nimport RoundForm from './RoundForm.js';\r\nimport FloatingButton from './FloatingButton.js';\r\n\r\nclass Rounds extends React.Component {\r\n\r\n    //Initialize a Rounds object based on local storage\r\n    constructor() {\r\n        super();\r\n        this.deleteId = \"\";\r\n        this.editId = \"\";\r\n        this.state = {errorMsg: \"\"};           \r\n    }\r\n\r\n    //addRound -- Given an object newData containing a new round, use the \r\n    //server POST route to add the new round to the database. If the add is\r\n    //successful, call on the refreshOnUpdate() method to force the parent\r\n    //App component to refresh its state from the database and re-render itself,\r\n    //allowing the change to be propagated to the Rounds table. Then switch\r\n    //the mode back to AppMode.ROUNDS since the user is done adding a round.\r\n    addRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.setState({errorMsg: \"\"});\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n    //editRound -- Given an object newData containing updated data on an\r\n    //existing round, update the current user's round in the database. \r\n    //toggle the mode back to AppMode.ROUNDS since the user is done editing the\r\n    //round. \r\n    editRound = async (newData) => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.editId]._id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }\r\n    }\r\n\r\n\r\n    //deleteRound -- Delete the current user's round uniquely identified by\r\n    //this.state.deleteId, delete from the database, and reset deleteId to empty.\r\n    deleteRound = async () => {\r\n        const url = '/rounds/' + this.props.userObj.id + '/' + \r\n            this.props.userObj.rounds[this.deleteId]._id;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status != 200) {\r\n            this.setState({errorMsg: \"An error occurred when attempting to delete round from database: \" \r\n            + msg});\r\n            this.props.changeMode(AppMode.ROUNDS);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.ROUNDS);\r\n        }  \r\n    }\r\n \r\n    //setDeleteId -- Capture in this.state.deleteId the unique id of the item\r\n    //the user is considering deleting.\r\n    setDeleteId = (val) => {\r\n        this.deleteId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    //setEditId -- Capture in this.state.editId the unique id of the item\r\n    //the user is considering editing.\r\n    setEditId = (val) => {\r\n        this.editId = val;\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n\r\n    closeErrorMsg = () => {\r\n        this.setState({errorMsg: \"\"});\r\n    }\r\n    \r\n    //render -- Conditionally render the Rounds mode page as either the rounds\r\n    //table, the rounds form set to obtain a new round, or the rounds form set\r\n    //to edit an existing round.\r\n    render() {\r\n        switch(this.props.mode) {\r\n            case AppMode.ROUNDS:\r\n                return (\r\n                    <>\r\n                    {this.state.errorMsg != \"\" ? <div className=\"status-msg\"><span>{this.state.errorMsg}</span>\r\n                       <button className=\"modal-close\" onClick={this.closeErrorMsg}>\r\n                          <span className=\"fa fa-times\"></span>\r\n                        </button></div>: null}\r\n                    <RoundsTable \r\n                        rounds={this.props.userObj.rounds}\r\n                        setEditId={this.setEditId}\r\n                        setDeleteId={this.setDeleteId}\r\n                        deleteRound={this.deleteRound}\r\n                        changeMode={this.props.changeMode}\r\n                        menuOpen={this.props.menuOpen} /> \r\n                    <FloatingButton\r\n                        handleClick={() => \r\n                        this.props.changeMode(AppMode.ROUNDS_LOGROUND)}\r\n                        menuOpen={this.props.menuOpen}\r\n                        icon={\"fa fa-plus\"} />\r\n                    </>\r\n                );\r\n            case AppMode.ROUNDS_LOGROUND:\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={\"\"} \r\n                        saveRound={this.addRound} />\r\n                );\r\n            case AppMode.ROUNDS_EDITROUND:\r\n                let thisRound = {...this.props.userObj.rounds[this.editId]};\r\n                thisRound.date = thisRound.date.substr(0,10);\r\n                if (thisRound.seconds < 10) {\r\n                    thisRound.seconds = \"0\" + thisRound.seconds;\r\n                } \r\n                delete thisRound.SGS;\r\n                return (\r\n                    <RoundForm\r\n                        mode={this.props.mode}\r\n                        startData={thisRound} \r\n                        saveRound={this.editRound} />\r\n                );\r\n        }\r\n    }\r\n\r\n}   \r\n\r\nexport default Rounds;\r\n","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass RatesModal extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n                      id: \"\"\r\n                   };\r\n        }\r\n\r\n        // Get information of the course that was selected on render\r\n        componentDidMount(){\r\n            this.getSearchedCourse(this.props.course);\r\n        }\r\n\r\n        // Get information of the course that was selected to show rates information\r\n        getSearchedCourse = async (id) => {\r\n            const url = '/courses/'+id;\r\n            fetch(url)\r\n            .then((response) => {\r\n                if (response.status == 200)\r\n                    return response.json();\r\n                else\r\n                {\r\n                    throw Error(response.statusText);\r\n                }\r\n            })\r\n            .then((obj) => \r\n            {\r\n                console.log(\"GET RATES SUCCESS!\");\r\n                let thisCourse = JSON.parse(obj);\r\n                this.setState({\r\n                    courseName: thisCourse.courseName,\r\n                    id: thisCourse.id,\r\n                    course: (\r\n                        <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                            <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                            <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                            <Card.Body>\r\n                                <Card.Title>Location: {thisCourse.location}</Card.Title>\r\n                                <Card.Text>RATES: ALL WEEK</Card.Text>\r\n                                <Card.Text>STANDARD: ${thisCourse.rateStandard}</Card.Text>\r\n                                <Card.Text>SENIOR: ${thisCourse.rateSenior}</Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer>Rates and policies are subject to change without notice.</Card.Footer>\r\n                            </Card>\r\n                        </Col>\r\n                    )\r\n                });\r\n            }).catch((error) =>{\r\n                console.log(error);\r\n            });\r\n        }\r\n\r\nrender() {\r\n    return (\r\n        <div id=\"ratesModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n            <h3>{this.state.courseName}</h3>\r\n                <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <center>\r\n            <div className=\"modal-body\">\r\n                <Container fluid={true}>\r\n                    <Row noGutters>\r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n                </center>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.handleClose}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default RatesModal;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\nimport { async } from 'regenerator-runtime';\r\n\r\nclass MoreModal extends React.Component {\r\n\r\nconstructor(){\r\n    super();\r\n    this.state={\r\n        id: \"\",\r\n        reviewClicked: false,\r\n        review: \"\",\r\n        rating: \"\"\r\n    };\r\n}\r\n\r\n// Get information on the course that was selected on render\r\ncomponentDidMount(){\r\n    this.getSearchedCourse(this.props.course);\r\n}\r\n\r\ntoggleReviewClicked = () =>{\r\n    this.setState(state =>({reviewClicked: !state.reviewClicked}));\r\n}\r\n\r\n// Get information of course selected to show more information\r\n// Also save the course information, for PUT request, in case user wants to edit\r\ngetSearchedCourse = async (id) => {\r\n    const url = '/courses/'+id;\r\n    fetch(url)\r\n    .then((response) => {\r\n        if (response.status == 200)\r\n            return response.json();\r\n        else\r\n        {\r\n            this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n            throw Error(response.statusText);\r\n        }\r\n    })\r\n    .then((obj) => \r\n    {\r\n        console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n        let thisCourse = JSON.parse(obj);\r\n        this.setState({\r\n            courseName: thisCourse.courseName,\r\n            id: thisCourse.id,\r\n            rating: thisCourse.rating,\r\n            review: thisCourse.review,\r\n            picture: thisCourse.picture,\r\n            location: thisCourse.location,\r\n            yardage: thisCourse.yardage,\r\n            runningDistance: thisCourse.runningDistance,\r\n            timePar: thisCourse.timePar,\r\n            bestScore: thisCourse.bestScore,\r\n            recordHolder: thisCourse.recordHolder,\r\n            rateSenior: thisCourse.rateSenior,\r\n            rateStandard: thisCourse.rateStandard,\r\n            availability: thisCourse.availability,\r\n            course: (\r\n                <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                    <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                    <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                    <Card.Body>\r\n                        <Card.Title>Location: {thisCourse.location}</Card.Title>\r\n                        <Card.Text>Yardage: {thisCourse.yardage}</Card.Text>\r\n                        <Card.Text>Running Distance: {thisCourse.runningDistance}</Card.Text>\r\n                        <Card.Text>Time Par: {thisCourse.timePar}</Card.Text>\r\n                        <Card.Text>Best Score: {thisCourse.bestScore}</Card.Text>\r\n                        <Card.Text>Record Holder: {thisCourse.recordHolder}</Card.Text>\r\n                    </Card.Body>\r\n                    <Card.Footer>Rating: {thisCourse.rating}<br></br>Review: {thisCourse.review}</Card.Footer>\r\n                    <Button onClick={this.toggleReviewClicked}>Leave A Review:</Button>\r\n                    </Card>\r\n                </Col>\r\n            )\r\n        });\r\n    }).catch((error) =>{\r\n        console.log(error);\r\n    });\r\n}\r\n\r\n// Sends a PUT request to the backend to edit a course in the courses schema\r\neditCourse = async (newData) =>{\r\n    const url = '/courses/' + this.state.id;\r\n    const res = await fetch(url, {\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n            },\r\n        method: 'PUT',\r\n        body: JSON.stringify(newData)}); \r\n    const msg = await res.text();\r\n    console.log(msg);\r\n    if (res.status === 200) {\r\n        this.toggleReviewClicked();\r\n        this.props.handleClose();\r\n        window.location.reload(false);\r\n    } else {\r\n        alert(msg);\r\n    }\r\n}\r\n\r\n// Save the new information that were changed then call editCourse(newInformation) to update the backend\r\nhandleSubmit = (event) =>{\r\n    event.preventDefault();\r\n    let newData = {\r\n        courseName: this.state.courseName,\r\n        id: this.state.id,\r\n        rating: this.state.rating,\r\n        review: this.state.review,\r\n        picture: this.state.picture,\r\n        location: this.state.location,\r\n        yardage: this.state.yardage,\r\n        runningDistance: this.state.runningDistance,\r\n        timePar: this.state.timePar,\r\n        bestScore: this.state.bestScore,\r\n        recordHolder: this.state.recordHolder,\r\n        rateSenior: this.state.rateSenior,\r\n        rateStandard: this.state.rateStandard,\r\n        availability: this.state.availability\r\n    }\r\n    this.editCourse(newData);\r\n\r\n}\r\n\r\nhandleChange = (event) => {\r\n    this.setState({[event.target.name]: event.target.value});\r\n}\r\n\r\nrender() {\r\n    return (\r\n        <div id=\"moreModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>{this.state.courseName}</h3>\r\n                <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            {this.state.reviewClicked ? \r\n                <div className=\"modal\" role=\"dialog\">\r\n                <div className=\"modal-dialog modal-lg\">\r\n                    <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>Leaving A Review</h3>\r\n                        <button className=\"modal-close\" onClick={this.toggleReviewClicked}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                <div className=\"modal-body\">\r\n                    <form onSubmit={this.handleSubmit}>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>\r\n                        <label>Rating:\r\n                        <select name=\"rating\" value={this.state.rating} \r\n                        className=\"form-control form-center\" onChange={this.handleChange}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                        </select> \r\n                        </label>\r\n                        <p></p>\r\n                        <label>Review:\r\n                        <textarea name=\"review\" className=\"form-control\" rows=\"6\" cols=\"75\" \r\n                            placeholder=\"Enter round notes\" value={this.state.review} \r\n                            onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <Button type=\"submit\">Submit Review</Button>\r\n                        </Row>\r\n                    </Container>\r\n                    </form>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                    <button className=\"btn btn-primary btn-color-theme\"\r\n                    onClick={this.toggleReviewClicked}>OK</button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            :null}\r\n            <div className=\"modal-body\">\r\n                <Container fluid={true}>\r\n                    <Row noGutters>\r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            {/* <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.handleClose}>OK</button>\r\n            </div> */}\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default MoreModal;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\n// For setting min and max value of <input type=\"date\">\r\nlet today = new Date(Date.now()-(new Date()).getTimezoneOffset()*60000);\r\nlet tomorrow = new Date(today);\r\ntomorrow.setDate(tomorrow.getDate() + 1);\r\nlet thirdDay = new Date(tomorrow);\r\nthirdDay.setDate(thirdDay.getDate() + 1);\r\nlet fourthDay = new Date(thirdDay);\r\nfourthDay.setDate(fourthDay.getDate() + 1);\r\nlet fifthDay = new Date(fourthDay);\r\nfifthDay.setDate(fifthDay.getDate() + 1);\r\nlet sixthDay = new Date(fifthDay);\r\nsixthDay.setDate(sixthDay.getDate() + 1);\r\nlet seventhDay = new Date(sixthDay);\r\nseventhDay.setDate(seventhDay.getDate() + 1);\r\n\r\nlet day1 = today.toISOString().substring(0,10);\r\nlet day2 = tomorrow.toISOString().substring(0,10);\r\nlet day3 = thirdDay.toISOString().substring(0,10);\r\nlet day4 = fourthDay.toISOString().substring(0,10);\r\nlet day5 = fifthDay.toISOString().substring(0,10);\r\nlet day6 = sixthDay.toISOString().substring(0,10);\r\nlet day7 = seventhDay.toISOString().substring(0,10);\r\n\r\n\r\nclass BookingPage extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            courseName: this.props.course,\r\n            bookingTime: '',\r\n            bookingDate: day1,\r\n            course: '',\r\n            setTeeTimeClick: false,\r\n            teeTime: [], \r\n            nine: false,\r\n            ten: false,\r\n            eleven: false,\r\n            twelve: false,\r\n            one: false,\r\n            two: false,\r\n            three: false,\r\n            four: false,\r\n            five: false,\r\n            setTimeAvailDate: day1\r\n        }\r\n    }\r\n\r\n    // Get information on selected course on render\r\n    componentDidMount(){\r\n        this.getSearchedCourse(this.props.course);\r\n        this.getAllAppointments();\r\n    }\r\n\r\n    toggleSetTeeTimeClicked = () => {\r\n        this.setState(state => ({setTeeTimeClick: !state.setTeeTimeClick}));\r\n        console.log(this.state.setTeeTimeClick);\r\n        if(!this.state.setTeeTimeClick)\r\n        {\r\n            document.getElementById(\"bookingTeeTimeForm\").setAttribute(\"hidden\",true); \r\n        }\r\n        else\r\n        {\r\n            document.getElementById(\"bookingTeeTimeForm\").removeAttribute(\"hidden\"); \r\n        }\r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getAllAppointments = async () => {\r\n        const url = '/allappointments_op/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                appointments: thisCourse.map((c) =>(\r\n                    {\r\n                        username: c.username,\r\n                        courseName: c.courseName,\r\n                        date: c.date,\r\n                        time: c.time\r\n                    }\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    // Get information on selected course then set it to a state for usage in this component\r\n    getSearchedCourse = async (id) => {\r\n        const url = '/courses/'+id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: thisCourse\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    // Checks for the date and time that were requested for booking\r\n    // Then prepare data to send to the database\r\n    // by calling editCourse(newData)\r\n    handleBookTeeTime = (event) => {\r\n        event.preventDefault();\r\n        console.log(\"Booking tee time\");\r\n\r\n        let newappt = {\r\n            userId: this.props.userObj.id,\r\n            username: this.props.userObj.displayName,\r\n            courseName: this.props.courseName,\r\n            date: this.state.bookingDate,\r\n            time: this.state.bookingTime,\r\n            paid: \"false\"\r\n        }\r\n\r\n        console.log(this.state.course.availability);\r\n        this.bruhFunction();\r\n        let updateCourse = {\r\n            id: this.state.course.id,\r\n            rating: this.state.course.rating,\r\n            review: this.state.course.review,\r\n            picture: this.state.course.picture,\r\n            location: this.state.course.location,\r\n            yardage: this.state.course.yardage,\r\n            runningDistance: this.state.course.runningDistance,\r\n            timePar: this.state.course.timePar,\r\n            bestScore: this.state.course.bestScore,\r\n            recordHolder: this.state.course.recordHolder,\r\n            rateSenior: this.state.course.rateSenior,\r\n            rateStandard: this.state.course.rateStandard,\r\n            courseName: this.state.course.courseName,\r\n            availability: this.state.course.availability\r\n        }\r\n        console.log(this.state.course.availability);\r\n\r\n        this.editCourse(updateCourse);\r\n        this.addAppointment(newappt);\r\n        this.addAppointment_op(newappt);\r\n        alert(\"Tee Time Booked!\");\r\n        this.props.handleClose();\r\n    }\r\n\r\n    // Sends a PUT request to the backend with the new information\r\n    // new information here is the appointments that were scheduled\r\n    addAppointment_op = async (newData) =>{\r\n        const url = '/appointments_op/';\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            if (this.props.mode === AppMode.COURSES)\r\n                this.props.refreshOnUpdate(AppMode.COURSES);\r\n            else \r\n                this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        }\r\n    }\r\n\r\n    // Sends a PUT request to the backend with the new information\r\n    // new information here is the appointments that were scheduled\r\n    addAppointment = async (newData) =>{\r\n        const url = '/appointments/' + this.props.userObj.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            if (this.props.mode === AppMode.COURSES)\r\n                this.props.refreshOnUpdate(AppMode.COURSES);\r\n            else \r\n                this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        }\r\n    }\r\n\r\n    // Sends a PUT request to the backend with the new information\r\n    // new information here is the appointments that were scheduled\r\n    editCourse = async (newData) =>{\r\n        const url = '/courses/' + this.props.course;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            alert(\"Tee Time Booked!\");\r\n            if (this.props.mode === AppMode.COURSES)\r\n                this.props.refreshOnUpdate(AppMode.COURSES);\r\n            else \r\n                this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_ALL);\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    // Handles enabling/disabling the time slots option on each date\r\n    // depending on the state of the appointments.day.time\r\n    handleClick = () =>{\r\n        document.getElementById(\"9:00 AM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"10:00 AM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"11:00 AM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"12:00 PM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"1:00 PM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"2:00 PM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"3:00 PM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"4:00 PM\").setAttribute(\"hidden\",true);\r\n        document.getElementById(\"5:00 PM\").setAttribute(\"hidden\",true);\r\n\r\n        console.log(this.state.course.availability);\r\n\r\n        switch (this.state.bookingDate){\r\n            case day1:\r\n                for (var i = 0; i < this.state.course.availability.day1.length; i++)\r\n                {\r\n                    if (this.state.course.availability.day1[i])\r\n                    {\r\n                        switch (i){\r\n                            case 0:\r\n                                document.getElementById(\"9:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 1:\r\n                                document.getElementById(\"10:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 2:\r\n                                document.getElementById(\"11:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 3:\r\n                                document.getElementById(\"12:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 4:\r\n                                document.getElementById(\"1:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 5:\r\n                                document.getElementById(\"2:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 6:\r\n                                document.getElementById(\"3:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 7:\r\n                                document.getElementById(\"4:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 8:\r\n                                document.getElementById(\"5:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case day2:\r\n                for (var i = 0; i < this.state.course.availability.day2.length; i++)\r\n                {\r\n                    if (this.state.course.availability.day2[i])\r\n                    {\r\n                        switch (i){\r\n                            case 0:\r\n                                document.getElementById(\"9:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 1:\r\n                                document.getElementById(\"10:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 2:\r\n                                document.getElementById(\"11:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 3:\r\n                                document.getElementById(\"12:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 4:\r\n                                document.getElementById(\"1:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 5:\r\n                                document.getElementById(\"2:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 6:\r\n                                document.getElementById(\"3:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 7:\r\n                                document.getElementById(\"4:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 8:\r\n                                document.getElementById(\"5:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case day3:\r\n                for (var i = 0; i < this.state.course.availability.day3.length; i++)\r\n                {\r\n                    if (this.state.course.availability.day3[i])\r\n                    {\r\n                        switch (i){\r\n                            case 0:\r\n                                document.getElementById(\"9:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 1:\r\n                                document.getElementById(\"10:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 2:\r\n                                document.getElementById(\"11:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 3:\r\n                                document.getElementById(\"12:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 4:\r\n                                document.getElementById(\"1:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 5:\r\n                                document.getElementById(\"2:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 6:\r\n                                document.getElementById(\"3:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 7:\r\n                                document.getElementById(\"4:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 8:\r\n                                document.getElementById(\"5:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case day4:\r\n                for (var i = 0; i < this.state.course.availability.day4.length; i++)\r\n                {\r\n                    if (this.state.course.availability.day4[i])\r\n                    {\r\n                        switch (i){\r\n                            case 0:\r\n                                document.getElementById(\"9:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 1:\r\n                                document.getElementById(\"10:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 2:\r\n                                document.getElementById(\"11:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 3:\r\n                                document.getElementById(\"12:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 4:\r\n                                document.getElementById(\"1:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 5:\r\n                                document.getElementById(\"2:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 6:\r\n                                document.getElementById(\"3:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 7:\r\n                                document.getElementById(\"4:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 8:\r\n                                document.getElementById(\"5:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case day5:\r\n                for (var i = 0; i < this.state.course.availability.day5.length; i++)\r\n                {\r\n                    if (this.state.course.availability.day5[i])\r\n                    {\r\n                        switch (i){\r\n                            case 0:\r\n                                document.getElementById(\"9:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 1:\r\n                                document.getElementById(\"10:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 2:\r\n                                document.getElementById(\"11:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 3:\r\n                                document.getElementById(\"12:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 4:\r\n                                document.getElementById(\"1:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 5:\r\n                                document.getElementById(\"2:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 6:\r\n                                document.getElementById(\"3:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 7:\r\n                                document.getElementById(\"4:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 8:\r\n                                document.getElementById(\"5:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case day6:\r\n                for (var i = 0; i < this.state.course.availability.day6.length; i++)\r\n                {\r\n                    if (this.state.course.availability.day6[i])\r\n                    {\r\n                        switch (i){\r\n                            case 0:\r\n                                document.getElementById(\"9:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 1:\r\n                                document.getElementById(\"10:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 2:\r\n                                document.getElementById(\"11:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 3:\r\n                                document.getElementById(\"12:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 4:\r\n                                document.getElementById(\"1:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 5:\r\n                                document.getElementById(\"2:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 6:\r\n                                document.getElementById(\"3:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 7:\r\n                                document.getElementById(\"4:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 8:\r\n                                document.getElementById(\"5:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n            case day7:\r\n                for (var i = 0; i < this.state.course.availability.day7.length; i++)\r\n                {\r\n                    if (this.state.course.availability.day7[i])\r\n                    {\r\n                        switch (i){\r\n                            case 0:\r\n                                document.getElementById(\"9:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 1:\r\n                                document.getElementById(\"10:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 2:\r\n                                document.getElementById(\"11:00 AM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 3:\r\n                                document.getElementById(\"12:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 4:\r\n                                document.getElementById(\"1:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 5:\r\n                                document.getElementById(\"2:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 6:\r\n                                document.getElementById(\"3:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 7:\r\n                                document.getElementById(\"4:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                            case 8:\r\n                                document.getElementById(\"5:00 PM\").removeAttribute(\"hidden\");\r\n                                break;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    bruhFunction = () => {\r\n        switch (this.state.bookingDate){\r\n            case day1:\r\n                if (this.state.bookingTime === \"9:00 AM\")\r\n                {\r\n                    this.state.course.availability.day1[0] = false;\r\n                }\r\n                if (this.state.bookingTime === \"10:00 AM\")\r\n                {\r\n                    this.state.course.availability.day1[1] = false;\r\n                }\r\n                if (this.state.bookingTime === \"11:00 AM\")\r\n                {\r\n                    this.state.course.availability.day1[2] = false;\r\n                }\r\n                if (this.state.bookingTime === \"12:00 PM\")\r\n                {\r\n                    this.state.course.availability.day1[3] = false;\r\n                }\r\n                if (this.state.bookingTime === \"1:00 PM\")\r\n                {\r\n                    this.state.course.availability.day1[4] = false;\r\n                }\r\n                if (this.state.bookingTime === \"2:00 PM\")\r\n                {\r\n                    this.state.course.availability.day1[5] = false;\r\n                }\r\n                if (this.state.bookingTime === \"3:00 PM\")\r\n                {\r\n                    this.state.course.availability.day1[6] = false;\r\n                }\r\n                if (this.state.bookingTime === \"4:00 PM\")\r\n                {\r\n                    this.state.course.availability.day1[7] = false;\r\n                }\r\n                if (this.state.bookingTime === \"5:00 PM\")\r\n                {\r\n                    this.state.course.availability.day1[8] = false;\r\n                }\r\n                break;\r\n            case day2:\r\n                if (this.state.bookingTime === \"9:00 AM\")\r\n                {\r\n                    this.state.course.availability.day2[0] = false;\r\n                }\r\n                if (this.state.bookingTime === \"10:00 AM\")\r\n                {\r\n                    this.state.course.availability.day2[1] = false;\r\n                }\r\n                if (this.state.bookingTime === \"11:00 AM\")\r\n                {\r\n                    this.state.course.availability.day2[2] = false;\r\n                }\r\n                if (this.state.bookingTime === \"12:00 PM\")\r\n                {\r\n                    this.state.course.availability.day2[3] = false;\r\n                }\r\n                if (this.state.bookingTime === \"1:00 PM\")\r\n                {\r\n                    this.state.course.availability.day2[4] = false;\r\n                }\r\n                if (this.state.bookingTime === \"2:00 PM\")\r\n                {\r\n                    this.state.course.availability.day2[5] = false;\r\n                }\r\n                if (this.state.bookingTime === \"3:00 PM\")\r\n                {\r\n                    this.state.course.availability.day2[6] = false;\r\n                }\r\n                if (this.state.bookingTime === \"4:00 PM\")\r\n                {\r\n                    this.state.course.availability.day2[7] = false;\r\n                }\r\n                if (this.state.bookingTime === \"5:00 PM\")\r\n                {\r\n                    this.state.course.availability.day2[8] = false;\r\n                }\r\n                break;\r\n            case day3:\r\n                if (this.state.bookingTime === \"9:00 AM\")\r\n                {\r\n                    this.state.course.availability.day3[0] = false;\r\n                }\r\n                if (this.state.bookingTime === \"10:00 AM\")\r\n                {\r\n                    this.state.course.availability.day3[1] = false;\r\n                }\r\n                if (this.state.bookingTime === \"11:00 AM\")\r\n                {\r\n                    this.state.course.availability.day3[2] = false;\r\n                }\r\n                if (this.state.bookingTime === \"12:00 PM\")\r\n                {\r\n                    this.state.course.availability.day3[3] = false;\r\n                }\r\n                if (this.state.bookingTime === \"1:00 PM\")\r\n                {\r\n                    this.state.course.availability.day3[4] = false;\r\n                }\r\n                if (this.state.bookingTime === \"2:00 PM\")\r\n                {\r\n                    this.state.course.availability.day3[5] = false;\r\n                }\r\n                if (this.state.bookingTime === \"3:00 PM\")\r\n                {\r\n                    this.state.course.availability.day3[6] = false;\r\n                }\r\n                if (this.state.bookingTime === \"4:00 PM\")\r\n                {\r\n                    this.state.course.availability.day3[7] = false;\r\n                }\r\n                if (this.state.bookingTime === \"5:00 PM\")\r\n                {\r\n                    this.state.course.availability.day3[8] = false;\r\n                }\r\n                break;\r\n            case day4:\r\n                if (this.state.bookingTime === \"9:00 AM\")\r\n                {\r\n                    this.state.course.availability.day4[0] = false;\r\n                }\r\n                if (this.state.bookingTime === \"10:00 AM\")\r\n                {\r\n                    this.state.course.availability.day4[1] = false;\r\n                }\r\n                if (this.state.bookingTime === \"11:00 AM\")\r\n                {\r\n                    this.state.course.availability.day4[2] = false;\r\n                }\r\n                if (this.state.bookingTime === \"12:00 PM\")\r\n                {\r\n                    this.state.course.availability.day4[3] = false;\r\n                }\r\n                if (this.state.bookingTime === \"1:00 PM\")\r\n                {\r\n                    this.state.course.availability.day4[4] = false;\r\n                }\r\n                if (this.state.bookingTime === \"2:00 PM\")\r\n                {\r\n                    this.state.course.availability.day4[5] = false;\r\n                }\r\n                if (this.state.bookingTime === \"3:00 PM\")\r\n                {\r\n                    this.state.course.availability.day4[6] = false;\r\n                }\r\n                if (this.state.bookingTime === \"4:00 PM\")\r\n                {\r\n                    this.state.course.availability.day4[7] = false;\r\n                }\r\n                if (this.state.bookingTime === \"5:00 PM\")\r\n                {\r\n                    this.state.course.availability.day4[8] = false;\r\n                }\r\n                break;\r\n            case day5:\r\n                if (this.state.bookingTime === \"9:00 AM\")\r\n                {\r\n                    this.state.course.availability.day5[0] = false;\r\n                }\r\n                if (this.state.bookingTime === \"10:00 AM\")\r\n                {\r\n                    this.state.course.availability.day5[1] = false;\r\n                }\r\n                if (this.state.bookingTime === \"11:00 AM\")\r\n                {\r\n                    this.state.course.availability.day5[2] = false;\r\n                }\r\n                if (this.state.bookingTime === \"12:00 PM\")\r\n                {\r\n                    this.state.course.availability.day5[3] = false;\r\n                }\r\n                if (this.state.bookingTime === \"1:00 PM\")\r\n                {\r\n                    this.state.course.availability.day5[4] = false;\r\n                }\r\n                if (this.state.bookingTime === \"2:00 PM\")\r\n                {\r\n                    this.state.course.availability.day5[5] = false;\r\n                }\r\n                if (this.state.bookingTime === \"3:00 PM\")\r\n                {\r\n                    this.state.course.availability.day5[6] = false;\r\n                }\r\n                if (this.state.bookingTime === \"4:00 PM\")\r\n                {\r\n                    this.state.course.availability.day5[7] = false;\r\n                }\r\n                if (this.state.bookingTime === \"5:00 PM\")\r\n                {\r\n                    this.state.course.availability.day5[8] = false;\r\n                }\r\n                break;\r\n            case day6:\r\n                if (this.state.bookingTime === \"9:00 AM\")\r\n                {\r\n                    this.state.course.availability.day6[0] = false;\r\n                }\r\n                if (this.state.bookingTime === \"10:00 AM\")\r\n                {\r\n                    this.state.course.availability.day6[1] = false;\r\n                }\r\n                if (this.state.bookingTime === \"11:00 AM\")\r\n                {\r\n                    this.state.course.availability.day6[2] = false;\r\n                }\r\n                if (this.state.bookingTime === \"12:00 PM\")\r\n                {\r\n                    this.state.course.availability.day6[3] = false;\r\n                }\r\n                if (this.state.bookingTime === \"1:00 PM\")\r\n                {\r\n                    this.state.course.availability.day6[4] = false;\r\n                }\r\n                if (this.state.bookingTime === \"2:00 PM\")\r\n                {\r\n                    this.state.course.availability.day6[5] = false;\r\n                }\r\n                if (this.state.bookingTime === \"3:00 PM\")\r\n                {\r\n                    this.state.course.availability.day6[6] = false;\r\n                }\r\n                if (this.state.bookingTime === \"4:00 PM\")\r\n                {\r\n                    this.state.course.availability.day6[7] = false;\r\n                }\r\n                if (this.state.bookingTime === \"5:00 PM\")\r\n                {\r\n                    this.state.course.availability.day6[8] = false;\r\n                }\r\n                break;\r\n            case day7:\r\n                if (this.state.bookingTime === \"9:00 AM\")\r\n                {\r\n                    this.state.course.availability.day7[0] = false;\r\n                }\r\n                if (this.state.bookingTime === \"10:00 AM\")\r\n                {\r\n                    this.state.course.availability.day7[1] = false;\r\n                }\r\n                if (this.state.bookingTime === \"11:00 AM\")\r\n                {\r\n                    this.state.course.availability.day7[2] = false;\r\n                }\r\n                if (this.state.bookingTime === \"12:00 PM\")\r\n                {\r\n                    this.state.course.availability.day7[3] = false;\r\n                }\r\n                if (this.state.bookingTime === \"1:00 PM\")\r\n                {\r\n                    this.state.course.availability.day7[4] = false;\r\n                }\r\n                if (this.state.bookingTime === \"2:00 PM\")\r\n                {\r\n                    this.state.course.availability.day7[5] = false;\r\n                }\r\n                if (this.state.bookingTime === \"3:00 PM\")\r\n                {\r\n                    this.state.course.availability.day7[6] = false;\r\n                }\r\n                if (this.state.bookingTime === \"4:00 PM\")\r\n                {\r\n                    this.state.course.availability.day7[7] = false;\r\n                }\r\n                if (this.state.bookingTime === \"5:00 PM\")\r\n                {\r\n                    this.state.course.availability.day7[8] = false;\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    handleSetTeeTime = (e) => {\r\n        e.preventDefault();\r\n\r\n        switch (this.state.setTimeAvailDate){\r\n            case day1:\r\n                if (this.state.nine)\r\n                {\r\n                    this.state.course.availability.day1[0] = true;\r\n                }\r\n                if (this.state.ten)\r\n                {\r\n                    this.state.course.availability.day1[1] = true;\r\n                }\r\n                if (this.state.eleven)\r\n                {\r\n                    this.state.course.availability.day1[2] = true;\r\n                }\r\n                if (this.state.twelve)\r\n                {\r\n                    this.state.course.availability.day1[3] = true;\r\n                }\r\n                if (this.state.one)\r\n                {\r\n                    this.state.course.availability.day1[4] = true;\r\n                }\r\n                if (this.state.two)\r\n                {\r\n                    this.state.course.availability.day1[5] = true;\r\n                }\r\n                if (this.state.three)\r\n                {\r\n                    this.state.course.availability.day1[6] = true;\r\n                }\r\n                if (this.state.four)\r\n                {\r\n                    this.state.course.availability.day1[7] = true;\r\n                }\r\n                if (this.state.five)\r\n                {\r\n                    this.state.course.availability.day1[8] = true;\r\n                }\r\n                break;\r\n            case day2:\r\n                if (this.state.nine)\r\n                {\r\n                    this.state.course.availability.day2[0] = true;\r\n                }\r\n                if (this.state.ten)\r\n                {\r\n                    this.state.course.availability.day2[1] = true;\r\n                }\r\n                if (this.state.eleven)\r\n                {\r\n                    this.state.course.availability.day2[2] = true;\r\n                }\r\n                if (this.state.twelve)\r\n                {\r\n                    this.state.course.availability.day2[3] = true;\r\n                }\r\n                if (this.state.one)\r\n                {\r\n                    this.state.course.availability.day2[4] = true;\r\n                }\r\n                if (this.state.two)\r\n                {\r\n                    this.state.course.availability.day2[5] = true;\r\n                }\r\n                if (this.state.three)\r\n                {\r\n                    this.state.course.availability.day2[6] = true;\r\n                }\r\n                if (this.state.four)\r\n                {\r\n                    this.state.course.availability.day2[7] = true;\r\n                }\r\n                if (this.state.five)\r\n                {\r\n                    this.state.course.availability.day2[8] = true;\r\n                }\r\n                break;\r\n            case day3:\r\n                if (this.state.nine)\r\n                {\r\n                    this.state.course.availability.day3[0] = true;\r\n                }\r\n                if (this.state.ten)\r\n                {\r\n                    this.state.course.availability.day3[1] = true;\r\n                }\r\n                if (this.state.eleven)\r\n                {\r\n                    this.state.course.availability.day3[2] = true;\r\n                }\r\n                if (this.state.twelve)\r\n                {\r\n                    this.state.course.availability.day3[3] = true;\r\n                }\r\n                if (this.state.one)\r\n                {\r\n                    this.state.course.availability.day3[4] = true;\r\n                }\r\n                if (this.state.two)\r\n                {\r\n                    this.state.course.availability.day3[5] = true;\r\n                }\r\n                if (this.state.three)\r\n                {\r\n                    this.state.course.availability.day3[6] = true;\r\n                }\r\n                if (this.state.four)\r\n                {\r\n                    this.state.course.availability.day3[7] = true;\r\n                }\r\n                if (this.state.five)\r\n                {\r\n                    this.state.course.availability.day3[8] = true;\r\n                }\r\n                break;\r\n            case day4:\r\n                if (this.state.nine)\r\n                {\r\n                    this.state.course.availability.day4[0] = true;\r\n                }\r\n                if (this.state.ten)\r\n                {\r\n                    this.state.course.availability.day4[1] = true;\r\n                }\r\n                if (this.state.eleven)\r\n                {\r\n                    this.state.course.availability.day4[2] = true;\r\n                }\r\n                if (this.state.twelve)\r\n                {\r\n                    this.state.course.availability.day4[3] = true;\r\n                }\r\n                if (this.state.one)\r\n                {\r\n                    this.state.course.availability.day4[4] = true;\r\n                }\r\n                if (this.state.two)\r\n                {\r\n                    this.state.course.availability.day4[5] = true;\r\n                }\r\n                if (this.state.three)\r\n                {\r\n                    this.state.course.availability.day4[6] = true;\r\n                }\r\n                if (this.state.four)\r\n                {\r\n                    this.state.course.availability.day4[7] = true;\r\n                }\r\n                if (this.state.five)\r\n                {\r\n                    this.state.course.availability.day4[8] = true;\r\n                }\r\n                break;\r\n            case day5:\r\n                if (this.state.nine)\r\n                {\r\n                    this.state.course.availability.day5[0] = true;\r\n                }\r\n                if (this.state.ten)\r\n                {\r\n                    this.state.course.availability.day5[1] = true;\r\n                }\r\n                if (this.state.eleven)\r\n                {\r\n                    this.state.course.availability.day5[2] = true;\r\n                }\r\n                if (this.state.twelve)\r\n                {\r\n                    this.state.course.availability.day5[3] = true;\r\n                }\r\n                if (this.state.one)\r\n                {\r\n                    this.state.course.availability.day5[4] = true;\r\n                }\r\n                if (this.state.two)\r\n                {\r\n                    this.state.course.availability.day5[5] = true;\r\n                }\r\n                if (this.state.three)\r\n                {\r\n                    this.state.course.availability.day5[6] = true;\r\n                }\r\n                if (this.state.four)\r\n                {\r\n                    this.state.course.availability.day5[7] = true;\r\n                }\r\n                if (this.state.five)\r\n                {\r\n                    this.state.course.availability.day5[8] = true;\r\n                }\r\n                break;\r\n            case day6:\r\n                if (this.state.nine)\r\n                {\r\n                    this.state.course.availability.day6[0] = true;\r\n                }\r\n                if (this.state.ten)\r\n                {\r\n                    this.state.course.availability.day6[1] = true;\r\n                }\r\n                if (this.state.eleven)\r\n                {\r\n                    this.state.course.availability.day6[2] = true;\r\n                }\r\n                if (this.state.twelve)\r\n                {\r\n                    this.state.course.availability.day6[3] = true;\r\n                }\r\n                if (this.state.one)\r\n                {\r\n                    this.state.course.availability.day6[4] = true;\r\n                }\r\n                if (this.state.two)\r\n                {\r\n                    this.state.course.availability.day6[5] = true;\r\n                }\r\n                if (this.state.three)\r\n                {\r\n                    this.state.course.availability.day6[6] = true;\r\n                }\r\n                if (this.state.four)\r\n                {\r\n                    this.state.course.availability.day6[7] = true;\r\n                }\r\n                if (this.state.five)\r\n                {\r\n                    this.state.course.availability.day6[8] = true;\r\n                }\r\n                break;\r\n            case day7:\r\n                if (this.state.nine)\r\n                {\r\n                    this.state.course.availability.day7[0] = true;\r\n                }\r\n                if (this.state.ten)\r\n                {\r\n                    this.state.course.availability.day7[1] = true;\r\n                }\r\n                if (this.state.eleven)\r\n                {\r\n                    this.state.course.availability.day7[2] = true;\r\n                }\r\n                if (this.state.twelve)\r\n                {\r\n                    this.state.course.availability.day7[3] = true;\r\n                }\r\n                if (this.state.one)\r\n                {\r\n                    this.state.course.availability.day7[4] = true;\r\n                }\r\n                if (this.state.two)\r\n                {\r\n                    this.state.course.availability.day7[5] = true;\r\n                }\r\n                if (this.state.three)\r\n                {\r\n                    this.state.course.availability.day7[6] = true;\r\n                }\r\n                if (this.state.four)\r\n                {\r\n                    this.state.course.availability.day7[7] = true;\r\n                }\r\n                if (this.state.five)\r\n                {\r\n                    this.state.course.availability.day7[8] = true;\r\n                }\r\n                break;\r\n        }\r\n\r\n        let updateCourse = {\r\n            id: this.state.course.id,\r\n            rating: this.state.course.rating,\r\n            review: this.state.course.review,\r\n            picture: this.state.course.picture,\r\n            location: this.state.course.location,\r\n            yardage: this.state.course.yardage,\r\n            runningDistance: this.state.course.runningDistance,\r\n            timePar: this.state.course.timePar,\r\n            bestScore: this.state.course.bestScore,\r\n            recordHolder: this.state.course.recordHolder,\r\n            rateSenior: this.state.course.rateSenior,\r\n            rateStandard: this.state.course.rateStandard,\r\n            courseName: this.state.course.courseName,\r\n            availability: this.state.course.availability\r\n        }\r\n\r\n        console.log(updateCourse);\r\n\r\n        this.editCourse(updateCourse);\r\n        document.getElementById(\"bookingTeeTimeForm\").removeAttribute(\"hidden\"); \r\n        this.props.handleClose();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"bookingPage\" className=\"modal\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                    <h3>Booking Tee Time</h3>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                    {this.props.userObj.type === \"operator\" ? \r\n                    <button onClick={this.toggleSetTeeTimeClicked}\r\n                    className=\"btn btn-primary btn-color-theme modal-submit-btn\">Set Tee Time Availability</button> \r\n                    : null}\r\n                    {this.state.setTeeTimeClick ? \r\n                    <form style={{backgroundColor: 'lightgray'}}>\r\n                        <label for=\"setTimeAvailDate\">Date: <br></br>\r\n                            <input type=\"date\" id=\"bookingDate\" name=\"setTimeAvailDate\" min={day1} max={day7} value={this.state.setTimeAvailDate}\r\n                             onChange={(event) => {this.setState({[event.target.name]: event.target.value})}} required></input>\r\n                        </label>\r\n                        <p></p>\r\n                        <input id=\"9:00 AM\" value=\"9:00 AM\" type=\"checkbox\" onChange={() => {this.setState(state => ({nine: !state.nine}))}}></input>&nbsp;9:00 AM<br></br>\r\n                        <input id=\"10:00 AM\" value=\"10:00 AM\" type=\"checkbox\" onChange={() => {this.setState(state => ({ten: !state.ten}))}}></input>&nbsp;10:00 AM<br></br>\r\n                        <input id=\"11:00 AM\" value=\"11:00 AM\" type=\"checkbox\" onChange={() => {this.setState(state => ({eleven: !state.eleven}))}}></input>&nbsp;11:00 AM<br></br>\r\n                        <input id=\"12:00 PM\" value=\"12:00 PM\" type=\"checkbox\" onChange={() => {this.setState(state => ({twelve: !state.twelve}))}}></input>&nbsp;12:00 PM<br></br>\r\n                        <input id=\"1:00 PM\" value=\"1:00 PM\" type=\"checkbox\" onChange={() => {this.setState(state => ({one: !state.one}))}}></input>&nbsp;1:00 PM<br></br>\r\n                        <input id=\"2:00 PM\" value=\"2:00 PM\" type=\"checkbox\" onChange={() => {this.setState(state => ({two: !state.two}))}}></input>&nbsp;2:00 PM<br></br>\r\n                        <input id=\"3:00 PM\" value=\"3:00 PM\" type=\"checkbox\" onChange={() => {this.setState(state => ({three: !state.three}))}}></input>&nbsp;3:00 PM<br></br>\r\n                        <input id=\"4:00 PM\" value=\"4:00 PM\" type=\"checkbox\" onChange={() => {this.setState(state => ({four: !state.four}))}}></input>&nbsp;4:00 PM<br></br>\r\n                        <input id=\"5:00 PM\" value=\"5:00 PM\" type=\"checkbox\" onChange={() => {this.setState(state => ({five: !state.five}))}}></input>&nbsp;5:00 PM<br></br>\r\n                        <button onClick={this.handleSetTeeTime} className=\"btn btn-primary btn-color-theme\">Set</button> \r\n                    </form>\r\n                    : null}\r\n                <div className=\"padded-page\">\r\n                    <form onSubmit={this.handleBookTeeTime} id=\"bookingTeeTimeForm\">\r\n                    <center>\r\n                        <h1>Request Tee Time at {this.state.courseName}</h1><br></br>\r\n                        <label for=\"bookingDate\">Date: <br></br>\r\n                            <input type=\"date\" id=\"bookingDate\" name=\"bookingDate\" min={day1} max={day7} value={this.state.bookingDate} onChange={this.handleChange} required></input>\r\n                        </label>\r\n                        <p></p>\r\n                        <label for=\"bookingTime\">Time: <br></br>\r\n                        <select type=\"date\" id=\"bookingTime\" name=\"bookingTime\" value={this.state.bookingTime} onChange={this.handleChange} onClick={this.handleClick} required>\r\n                            <option></option>\r\n                            <option id=\"9:00 AM\" value=\"9:00 AM\">9:00 AM</option>\r\n                            <option id=\"10:00 AM\" value=\"10:00 AM\">10:00 AM</option>\r\n                            <option id=\"11:00 AM\" value=\"11:00 AM\">11:00 AM</option>\r\n                            <option id=\"12:00 PM\" value=\"12:00 PM\">12:00 PM</option> \r\n                            <option id=\"1:00 PM\" value=\"1:00 PM\">1:00 PM</option>\r\n                            <option id=\"2:00 PM\" value=\"2:00 PM\">2:00 PM</option> \r\n                            <option id=\"3:00 PM\" value=\"3:00 PM\">3:00 PM</option>\r\n                            <option id=\"4:00 PM\" value=\"4:00 PM\">4:00 PM</option>\r\n                            <option id=\"5:00 PM\" value=\"5:00 PM\">5:00 PM</option>    \r\n                        </select>\r\n                        </label>\r\n                        <p></p>\r\n                        <button className=\"btn btn-primary btn-color-theme modal-submit-btn\">Request Tee Time</button>\r\n                        <button onClick={this.props.handleClose} className=\"btn btn-primary btn-color-theme modal-submit-btn\">Cancel</button>\r\n                    </center>\r\n                    </form>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n       \r\n        );\r\n    }   \r\n}\r\n\r\nexport default BookingPage;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '100%',\r\n    height: '100%'\r\n  }\r\n};\r\n\r\nlet pos;\r\nlet map;\r\nlet bounds;\r\nlet infoWindow;\r\nlet currentInfoWindow;\r\nlet service;\r\nlet infoPane;\r\n\r\nexport class CurrentLocation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        const { lat, lng } = this.props.initialCenter;\r\n    \r\n        this.state = {\r\n          currentLocation: {\r\n            lat: lat,\r\n            lng: lng\r\n          }\r\n        };\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.google !== this.props.google) {\r\n          this.loadMap();\r\n        }\r\n        if (prevState.currentLocation !== this.state.currentLocation) {\r\n          this.recenterMap();\r\n        }\r\n    }\r\n\r\n    recenterMap() {\r\n        const map = this.map;\r\n        const current = this.state.currentLocation;\r\n        const google = this.props.google;\r\n        const maps = google.maps;\r\n    \r\n        if (map) {\r\n          let center = new maps.LatLng(current.lat, current.lng);\r\n          map.panTo(center);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n      bounds = new maps.LatLngBounds();\r\n      infoWindow = new maps.InfoWindow;\r\n      currentInfoWindow = infoWindow;\r\n      infoPane = document.getElementById('panel');\r\n\r\n        if (this.props.centerAroundCurrentLocation) {\r\n          if (navigator && navigator.geolocation) {\r\n            navigator.geolocation.getCurrentPosition(pos => {\r\n              const coords = pos.coords;\r\n              this.setState({\r\n                currentLocation: {\r\n                  lat: coords.latitude,\r\n                  lng: coords.longitude\r\n                }\r\n              });\r\n              bounds.extend(this.state.currentLocation);\r\n              infoWindow.setPosition(this.state.currentLocation);\r\n              infoWindow.setContent('Location found.');\r\n              infoWindow.open(this.map);\r\n              this.map.setCenter(this.state.currentLocation);\r\n            });\r\n          }\r\n        }\r\n        this.loadMap();\r\n        this.getNearbyPlaces(this.state.currentLocation);\r\n    }\r\n\r\n    loadMap() {\r\n        if (this.props && this.props.google) {\r\n          // checks if google is available\r\n          const { google } = this.props;\r\n          const maps = google.maps;\r\n    \r\n          const mapRef = this.refs.map;\r\n    \r\n          // reference to the actual DOM element\r\n          const node = ReactDOM.findDOMNode(mapRef);\r\n    \r\n          let { zoom } = this.props;\r\n          const { lat, lng } = this.state.currentLocation;\r\n          const center = new maps.LatLng(lat, lng);\r\n    \r\n          const mapConfig = Object.assign(\r\n            {},\r\n            {\r\n              center: center,\r\n              zoom: zoom\r\n            }\r\n          );\r\n    \r\n          // maps.Map() is constructor that instantiates the map\r\n          this.map = new maps.Map(node, mapConfig);\r\n        }\r\n    }\r\n\r\n  getNearbyPlaces = (position) => {\r\n    const { google } = this.props;\r\n    const maps = google.maps;\r\n    let request = {\r\n      location: position,\r\n      rankBy: maps.places.RankBy.DISTANCE,\r\n      keyword: 'golf'\r\n    };\r\n\r\n    service = new maps.places.PlacesService(this.map);\r\n    service.nearbySearch(request, this.nearbyCallback);\r\n  }\r\n\r\n    // Handle the results (up to 20) of the Nearby Search\r\n    nearbyCallback = (results, status) => {\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n      if (status == maps.places.PlacesServiceStatus.OK) {\r\n        this.createMarkers(results);\r\n      }\r\n    }\r\n\r\n    createMarkers = (places) => {\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n      places.forEach(place => {\r\n        let marker = new maps.Marker({\r\n          position: place.geometry.location,\r\n          map: this.map,\r\n          title: place.name\r\n        });\r\n  \r\n        /* TODO: Step 4B: Add click listeners to the markers */\r\n        // Add click listener to each marker\r\n        maps.event.addListener(marker, 'click', () => {\r\n          let request = {\r\n            placeId: place.place_id,\r\n            fields: ['name', 'formatted_address', 'geometry', 'rating',\r\n              'website', 'photos']\r\n          };\r\n  \r\n          /* Only fetch the details of a place when the user clicks on a marker.\r\n           * If we fetch the details for all place results as soon as we get\r\n           * the search response, we will hit API rate limits. */\r\n          service.getDetails(request, (placeResult, status) => {\r\n            this.showDetails(placeResult, marker, status)\r\n          });\r\n        });\r\n  \r\n        // Adjust the map bounds to include the location of this marker\r\n        bounds.extend(place.geometry.location);\r\n      });\r\n      /* Once all the markers have been placed, adjust the bounds of the map to\r\n       * show all the markers within the visible area. */\r\n      this.map.fitBounds(bounds);\r\n    }\r\n\r\n    showDetails = (placeResult, marker, status) => {\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n      if (status == maps.places.PlacesServiceStatus.OK) {\r\n        let placeInfowindow = new maps.InfoWindow();\r\n        let rating = \"None\";\r\n        if (placeResult.rating) rating = placeResult.rating;\r\n        placeInfowindow.setContent('<div><strong>' + placeResult.name +\r\n          '</strong><br>' + 'Rating: ' + rating + '</div>');\r\n        placeInfowindow.open(marker.map, marker);\r\n        currentInfoWindow.close();\r\n        currentInfoWindow = placeInfowindow;\r\n        this.showPanel(placeResult);\r\n      } else {\r\n        console.log('showDetails failed: ' + status);\r\n      }\r\n    }\r\n\r\n    showPanel = (placeResult) => {\r\n      // If infoPane is already open, close it\r\n      if (infoPane.classList.contains(\"open\")) {\r\n        infoPane.classList.remove(\"open\");\r\n      }\r\n  \r\n      // Clear the previous details\r\n      while (infoPane.lastChild) {\r\n        infoPane.removeChild(infoPane.lastChild);\r\n      }\r\n  \r\n      /* TODO: Step 4E: Display a Place Photo with the Place Details */\r\n      // Add the primary photo, if there is one\r\n      if (placeResult.photos) {\r\n        let firstPhoto = placeResult.photos[0];\r\n        let photo = document.createElement('img');\r\n        photo.classList.add('hero');\r\n        photo.src = firstPhoto.getUrl();\r\n        infoPane.appendChild(photo);\r\n      }\r\n  \r\n      // Add place details with text formatting\r\n      let name = document.createElement('h1');\r\n      name.classList.add('place');\r\n      name.textContent = placeResult.name;\r\n      infoPane.appendChild(name);\r\n      if (placeResult.rating) {\r\n        let rating = document.createElement('p');\r\n        rating.classList.add('details');\r\n        rating.textContent = `Rating: ${placeResult.rating} \\u272e`;\r\n        infoPane.appendChild(rating);\r\n      }\r\n      let address = document.createElement('p');\r\n      address.classList.add('details');\r\n      address.textContent = placeResult.formatted_address;\r\n      infoPane.appendChild(address);\r\n      if (placeResult.website) {\r\n        let websitePara = document.createElement('p');\r\n        let websiteLink = document.createElement('a');\r\n        let websiteUrl = document.createTextNode(placeResult.website);\r\n        websiteLink.appendChild(websiteUrl);\r\n        websiteLink.title = placeResult.website;\r\n        websiteLink.href = placeResult.website;\r\n        websitePara.appendChild(websiteLink);\r\n        infoPane.appendChild(websitePara);\r\n      }\r\n  \r\n      // Open the infoPane\r\n      infoPane.classList.add(\"open\");\r\n    }\r\n\r\n    renderChildren() {\r\n        const { children } = this.props;\r\n    \r\n        if (!children) return;\r\n    \r\n        return React.Children.map(children, c => {\r\n          if (!c) return;\r\n    \r\n          return React.cloneElement(c, {\r\n            map: this.map,\r\n            google: this.props.google,\r\n            mapCenter: this.state.currentLocation\r\n          });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const style = Object.assign({}, mapStyles.map);\r\n    \r\n        return (\r\n          <div id=\"Map\">\r\n            <div style={style} ref=\"map\">\r\n              Loading map...\r\n            </div>\r\n            {/* <!-- The slide-out panel for showing place details --> */}\r\n            <div id=\"panel\"></div>\r\n            {/* <!-- Map appears here --> */}\r\n            <div id=\"map\"></div>\r\n\r\n            {this.renderChildren()}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nCurrentLocation.defaultProps = {\r\n    zoom: 14,\r\n    initialCenter: {\r\n      lat: 46.7482916,\r\n      lng: -117.153158\r\n    },\r\n    centerAroundCurrentLocation: false,\r\n    visible: true\r\n  };\r\n\r\nexport default CurrentLocation;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport { Navbar, Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport RatesModal from \"./RatesModal.js\";\r\nimport MoreModal from \"./MoreModal.js\";\r\nimport BookingPage from \"./BookingPage.js\";\r\n\r\nclass AllCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    \r\n        this.state={\r\n            item: \"\",\r\n            getCourseClicked: false,\r\n            getRatesButtonClicked: false,\r\n            bookTeeTimeClicked: false,\r\n            more: false,\r\n            index: 0,\r\n            cname: ''\r\n        };\r\n    }\r\n\r\n    // Get information of all courses on render\r\n    componentDidMount(){\r\n        this.getCourse();\r\n    }\r\n    \r\n    toggleGetCourseClicked = () => {\r\n        this.setState(state => ({getCourseClicked: !state.getCourseClicked}));\r\n    }\r\n\r\n    toggleMoreClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({more: !state.more}));\r\n    }\r\n\r\n    toggleGetRatesClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({getRatesButtonClicked: !state.getRatesButtonClicked}));\r\n    }\r\n\r\n    toggleBookTeeTimeClicked = (key, i, cn) => {\r\n        this.setState({item: key});\r\n        this.setState({index: i});\r\n        this.setState({cname: cn});\r\n        this.setState(state => ({bookTeeTimeClicked: !state.bookTeeTimeClicked}));\r\n    }\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (key) => {\r\n        const url = '/courses/' + key;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            for (var i = 0; i < this.state.filteredData.length; i++)\r\n            {\r\n                if (this.state.filteredData[i].id === key)\r\n                {\r\n                    this.state.course.splice(i, 1);\r\n                    this.setState({\r\n                        course: this.state.course\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                filteredData: thisCourse,\r\n                course: thisCourse.map((c, index) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>                      \r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{c.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                            {this.setState({item: c.id})}\r\n                            <Button id=\"moreBtn\" type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                            <Button id=\"ratesBtn\" type=\"button\" onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                            <Button id=\"bookingBtn\" type=\"button\" onClick={() => this.toggleBookTeeTimeClicked(c.id, index, c.courseName)}>Book Tee Time</Button>&nbsp;\r\n                            {this.props.userObj.type === \"operator\" ? \r\n                            <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(c.id)}>&times;</Button>\r\n                            : null}\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"allCoursesPage\">\r\n                <h1></h1>\r\n                <table >\r\n                    <tbody>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>                    \r\n                            {this.state.course}\r\n                        </Row>\r\n                    </Container> \r\n                    </tbody>\r\n                </table>\r\n                {this.state.getRatesButtonClicked ? \r\n                    <RatesModal handleClose={this.toggleGetRatesClicked} \r\n                    course={this.state.item} changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.more ? \r\n                    <MoreModal handleClose={this.toggleMoreClicked}\r\n                        course={this.state.item} changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.bookTeeTimeClicked ? \r\n                    <BookingPage handleClose={this.toggleBookTeeTimeClicked} userObj={this.props.userObj} courseName={this.state.cname}\r\n                        course={this.state.item} changeMode={this.props.changeMode} editId={this.state.index}\r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} info={this.props.info}\r\n                    />\r\n                    : null}\r\n            </div>\r\n            );\r\n    }   \r\n}\r\n\r\nexport default AllCourses;","import React from 'react';\r\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport CurrentLocation from './Map';\r\n\r\nclass NearbyCourses extends React.Component {\r\n    \r\n    state = {\r\n        showingInfoWindow: false,  // Hides or shows the InfoWindow\r\n        activeMarker: {},          // Shows the active marker upon click\r\n        selectedPlace: {}          // Shows the InfoWindow to the selected place upon a marker\r\n      };\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n    this.setState({\r\n        selectedPlace: props,\r\n        activeMarker: marker,\r\n        showingInfoWindow: true\r\n    });\r\n\r\n    onClose = (props) => {\r\n    if (this.state.showingInfoWindow) {\r\n        this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n        });\r\n    }\r\n    };\r\n\r\n    render () {\r\n        return (\r\n            <CurrentLocation\r\n              centerAroundCurrentLocation\r\n              google={this.props.google}\r\n            >\r\n              <Marker onClick={this.onMarkerClick} name={'Current Location'} />\r\n              <InfoWindow\r\n                marker={this.state.activeMarker}\r\n                visible={this.state.showingInfoWindow}\r\n                onClose={this.onClose}\r\n              >\r\n                <div>\r\n                  <h4>{this.state.selectedPlace.name}</h4>\r\n                </div>\r\n              </InfoWindow>\r\n            </CurrentLocation>\r\n          );\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: 'AIzaSyAb8KZudhikDhC08rfJ_BgBvM0Fxfpvog8'\r\n  })(NearbyCourses);","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\n\r\nclass AdvancedSearch extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            rating: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            rateStandard: \"\",\r\n            rateSenior: \"\",\r\n            searchType: \"\",\r\n            allCourses: [],\r\n            filteredCourses: []\r\n        };\r\n    }\r\n\r\n    // Get information on all courses at render\r\n    componentDidMount(){\r\n        this.getCourse();\r\n    }\r\n\r\n    // Get information on all courses for searching purposes\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            let table = [];\r\n            for (var i = 0; i < thisCourse.length; i++)\r\n            {\r\n                table.push(thisCourse[i]);\r\n            }\r\n            \r\n            this.setState({allCourses: table});\r\n            // console.log(this.state.allCourses);\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    // Query what to show depending on form that was submitted\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.searchStart();\r\n        let type = this.state.searchType;\r\n        let len = this.state.allCourses.length;\r\n        let c = this.state.allCourses;\r\n        let table = [];\r\n        switch (type){\r\n            case \"rates\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].rateSenior === this.state.rateSenior || c[i].rateStandard === this.state.rateStandard)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"rating\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].rating === this.state.rating)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"yardage\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].yardage === this.state.yardage)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"runningDistance\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].runningDistance === this.state.runningDistance)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n            case \"timePar\":\r\n                for (var i = 0; i < len; i++)\r\n                {\r\n                    if (c[i].timePar === this.state.timePar)\r\n                    {\r\n                        table.push(c[i]);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(table.length);\r\n        this.props.setCourseAmount(table.length);\r\n        this.props.setFilteredData(table);\r\n        this.props.handleClose();\r\n    }\r\n\r\n    // toggling between different forms of advanced search\r\n    handleSwitch = (type) => {\r\n        if (type === \"rates\")\r\n        {\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Standard Rate: $<br></br>\r\n                        <input id=\"rateStandard\" name=\"rateStandard\" placeholder=\"rateStandard\" value={this.state.rateStandard} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Senior Rate: $<br></br>\r\n                        <input id=\"rateSenior\" name=\"rateSenior\" placeholder=\"rateSenior\" value={this.state.rateSenior} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"rating\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Rating:<br></br>\r\n                        <input id=\"rating\" name=\"rating\" placeholder=\"rating\" value={this.state.rating} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p> \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"yardage\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Yardage:<br></br>\r\n                        <input id=\"yardage\" name=\"yardage\"  placeholder=\"yardage\" value={this.state.yardage} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>  \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"runningDistance\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Running Distance:<br></br>\r\n                        <input id=\"runningDistance\" name=\"runningDistance\"  placeholder=\"runningDistance\" value={this.state.runningDistance} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p> \r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n        else if (type === \"timePar\"){\r\n            return (\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                    <label>\r\n                        Time Par:<br></br>\r\n                        <input id=\"timePar\" name=\"timePar\"  placeholder=\"timePar\" value={this.state.timePar} onChange={this.handleChange}></input>\r\n                    </label>\r\n                    <p></p>\r\n                    </center>\r\n                </form>\r\n            );\r\n        }\r\n    }\r\n\r\n    render (){\r\n        return(\r\n        <div id=\"advancedSearchPage\" className=\"modal\" role=\"dialog\">\r\n            <div className=\"modal-dialog modal-lg\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h3>Advanced Search</h3>\r\n                        <button className=\"modal-close\" onClick={this.props.handleClose}>\r\n                            &times;\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form>\r\n                            <label>Search By:&nbsp;\r\n                            <select id=\"searchOptions\" name=\"searchType\" value={this.state.searchType} \r\n                                className=\"form-control form-center\" onChange={this.handleChange}>\r\n                                <option></option>\r\n                                <option value=\"rates\">Rates</option>\r\n                                <option id=\"RATING\" value=\"rating\">Ratings</option>\r\n                                <option value=\"yardage\">Holes Yardage</option>\r\n                                <option value=\"runningDistance\">Running Distance</option>\r\n                                <option value=\"timePar\">Time Pars</option>\r\n                            </select> \r\n                            </label>\r\n                            <p></p>\r\n                        </form>\r\n                        {this.handleSwitch(this.state.searchType)}\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        {this.state.searchType !== \"\" ? \r\n                        <button onClick={this.handleSubmit} id=\"submitBtn\" type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                            className=\"btn btn-primary btn-color-theme\">\r\n                            &nbsp;Submit\r\n                        </button> : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdvancedSearch;","import React from 'react';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { Navbar, Container, Row, Col, Card, Button, Modal } from \"react-bootstrap\";\r\nimport FloatingButton from \"./FloatingButton.js\";\r\nimport RatesModal from \"./RatesModal.js\";\r\nimport MoreModal from \"./MoreModal.js\";\r\nimport BookingPage from \"./BookingPage.js\";\r\nimport AdvancedSearch from \"./AdvancedSearch.js\";\r\n\r\nclass SpecificCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            addCourseClicked: false,\r\n            getCourseClicked: false,\r\n            searchCourseClicked: false,\r\n            searchStart: false,\r\n            getRatesButtonClicked: false,\r\n            bookTeeTimeClicked: false,\r\n            advancedSearchClicked: false,\r\n            more: false,\r\n            selectButtonValue: \"Select Course\",\r\n            courseAmount: 1,\r\n            query: \"\",\r\n            data: [],\r\n            filteredData: [],\r\n            item: \"\",\r\n            cname: '',\r\n            adData: false,\r\n\r\n            id: \"\",\r\n            rating: \"\",\r\n            review: \"\",\r\n            picture: \"\",\r\n            location: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            bestScore: \"\",\r\n            recordHolder: \"\"\r\n        };\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.getCourse();\r\n    }\r\n\r\n    toggleAddCourseClicked = () => {\r\n        this.setState(state => ({addCourseClicked: !state.addCourseClicked}));\r\n    }\r\n\r\n    toggleAdvancedSearchClicked = () => {\r\n        this.setState(state => ({advancedSearchClicked: !state.advancedSearchClicked}));\r\n    }\r\n\r\n    toggleMoreClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({more: !state.more}));\r\n    }\r\n\r\n    toggleGetCourseClicked = () => {\r\n        this.setState(state => ({getCourseClicked: !state.getCourseClicked}));\r\n    }\r\n\r\n    toggleGetRatesClicked = (key) => {\r\n        this.setState({item: key});\r\n        this.setState(state => ({getRatesButtonClicked: !state.getRatesButtonClicked}));\r\n    }\r\n\r\n    toggleBookTeeTimeClicked = (key, cn) => {\r\n        this.setState({item: key});\r\n        this.setState({cname: cn});\r\n        this.setState(state => ({bookTeeTimeClicked: !state.bookTeeTimeClicked}));\r\n    }\r\n\r\n    setSelectButtonValue = (newVal) => {\r\n        this.setState({selectButtonValue : newVal});\r\n    }\r\n\r\n    setSearchTrue = () => {\r\n        this.setState({searchStart : true});\r\n    }\r\n\r\n    setSearchFalse = () => {\r\n        this.setState({searchStart : false});\r\n    }\r\n\r\n    setCourseAmount = (x) => {\r\n        this.setState({courseAmount: x});\r\n    }\r\n\r\n    setSearchCourseClickedTrue = () => {\r\n        this.setState({searchCourseClicked : true});\r\n        this.setSelectButtonValue(\"Clear Selected\");\r\n    }\r\n\r\n    setSearchCourseClickedFalse = () => {\r\n        this.setState({searchCourseClicked : false});\r\n        this.setSelectButtonValue(\"Select Course\");\r\n    }\r\n\r\n    // Show courses that were selected when user searches\r\n    // This functions is to be used by AdvancedSearch\r\n    // Advanced Search will do the query of the courses database \r\n    // with the Advanced information provided\r\n    // then return the courses that matches the information provided\r\n    // this page will then render the return courses\r\n    setFilteredData = (newData) => {\r\n        this.setState({\r\n            fData: newData,\r\n            adData: true,\r\n            course: newData.map((c) =>(\r\n                <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                    <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                    <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                    <Card.Body>\r\n                        <Card.Title>{c.courseName}</Card.Title>\r\n                        <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                        <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                        <Button onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                        <Button onClick={() => this.toggleBookTeeTimeClicked(c.id, c.courseName)}>Book Tee Time</Button>&nbsp;\r\n                        {this.props.userObj.type === \"operator\" ? \r\n                            <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(c.id)}>&times;</Button>\r\n                            : null}\r\n                    </Card.Body>\r\n                    <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                    </Card>\r\n                </Col>\r\n            ))\r\n        });\r\n    }\r\n\r\n    // Handles changing the name of the Select Button to the appropriate values\r\n    handleInputChange = event => {\r\n        const query = event.target.value;\r\n        this.setState(prevState => {\r\n          const filteredData = prevState.data.filter(element => {\r\n            return element.id.toLowerCase().includes(query.toLowerCase());\r\n          });\r\n\r\n          if (query == \"\")\r\n          {\r\n              this.setSearchFalse();\r\n              this.setSelectButtonValue(\"Select Course\");\r\n          }\r\n          else\r\n          {\r\n              this.setSearchTrue();\r\n              this.setSelectButtonValue(\"Select All \"+ filteredData.length +\" Matching Courses\");\r\n              this.setCourseAmount(filteredData.length);\r\n          }\r\n\r\n          return {\r\n            query,\r\n            filteredData\r\n          };\r\n        });\r\n\r\n    };\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (key) => {\r\n        const url = '/courses/' + key;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            if (this.state.courseAmount === 1)\r\n            {\r\n                this.setState({\r\n                    course: '',\r\n                    courseAmount: 0\r\n                });\r\n            }\r\n            else{\r\n                if (this.state.adData)\r\n                {\r\n                    console.log(this.state.fData);\r\n                    for (var i = 0; i < this.state.fData.length; i++)\r\n                    {\r\n                        if (this.state.fData[i].id === key)\r\n                        {\r\n                            this.state.fData.splice(i, 1);\r\n                            this.setState({\r\n                                course: this.state.fData.map((c) =>(\r\n                                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                                        <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                                        <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                                        <Card.Body>\r\n                                            <Card.Title>{c.courseName}</Card.Title>\r\n                                            <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                                            <Button onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                                            <Button onClick={() => this.toggleBookTeeTimeClicked(c.id, c.courseName)}>Book Tee Time</Button>&nbsp;\r\n                                            {this.props.userObj.type === \"operator\" ? \r\n                                                <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(c.id)}>&times;</Button>\r\n                                                : null}\r\n                                        </Card.Body>\r\n                                        <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                                        </Card>\r\n                                    </Col>\r\n                                )),\r\n                                courseAmount: this.state.fData.length\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    for (var i = 0; i < this.state.filteredData.length; i++)\r\n                    {\r\n                        if (this.state.filteredData[i].id === key)\r\n                        {\r\n                            this.state.course.splice(i, 1);\r\n                            this.setState({\r\n                                course: this.state.course,\r\n                                courseAmount: this.state.filteredData.length-1\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Retrieve information for all courses for searching usage\r\n    getCourse = async () => {\r\n        const url = '/allcourses/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET ALL COURSES SUCCESS!\");\r\n            let data = JSON.parse(obj);\r\n            const { query } = this.state;\r\n            const filteredData = data.filter(element => {\r\n              return element.id.toLowerCase().includes(query.toLowerCase());\r\n            });\r\n    \r\n            this.setState({\r\n              data,\r\n              filteredData\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    // Retrieve information of 1 course provided an id\r\n    // This function focuses on when user clicks 1 course from the search dropdown\r\n    // It takes in an 'id' of the clicked course and display its information\r\n    getSearchedCourse = async (id) => {\r\n        this.setSearchCourseClickedTrue();\r\n        this.setSearchFalse();\r\n        this.setCourseAmount(1);\r\n        const url = '/courses/'+id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                this.setErrorMsg(\"ERROR: \" + response.statusText);\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SEARCH COURSES SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: (\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={thisCourse.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={thisCourse.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{thisCourse.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {thisCourse.recordHolder}</Card.Text>\r\n                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(thisCourse.id)}>More</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleGetRatesClicked(thisCourse.id)}>Get Rates</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleBookTeeTimeClicked(thisCourse.id, thisCourse.courseName)}>Book Tee Time</Button>&nbsp;\r\n                            {this.props.userObj.type === \"operator\" ? \r\n                            <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(thisCourse.id)}>&times;</Button>\r\n                            : null}\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {thisCourse.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    // Handle event when user clicks into 1 of the choices provided when searching for a course\r\n    // This function shows courses when the Search Button is clicked\r\n    // The courses showed are the courses that has been filtered with the search input change\r\n    handleClick = (event) =>{\r\n        event.preventDefault();\r\n        if (this.state.selectButtonValue == \"Select Course\")\r\n        {\r\n\r\n        }\r\n        else if (this.state.selectButtonValue == \"Clear Selected\")\r\n        {\r\n            this.setSearchCourseClickedFalse();\r\n            this.setSearchFalse();\r\n            this.setState({query: \"\"});\r\n        }\r\n        else{\r\n            this.setSearchCourseClickedTrue();\r\n            this.setSearchFalse();\r\n            this.setState({\r\n                course: this.state.filteredData.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.id} style={{ width: \"30rem\", display: \"flex\" }}>\r\n                        <Card.Img className=\"course-image\" variant=\"top\" src={c.picture}></Card.Img>\r\n                        <Card.Body>\r\n                            <Card.Title>{c.courseName}</Card.Title>\r\n                            <Card.Text>Record Holder: {c.recordHolder}</Card.Text>\r\n                            <Button type=\"button\" onClick={() => this.toggleMoreClicked(c.id)}>More</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleGetRatesClicked(c.id)}>Get Rates</Button>&nbsp;\r\n                            <Button onClick={() => this.toggleBookTeeTimeClicked(c.id, c.courseName)}>Book Tee Time</Button>&nbsp;\r\n                            {this.props.userObj.type === \"operator\" ? \r\n                            <Button style={{display: 'flex', float: 'right'}} onClick={() => this.handleDelete(c.id)}>&times;</Button>\r\n                            : null}\r\n                        </Card.Body>\r\n                        <Card.Footer>Rating: {c.rating}</Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"specificCoursePage\">\r\n                <div style={{display: 'flex'}}>\r\n                    <h3>Find Speedgolf-Friendly Courses:&nbsp;</h3>\r\n                    <h3>\r\n                        <a data-tip=\"React-tooltip\">&#9432;</a>\r\n                        <ReactTooltip variant=\"bottom\" effect=\"solid\">\r\n                            <span>\r\n                                Enter search term or course name to see matching courses, or enter a space to see ALL courses in the database.\r\n                                Click on course in the list to select it, or click on 'Select' button to select all matching courses.\r\n                            </span>\r\n                        </ReactTooltip>\r\n                    </h3>\r\n                </div>\r\n\r\n                <input style={{width: '60%'}} placeholder=\"Enter course name or search term\"\r\n                 value={this.state.query} onChange={this.handleInputChange}\r\n                 disabled={this.state.searchCourseClicked ? true:false}></input>&nbsp;\r\n                <Button onClick={this.handleClick}>{this.state.selectButtonValue}</Button>&nbsp;\r\n                <Button id=\"advancedSearchBtn\" onClick={this.toggleAdvancedSearchClicked} disabled={this.state.searchCourseClicked ? true:false}>Advanced Search</Button>\r\n                {this.state.searchStart ? <div>{this.state.filteredData.map(i => <a className=\"course-search-list\" onClick={() => this.getSearchedCourse(i.id)}>{i.id}</a>)}</div> : null}\r\n                \r\n                {this.state.searchCourseClicked ? <div style={{marginTop: \"50px\"}}><h3>{this.state.courseAmount} Course Selected: </h3>\r\n                <Container fluid={true}>\r\n                    <Row noGutters>  \r\n                        {this.state.course}\r\n                    </Row>\r\n                </Container>  </div>               \r\n                 : null}\r\n\r\n\r\n                {this.state.advancedSearchClicked ? \r\n                    <AdvancedSearch handleClose={this.toggleAdvancedSearchClicked}\r\n                    searchStart={this.setSearchCourseClickedTrue}\r\n                    toggleMoreClicked={this.toggleMoreClicked}\r\n                    toggleGetRatesClicked={this.toggleGetRatesClicked}\r\n                    toggleBookTeeTimeClicked={this.toggleBookTeeTimeClicked}\r\n                    course={this.state.item}  changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    setFilteredData={this.setFilteredData}\r\n                    setCourseAmount={this.setCourseAmount}\r\n                    />\r\n                    : null}\r\n                {this.state.getRatesButtonClicked ? \r\n                    <RatesModal handleClose={this.toggleGetRatesClicked}\r\n                    course={this.state.item}  changeMode={this.props.changeMode} \r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.more ? \r\n                    <MoreModal handleClose={this.toggleMoreClicked} \r\n                        course={this.state.item}  changeMode={this.props.changeMode} \r\n                        refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n                {this.state.bookTeeTimeClicked ? \r\n                    <BookingPage handleClose={this.toggleBookTeeTimeClicked} userObj={this.props.userObj} courseName={this.state.cname}\r\n                    course={this.state.item} changeMode={this.props.changeMode}\r\n                    refreshOnUpdate={this.props.refreshOnUpdate} mode={this.props.mode} \r\n                    />\r\n                    : null}\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default SpecificCourses;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\n\r\nclass AddCourses extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            courseName: \"\",\r\n            id: \"\",\r\n            rating: \"\",\r\n            review: \"\",\r\n            picture: \"\",\r\n            location: \"\",\r\n            yardage: \"\",\r\n            runningDistance: \"\",\r\n            timePar: \"\",\r\n            bestScore: \"\",\r\n            recordHolder: \"\",\r\n            rateStandard: \"\",\r\n            rateSenior: \"\",\r\n            availability: {\r\n                day1:[false, false, false, false, false, false, false, false, false],\r\n                day2:[false, false, false, false, false, false, false, false, false],\r\n                day3:[false, false, false, false, false, false, false, false, false],\r\n                day4:[false, false, false, false, false, false, false, false, false],\r\n                day5:[false, false, false, false, false, false, false, false, false],\r\n                day6:[false, false, false, false, false, false, false, false, false],\r\n                day7:[false, false, false, false, false, false, false, false, false]\r\n            }\r\n        };\r\n    }\r\n\r\n    handleChange = (event) =>{\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    // sends a POST request to the backend to add a course to do the courses schema\r\n    addCourse = async (newData) => {\r\n        console.log(newData);\r\n        const url = '/courses/' + this.state.id;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'POST',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        if (res.status == 200) {\r\n            console.log(\"SUCCESS\");\r\n            console.log(msg);\r\n            this.props.changeMode(AppMode.COURSES_ALL);\r\n        } else {\r\n            console.log(\"FAILURE\");\r\n            console.log(msg);\r\n        }\r\n    }\r\n\r\n    // Handles form submit\r\n    // Save the state's information for submission\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        let courseData = this.state;\r\n        this.addCourse(courseData);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"addCoursePage\">\r\n                <form onSubmit={this.handleSubmit} style={{marginBottom: \"50px\"}}>\r\n                    <center>\r\n                    <h3>Add Course</h3>\r\n                    <label>\r\n                        Course ID:<br></br>\r\n                        <input id=\"id\" name=\"id\" placeholder=\"id\" value={this.state.id} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Course Name:<br></br>\r\n                        <input id=\"courseName\" name=\"courseName\" placeholder=\"courseName\" value={this.state.courseName} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Standard Rate: $<br></br>\r\n                        <input id=\"rateStandard\" name=\"rateStandard\" placeholder=\"rateStandard\" value={this.state.rateStandard} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Senior Rate: $<br></br>\r\n                        <input id=\"rateSenior\" name=\"rateSenior\" placeholder=\"rateSenior\" value={this.state.rateSenior} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Rating:<br></br>\r\n                        <input id=\"rating\" name=\"rating\" placeholder=\"rating\" value={this.state.rating} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Review:<br></br>\r\n                        <input id=\"review\" name=\"review\"  placeholder=\"review\" value={this.state.review} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Picture:<br></br>\r\n                        <input id=\"picture\" name=\"picture\"  placeholder=\"picture\" value={this.state.picture} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Location:<br></br>\r\n                        <input id=\"location\" name=\"location\"  placeholder=\"location\" value={this.state.location} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Yardage:<br></br>\r\n                        <input id=\"yardage\" name=\"yardage\"  placeholder=\"yardage\" value={this.state.yardage} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Running Distance:<br></br>\r\n                        <input id=\"runningDistance\" name=\"runningDistance\"  placeholder=\"runningDistance\" value={this.state.runningDistance} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Time Par:<br></br>\r\n                        <input id=\"timePar\" name=\"timePar\"  placeholder=\"timePar\" value={this.state.timePar} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Best Score:<br></br>\r\n                        <input id=\"bestScore\" name=\"bestScore\"  placeholder=\"bestScore\" value={this.state.bestScore} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Record Holder:<br></br>\r\n                        <input id=\"recordHolder\" name=\"recordHolder\"  placeholder=\"recordHolder\" value={this.state.recordHolder} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <button id=\"submitBtn\" type=\"submit\" style={{width: \"70%\",fontSize: \"36px\"}} \r\n                        className=\"btn btn-primary btn-color-theme\">\r\n                        &nbsp;Submit\r\n                    </button>\r\n                    </center>\r\n                </form>\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default AddCourses;","import React from 'react';\r\nimport { Navbar, Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\n\r\nclass AllAppointments extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    \r\n        this.state={\r\n            deleteClicked: false\r\n        };\r\n    }\r\n\r\n    // Get information of all courses on render\r\n    componentDidMount(){\r\n        this.getAllAppointments();\r\n    }\r\n\r\n    toggleDeleteClicked = () => {\r\n        this.setState(state => ({deleteClicked: !state.deleteClicked}));\r\n    }\r\n\r\n    handleDeleteAll = (user, course, d, t, i) =>{\r\n        this.handleDelete(user, course, d, t, i);\r\n        this.handleDeleteFromDB(user, course, d, t);\r\n    }\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (u, c, d, t, i) => {\r\n        const url = '/appointments/'+u+'/'+c+'/'+d+'/'+t+'/'+i;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getAllAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    handleDeleteFromDB = async(u, c, d, t) => {\r\n        const url = '/appointments_op/'+u+'/'+c+'/'+d+'/'+t;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getAllAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getAllAppointments = async () => {\r\n        const url = '/allappointments_op/';\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: thisCourse.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.userId} style={{ width: \"30rem\", display: \"flex\" }}>                      \r\n                        <Card.Body>\r\n                            <Button style={{float: 'right'}} onClick={() => this.handleDeleteAll(c.username, c.courseName, c.date, c.time, c.userId)}>&times;</Button>\r\n                            <Card.Title>Appointment for {c.username}</Card.Title>\r\n                            <Card.Text>Location: {c.courseName}</Card.Text>\r\n                            <Card.Text>On: {c.date}</Card.Text>\r\n                            <Card.Text>At: {c.time}</Card.Text>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"allAppointmentsPage\">\r\n                <h1></h1>\r\n                <table >\r\n                    <tbody>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>                    \r\n                            {this.state.course}\r\n                        </Row>\r\n                    </Container> \r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllAppointments;","import React from 'react';\r\n\r\nclass PaymentDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                    name: '',\r\n                    number: 0,\r\n                    expDate: ''\r\n                };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCard();\r\n    }\r\n\r\n    getCard = async() => {\r\n        const url = '/cards/'+this.props.userObj.id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCard = JSON.parse(obj);\r\n            this.setState({\r\n                card: thisCard.map((c) =>(\r\n                    {\r\n                        name: c.name,\r\n                        number: c.number,\r\n                        expDate: c.expDate\r\n                    }\r\n                ))\r\n            });\r\n            \r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        let data = this.state;\r\n        console.log(data);\r\n        console.log(this.state.card);\r\n        if (this.state.card[0].name === data.name && this.state.card[0].number === parseInt(data.number) && this.state.card[0].expDate === data.expDate)\r\n        {\r\n            let i = this.props.info;\r\n            this.props.handlePayment(i.userId,i.username,i.courseName,i.date,i.time,i.paid);\r\n            this.props.handleUserPayment(i.mmId,i.userId,i.username,i.courseName,i.date,i.time,i.paid);\r\n            this.props.close();\r\n        }\r\n        else {\r\n            alert(\"INVALID CARD\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal payment-dialogue\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Enter Card Information</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                  <center>\r\n                    <label>\r\n                        Name on Card: <br></br>\r\n                        <input id=\"name\" name=\"name\" placeholder=\"name\" value={this.state.name} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Card Number: <br></br>\r\n                        <input id=\"number\" name=\"number\" placeholder=\"number\" value={this.state.number} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Expiration Date: (format: MM/YY)<br></br>\r\n                        <input id=\"expDate\" name=\"expDate\" placeholder=\"expDate\" value={this.state.expDate} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                  </center>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-danger\" onClick={this.handleSubmit}>\r\n                  Verify Card</button>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentDialog;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport { Navbar, Container, Row, Col, Card, Button } from \"react-bootstrap\";\r\nimport { async } from 'regenerator-runtime';\r\nimport PaymentDialog from './PaymentDialog';\r\n\r\nclass MyAppointments extends React.Component {\r\n\r\n    constructor(){\r\n        super();\r\n    \r\n        this.state={\r\n            matched: false,\r\n            payClicked: false\r\n        };\r\n    }\r\n\r\n    // Get information of all courses on render\r\n    componentDidMount(){\r\n        this.getMyAppointments();\r\n    }\r\n\r\n    toggleSetMatched = (s) => {\r\n        this.setState(state => ({matched: !state.matched}));\r\n    }\r\n\r\n    togglePayClicked = () => {\r\n        this.setState(state => ({payClicked: !state.payClicked}));\r\n    }\r\n\r\n    handleDeleteAll = (user, course, d, t, i) =>{\r\n        this.handleDelete(user, course, d, t, i);\r\n        this.handleDeleteFromDB(user, course, d, t);\r\n    }\r\n\r\n    handleAllPayment = (mid, aid, u, c, d, t, p) => {\r\n        if (p === \"true\")\r\n            alert(\"You've already paid!\");\r\n        else{\r\n            this.setState({info: {\r\n                mmId: mid,\r\n                userId: aid,\r\n                username: u,\r\n                courseName: c,\r\n                date: d,\r\n                time: t,\r\n                paid: p\r\n            }});\r\n            this.togglePayClicked();\r\n            // this.handlePayment(aid, u, c, d, t, p);\r\n            // this.handleUserPayment(mid, aid, u, c, d, t, p);\r\n        }\r\n    }   \r\n\r\n    handleUserPayment = async (mid, aid, u, c, d, t, p) => {\r\n        let newData = {\r\n            userId: aid,\r\n            username: u,\r\n            courseName: c,\r\n            date: d,\r\n            time: t,\r\n            paid: \"true\"\r\n        }\r\n        const url = '/appointments/'+this.props.userObj.id+'/'+mid;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            alert(\"Paid\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_MYAPPT);\r\n        }\r\n    }\r\n\r\n    handlePayment = async(aid, u, c, d, t, p) => {\r\n        let newData = {\r\n            userId: aid,\r\n            username: u,\r\n            courseName: c,\r\n            date: d,\r\n            time: t,\r\n            paid: \"true\"\r\n        }\r\n        const url = '/appointments_op/'+u+'/'\r\n                                        +c+'/'\r\n                                        +d+'/'\r\n                                        +t;\r\n        const res = await fetch(url, {\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n                },\r\n            method: 'PUT',\r\n            body: JSON.stringify(newData)}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status === 200) {\r\n            alert(\"Paid\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            this.props.refreshOnUpdate(AppMode.COURSES_MYAPPT);\r\n        }\r\n    }\r\n\r\n    // Delete course with this id from database\r\n    handleDelete = async (u, c, d, t, i) => {\r\n        const url = '/appointments/'+u+'/'+c+'/'+d+'/'+t+'/'+i;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    handleDeleteFromDB = async(u, c, d, t) => {\r\n        const url = '/appointments_op/'+u+'/'+c+'/'+d+'/'+t;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        console.log(msg);\r\n        if (res.status == 200) {\r\n            console.log(\"APPOINTMENT CANCELLED\");\r\n            this.getMyAppointments();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    // Get information of all courses to show on page\r\n    getMyAppointments = async () => {\r\n        const url = '/appointments/'+this.props.userObj.id;\r\n        fetch(url)\r\n        .then((response) => {\r\n            if (response.status == 200)\r\n                return response.json();\r\n            else\r\n            {\r\n                throw Error(response.statusText);\r\n            }\r\n        })\r\n        .then((obj) => \r\n        {\r\n            console.log(\"GET SUCCESS!\");\r\n            let thisCourse = JSON.parse(obj);\r\n            this.setState({\r\n                course: thisCourse.map((c) =>(\r\n                    <Col  style={{marginTop: \"20px\", marginBottom: \"50px\"}}>\r\n                        <Card key={c.userId} style={{ width: \"30rem\", display: \"flex\" }}>                      \r\n                        <Card.Body>\r\n                            <Button style={{float: 'right'}} onClick={() => this.handleDeleteAll(c.username, c.courseName, c.date, c.time, c.userId)}>&times;</Button>\r\n                            <Card.Title>Appointment for {c.username}</Card.Title>\r\n                            <Card.Text>Location: {c.courseName}</Card.Text>\r\n                            <Card.Text>On: {c.date}</Card.Text>\r\n                            <Card.Text>At: {c.time}</Card.Text>\r\n                            <Button style={{float: 'right'}} onClick={() => this.handleAllPayment(c._id, c.userId, c.username, c.courseName, c.date, c.time, c.paid)}>{c.paid === \"true\" ? \"Paid\": \"Pay\"}</Button>\r\n                        </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))\r\n            });\r\n        }).catch((error) =>{\r\n            console.log(\"GET ERROR!\");\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div id=\"myAppointmentsPage\">\r\n                <h1></h1>\r\n                <table >\r\n                    <tbody>\r\n                    <Container fluid={true}>\r\n                        <Row noGutters>                    \r\n                            {this.state.course}\r\n                        </Row>\r\n                    </Container> \r\n                    </tbody>\r\n                </table>\r\n                {this.state.payClicked ? <PaymentDialog userObj={this.props.userObj} info={this.state.info}\r\n                toggleSetMatched={this.toggleSetMatched} close={this.togglePayClicked}\r\n                handleUserPayment={this.handleUserPayment} handlePayment={this.handlePayment}></PaymentDialog> :null}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyAppointments;","import React from 'react';\r\nimport AppMode from '../AppMode';\r\nimport AllCourses from './AllCourses.js';\r\nimport NearbyCourses from './NearbyCourses.js';\r\nimport SpecificCourses from './SpecificCourses.js';\r\nimport AddCourses from './AddCourses.js';\r\nimport AllAppointments from './AllAppointments.js';\r\nimport MyAppointments from './MyAppointments';\r\n\r\nclass CoursesPage extends React.Component {\r\n    render() {\r\n        switch(this.props.mode){\r\n            case AppMode.COURSES:\r\n                return (<SpecificCourses userObj={this.props.userObj} mode={this.props.mode} changeMode={this.props.changeMode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n            case AppMode.COURSES_NEARBY:\r\n                return (<NearbyCourses changeMode={this.props.changeMode} mode={this.props.mode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n            case AppMode.COURSES_ALL:\r\n                return (<AllCourses changeMode={this.props.changeMode} mode={this.props.mode} refreshOnUpdate={this.props.refreshOnUpdate} userObj={this.props.userObj}/>);\r\n            case AppMode.COURSES_ADD:\r\n                return (<AddCourses changeMode={this.props.changeMode}/>);\r\n            case AppMode.COURSES_APPT:\r\n                return (<AllAppointments userObj={this.props.userObj} changeMode={this.props.changeMode}/>);\r\n            case AppMode.COURSES_MYAPPT:\r\n                return (<MyAppointments userObj={this.props.userObj} changeMode={this.props.changeMode} refreshOnUpdate={this.props.refreshOnUpdate}/>);\r\n        }\r\n    }   \r\n}\r\n\r\nexport default CoursesPage;","import React from 'react';\r\n\r\nclass AboutBox extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-dialog modal-lg\">\r\n            <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n                <h3>About SpeedScore</h3>\r\n                <button className=\"modal-close\" onClick={this.props.close}>\r\n                    &times;\r\n                </button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n                <img\r\n                src=\"https://dl.dropboxusercontent.com/s/awuwr1vpuw1lkyl/SpeedScore4SplashLogo.png\"\r\n                height=\"200\" width=\"200\"/>\r\n                <h3>The World's First and Only Suite of Apps for\r\n                Speedgolf</h3>\r\n                <p>Version CptS 489 Fa20 Complete (MERN)<br/>\r\n                &copy; 2017-20 The Professor of Speedgolf. All rights\r\n                reserved.\r\n                </p>\r\n                <div style={{textAlign: \"left\"}}>\r\n                <p>SpeedScore apps support</p>\r\n                <ul>\r\n                <li>live touranment scoring (<i>SpeedScore Live&reg;</i>)</li>\r\n                <li>tracking personal speedgolf rounds and sharing results\r\n                (<i>SpeedScore Track&reg;</i>)</li>\r\n                <li>finding speedgolf-friendly courses, booking tee times, and\r\n                paying to play speedgolf by the minute (<i>SpeedScore\r\n                Play&reg;</i>)</li>\r\n                </ul>\r\n                <p>SpeedScore was first developed by Dr. Chris Hundhausen,\r\n                associate professor of computer science at Washington State\r\n                University and the <i>Professor of Speedgolf</i>, with support\r\n                from Scott Dawley, CEO of Speedgolf USA, LLC.</p>\r\n                <p>For more information on SpeedScore, visit <a\r\n                href=\"http://speedscore.live\" target=\"_blank\">SpeedScore's web\r\n                site</a>. For more information on speedgolf, visit <a\r\n                href=\"http://playspeedgolf.com\"\r\n                target=\"_blank\">playspeedgolf.com</a> and <a\r\n                href=\"http://usaspeedgolf.com\" target=\"_blank\">Speedgolf\r\n                USA</a>.</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                <button className=\"btn btn-primary btn-color-theme\"\r\n                onClick={this.props.close}>OK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default AboutBox;","import React from 'react';\r\n\r\nclass AddCardDialog extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n                    name: '',\r\n                    number: 0,\r\n                    expDate: '',\r\n                    cardId: '',\r\n                    deleteClicked: false\r\n                };\r\n    }\r\n    \r\n    //componentDidMount -- If we are editing an existing card, we need to grab the data from\r\n    //the database and push them into the state.\r\n    async componentDidMount() {\r\n        //obtain current card data from database and push into state\r\n        const url = '/cards/' + this.props.userId;\r\n        const res = await fetch(url);\r\n        const json = await res.json();\r\n        const thisCard = JSON.parse(json);\r\n        if (thisCard.length !== 0)\r\n        {\r\n            this.props.setCardExist();\r\n            this.setState({\r\n                name: thisCard[0].name,\r\n                number: thisCard[0].number,\r\n                expDate: thisCard[0].expDate,\r\n                cardId: thisCard[0]._id\r\n            });\r\n        }\r\n        else{\r\n            this.setState({\r\n                name: '',\r\n                number: 0,\r\n                expDate: ''\r\n            }); \r\n        }\r\n    }\r\n    \r\n    handleChange = (event) => {\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    \r\n    addCard = async(data) =>{\r\n        console.log(data);\r\n        if (this.props.cardExist)\r\n        {\r\n            const url = '/cards/' + this.props.userId + '/' + this.state.cardId;\r\n            let res;\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'PUT',\r\n                body: JSON.stringify(data)}); \r\n            if (res.status == 200) { //successful account creation!\r\n            {\r\n                alert(\"Card Edited\");\r\n                this.props.setCardExist();\r\n            }\r\n            } else { //Unsuccessful account update\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                alert(resText);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            const url = '/cards/' + this.props.userId;\r\n            let res;\r\n            res = await fetch(url, {\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json'\r\n                    },\r\n                method: 'POST',\r\n                body: JSON.stringify(data)}); \r\n            if (res.status == 200) { //successful account creation!\r\n            {\r\n                alert(\"Card Added\");\r\n                this.props.setCardExist();\r\n            }\r\n            } else { //Unsuccessful account update\r\n                //Grab textual error message\r\n                const resText = await res.text();\r\n                alert(resText);\r\n            }\r\n        }\r\n        this.props.close();\r\n    }\r\n\r\n    handleSubmit = (event) =>{\r\n        event.preventDefault();\r\n        let data = {\r\n            name: this.state.name,\r\n            number: parseInt(this.state.number),\r\n            expDate: this.state.expDate\r\n        }\r\n        this.addCard(data);\r\n    }\r\n\r\n    handleDelete = async() => {\r\n        const url = '/cards/' + this.props.userObj.id + '/' + this.state.cardId;\r\n        const res = await fetch(url, {method: 'DELETE'}); \r\n        const msg = await res.text();\r\n        if (res.status == 200) {\r\n            alert(\"Card Deleted!\");\r\n            this.setState({deleteClicked: false});\r\n            this.props.close();\r\n            this.props.setCardDeleted();\r\n        } else {\r\n            alert(msg);\r\n        }  \r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div id=\"aboutModal\" className=\"modal\" role=\"dialog\">\r\n        <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <center>\r\n                <h3 className=\"modal-title\"><b>Enter Card Information</b></h3>\r\n              </center>\r\n               <button id=\"modalClose\" className=\"modal-close\" onClick={this.props.close}>\r\n                 &times;</button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form>\r\n                  <center>\r\n                    <label>\r\n                        Name on Card: <br></br>\r\n                        <input id=\"name\" name=\"name\" placeholder=\"name\" value={this.state.name} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Card Number: <br></br>\r\n                        <input id=\"number\" name=\"number\" placeholder=\"number\" value={this.state.number} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                    <label>\r\n                        Expiration Date: (format: MM/YY)<br></br>\r\n                        <input id=\"expDate\" name=\"expDate\" placeholder=\"expDate\" value={this.state.expDate} onChange={this.handleChange} required></input>\r\n                    </label>\r\n                    <p></p>\r\n                  </center>\r\n              </form>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n                  <button className=\"btn btn-success\" onClick={this.handleSubmit}>\r\n                  {this.props.cardExist ? \"Edit Card\" : \"Add Card\"}</button>\r\n                  {this.props.cardExist ? <button className=\"btn btn-danger\" onClick={() => this.setState({deleteClicked: true})}>\r\n                  Delete Card</button> : null}\r\n            </div>\r\n        </div>\r\n        {this.state.deleteClicked ? \r\n                <div className=\"modal\" role=\"dialog\">\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h3>Are you sure you want to delete the card?</h3>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                <button className=\"btn btn-danger\" onClick={this.handleDelete}>\r\n                                    YES\r\n                                </button>\r\n                                <button className=\"btn btn-success\" onClick={() => this.setState({deleteClicked: false})}>\r\n                                    CANCEL\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        : null}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCardDialog;","import React from 'react';\r\nimport NavBar from './NavBar.js';\r\nimport SideMenu from './SideMenu.js';\r\nimport ModeBar from './ModeBar.js';\r\nimport CreateEditAccountDialog from './CreateEditAccountDialog.js'\r\nimport LoginPage from './LoginPage.js';\r\nimport AppMode from \"./../AppMode.js\";\r\nimport FeedPage from './FeedPage.js';\r\nimport Rounds from './Rounds.js';\r\nimport CoursesPage from './CoursesPage.js';\r\nimport AboutBox from './AboutBox.js';\r\nimport AddCardDialog from './AddCardDialog.js';\r\n\r\nconst modeTitle = {};\r\nmodeTitle[AppMode.LOGIN] = \"Welcome to SpeedScore\";\r\nmodeTitle[AppMode.FEED] = \"Activity Feed\";\r\nmodeTitle[AppMode.ROUNDS] = \"My Rounds\";\r\nmodeTitle[AppMode.ROUNDS_LOGROUND] = \"Log New Round\";\r\nmodeTitle[AppMode.ROUNDS_EDITROUND] = \"Edit Round\";\r\nmodeTitle[AppMode.COURSES] = \"Search Courses\";\r\nmodeTitle[AppMode.COURSES_NEARBY] = \"Nearby Courses\";\r\nmodeTitle[AppMode.COURSES_ALL] = \"All Speedgolf-Friendly Courses\";\r\nmodeTitle[AppMode.COURSES_ADD] = \"Add a Course\";\r\nmodeTitle[AppMode.COURSES_APPT] = \"All Appointments\";\r\nmodeTitle[AppMode.COURSES_MYAPPT] = \"My Appointments\";\r\n\r\nconst modeToPage = {};\r\nmodeToPage[AppMode.LOGIN] = LoginPage;\r\nmodeToPage[AppMode.FEED] = FeedPage;\r\nmodeToPage[AppMode.ROUNDS] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_LOGROUND] = Rounds;\r\nmodeToPage[AppMode.ROUNDS_EDITROUND] = Rounds;\r\nmodeToPage[AppMode.COURSES] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_NEARBY] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_ALL] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_ADD] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_APPT] = CoursesPage;\r\nmodeToPage[AppMode.COURSES_MYAPPT] = CoursesPage;\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = {mode: AppMode.LOGIN,\r\n                  menuOpen: false,\r\n                  authenticated: false,\r\n                  userObj: {displayName: \"\", profilePicURL: \"\"},\r\n                  editAccount: false,\r\n                  showEditAccountDialog: false,\r\n                  statusMsg: \"\",\r\n                  showAboutDialog: false,\r\n                  addCardClicked: false,\r\n                  cardExist: false\r\n                 };\r\n  }\r\n\r\n  //componentDidMount\r\n  componentDidMount() {\r\n    if (!this.state.authenticated) { \r\n      //Use /auth/test route to (re)-test authentication and obtain user data\r\n      fetch(\"/auth/test\")\r\n        .then((response) => response.json())\r\n        .then((obj) => {\r\n          if (obj.isAuthenticated) {\r\n            this.setState({\r\n              userObj: obj.user,\r\n              authenticated: true,\r\n              mode: AppMode.COURSES_ALL //We're authenticated so can get into the app.\r\n            });\r\n          }\r\n        }\r\n      )\r\n    } \r\n  }\r\n\r\n  //refreshOnUpdate(newMode) -- Called by child components when user data changes in \r\n  //the database. The function calls the users/:userid (GET) route to update \r\n  //the userObj state var based on the latest database changes, and sets the \r\n  //mode state var is set to newMode. After this method is called, the\r\n  //App will re-render itself, forcing the new data to \r\n  //propagate to the child components when they are re-rendered.\r\n  refreshOnUpdate = async(newMode) => {\r\n    let response = await fetch(\"/users/\" + this.state.userObj.id);\r\n    response = await response.json();\r\n    const obj = JSON.parse(response);\r\n    this.setState({\r\n      userObj: obj,\r\n      mode: newMode\r\n    });\r\n  }\r\n\r\n\r\n  handleChangeMode = (newMode) => {\r\n    this.setState({mode: newMode});\r\n  }\r\n\r\n  openMenu = () => {\r\n    this.setState({menuOpen : true});\r\n  }\r\n  \r\n  closeMenu = () => {\r\n    this.setState({menuOpen : false});\r\n  }\r\n\r\n  toggleMenuOpen = () => {\r\n    this.setState(prevState => ({menuOpen: !prevState.menuOpen}));\r\n  }\r\n\r\n  setUserId = (Id) => {\r\n    this.setState({userId: Id,\r\n                   authenticated: true});\r\n  }\r\n\r\n  showEditAccount = () => {\r\n    this.setState({showEditAccountDialog: true});\r\n\r\n  }\r\n\r\n  cancelEditAccount = () => {\r\n    this.setState({showEditAccountDialog: false});\r\n  }\r\n\r\n  setUserObjType = (newType) => {\r\n    this.setState({userObj: newType});\r\n  }\r\n\r\n  toggleAddCardClicked = () => {\r\n    this.setState(state => ({addCardClicked: !state.addCardClicked}));\r\n  }\r\n\r\n  //editAccountDone -- called after successful edit or\r\n  //deletion of user account. msg contains the status\r\n  //message and deleted indicates whether an account was\r\n  //edited (deleted == false) or deleted (deleted == true)\r\n  editAccountDone = (msg, deleted) => {\r\n    if (deleted) {\r\n      this.setState({showEditAccountDialog: false,\r\n                     statusMsg: msg,\r\n                     mode: AppMode.LOGIN});\r\n      } else {\r\n        this.setState({showEditAccountDialog: false,\r\n          statusMsg: msg});\r\n      }\r\n  }\r\n\r\n  closeStatusMsg = () => {\r\n    this.setState({statusMsg: \"\"});\r\n  }\r\n\r\n  render() {\r\n    const ModePage = modeToPage[this.state.mode];\r\n    return (\r\n      <div className=\"padded-page\">\r\n        {this.state.showAboutDialog ? \r\n          <AboutBox close={() => this.setState({showAboutDialog: false})}/> : null}\r\n        {this.state.statusMsg != \"\" ? <div className=\"status-msg\">\r\n              <span>{this.state.statusMsg}</span>\r\n              <button className=\"modal-close\" onClick={this.closeStatusMsg}>\r\n                  <span className=\"fa fa-times\"></span></button></div> : null}\r\n        {this.state.showEditAccountDialog ? \r\n            <CreateEditAccountDialog \r\n              create={false} \r\n              userId={this.state.userObj.id} \r\n              done={this.editAccountDone} \r\n              cancel={this.cancelEditAccount}/> : null}\r\n        {this.state.addCardClicked ? \r\n          <AddCardDialog \r\n              userObj={this.state.userObj}  \r\n              cardExist={this.state.cardExist}\r\n              setCardDeleted={() => (this.setState({cardExist: false}))}\r\n              setCardExist={() => (this.setState({cardExist: true}))}\r\n              userId={this.state.userObj.id}\r\n              close={() => (this.setState({addCardClicked: false}))} /> : null}\r\n        <NavBar \r\n          aboutOpen={this.state.showAboutDialog}\r\n          title={modeTitle[this.state.mode]} \r\n          mode={this.state.mode}\r\n          changeMode={this.handleChangeMode}\r\n          menuOpen={this.state.menuOpen}\r\n          toggleMenuOpen={this.toggleMenuOpen}/>\r\n          <SideMenu \r\n            toggleAddCardClicked={this.toggleAddCardClicked}\r\n            type={this.state.userObj.type}\r\n            changeMode={this.handleChangeMode}\r\n            menuOpen = {this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            toggleMenuOpen={this.toggleMenuOpen}\r\n            displayName={this.state.userObj.displayName}\r\n            profilePicURL={this.state.userObj.profilePicURL}\r\n            localAccount={this.state.userObj.authStrategy === \"local\"}\r\n            editAccount={this.showEditAccount}\r\n            logOut={() => this.handleChangeMode(AppMode.LOGIN)}\r\n            showAbout={() => {this.setState({showAboutDialog: true})}}/>\r\n          <ModeBar \r\n            aboutOpen={this.state.showAboutDialog}\r\n            mode={this.state.mode} \r\n            changeMode={this.handleChangeMode}\r\n            menuOpen={this.state.menuOpen}/>\r\n          <ModePage \r\n            setUserObjType={this.setUserObjType}\r\n            menuOpen={this.state.menuOpen}\r\n            mode={this.state.mode}\r\n            changeMode={this.handleChangeMode}\r\n            userObj={this.state.userObj}\r\n            refreshOnUpdate={this.refreshOnUpdate}/>\r\n      </div>\r\n    );  \r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './styles/index.css';\r\nimport App from './components/App.js';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}